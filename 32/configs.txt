class MoleMole.Config.ConfigAbility {
	string abilityName
	MoleMole.Config.ConfigAbilityMixin[] abilityMixins
	map<string,MoleMole.Config.DynamicArgument> abilitySpecials
	map<string,MoleMole.Config.ConfigAbilityModifier> modifiers
	MoleMole.Config.ConfigAbilityModifier defaultModifier
	MoleMole.Config.ConfigAbilityAction[] onAdded
	MoleMole.Config.ConfigAbilityAction[] onRemoved
	MoleMole.Config.ConfigAbilityAction[] onAbilityStart
	MoleMole.Config.ConfigAbilityAction[] onKill
	MoleMole.Config.ConfigAbilityAction[] onFieldEnter
	MoleMole.Config.ConfigAbilityAction[] onFieldExit
	MoleMole.Config.ConfigAbilityAction[] onAttach
	MoleMole.Config.ConfigAbilityAction[] onDetach
	MoleMole.Config.ConfigAbilityAction[] onAvatarIn
	MoleMole.Config.ConfigAbilityAction[] onAvatarOut
	MoleMole.Config.ConfigAbilityAction[] onVehicleIn
	MoleMole.Config.ConfigAbilityAction[] onVehicleOut
	MoleMole.Config.ConfigAbilityAction[] onTriggerAvatarRay
	MoleMole.Config.ConfigAbilityAction[] onZoneEnter
	MoleMole.Config.ConfigAbilityAction[] onZoneExit
	bool isDynamicAbility
	map<string,MoleMole.Config.ConfigAbilityPropertyEntry> abilityDefinedProperties
}
class MoleMole.Config.ConfigAbilityModifier {
	MoleMole.Config.ModifierTimeScale timeScale
	MoleMole.Config.ModifierStacking stacking
	MoleMole.Config.ConfigModifierStackingOption stackingOption
	bool isBuff
	bool isDebuff
	string modifierName
	bool isUnique
	MoleMole.Config.DynamicFloat duration
	MoleMole.Config.ElementType elementType
	MoleMole.Config.DynamicFloat elementDurability
	float maxElementDurability
	float purgeIncrement
	bool isElementDurabilityMutable
	bool forceTriggerBurning
	bool overrideWeaponElement
	MoleMole.Config.DynamicFloat thinkInterval
	MoleMole.Config.ConfigAbilityMixin[] modifierMixins
	bool trimThinkInterval
	map<string,MoleMole.Config.DynamicFloat> properties
	MoleMole.Config.AbilityState state
	MoleMole.Config.ConfigAbilityStateOption stateOption
	bool muteStateDisplayEffect
	bool applyAttackerWitchTimeRatio
	MoleMole.Config.ConfigAbilityAction[] onAdded
	MoleMole.Config.ConfigAbilityAction[] onRemoved
	MoleMole.Config.ConfigAbilityAction[] onBeingHit
	MoleMole.Config.ConfigAbilityAction[] onAttackLanded
	MoleMole.Config.ConfigAbilityAction[] onHittingOther
	MoleMole.Config.ConfigAbilityAction[] onHeal
	MoleMole.Config.ConfigAbilityAction[] onBeingHealed
	MoleMole.Config.ConfigAbilityAction[] onThinkInterval
	bool onThinkIntervalIsFixedUpdate
	MoleMole.Config.ConfigAbilityAction[] onKill
	MoleMole.Config.ConfigAbilityAction[] onCrash
	MoleMole.Config.ConfigAbilityAction[] onAvatarIn
	MoleMole.Config.ConfigAbilityAction[] onAvatarOut
	MoleMole.Config.ConfigAbilityAction[] onVehicleIn
	MoleMole.Config.ConfigAbilityAction[] onVehicleOut
	MoleMole.Config.ConfigAbilityAction[] onZoneEnter
	MoleMole.Config.ConfigAbilityAction[] onZoneExit
	MoleMole.Config.ConfigAbilityAction[] onReconnect
	MoleMole.Config.ConfigAbilityAction[] onChangeAuthority
	MoleMole.Config.EntityType[] forbiddenEntities
	bool fireEventWhenApply
	bool isDurabilityGlobal
	bool tickThinkIntervalAfterDie
	bool thinkIntervalIgnoreTimeScale
	bool reduceDurablityIgnoreTimeScale
	bool isLimitedProperties
	bool forceSyncToRemote
	vint buffID
	bool retainWhenDurabilityIsZero
	MoleMole.Config.ModifierTag[] modifierTags
	bool useDummyAbility
	MoleMole.Config.ConfigDummyAbilityOption dummyAbilityOption
}
class MoleMole.Config.ConfigModifierStackingOption {
	string abilitySpecialName
	MoleMole.Config.UniqueModifierCond uniqueModifierCondition
	MoleMole.Config.DynamicFloat maxModifierNumForMultipleType
	bool enableMixedUnique
}
class MoleMole.Config.ConfigAbilityStateOption {
}
class MoleMole.Config.ConfigDummyAbilityOption {
	bool disableApplyModifierError
}
class MoleMole.Config.ConfigAbilityPropertyEntry {
	MoleMole.Config.PropertyType Type
	float DefaultValue
	float Ceiling
	float Floor
	MoleMole.Config.StackMethod Stacking
	bool Succeed
	bool UseTag
	float LimitedTagCeiling
	float LimitedTagFloor
}
class MoleMole.Config.ConfigDummyAbility : MoleMole.Config.ConfigAbility {
}
class MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ConfigAbilityActionToken token
	MoleMole.Config.AbilityTargetting target
	MoleMole.Config.SelectTargets otherTargets
	bool doOffStage
	bool doAfterDie
	bool canBeHandledOnRecover
	bool muteRemoteAction
	MoleMole.Config.ConfigAbilityPredicate[] predicates
	MoleMole.Config.ConfigAbilityPredicate[] predicatesForeach
}
class MoleMole.Config.ConfigAbilityActionToken {
	vint cancelWithEntityTickLod
	vint channelId
	vint weight
	vint tokenCostType
	MoleMole.Config.ActionTokenType tokenType
}
class MoleMole.Config.FixedBool {
	bool value
}
class MoleMole.Config.ApplyModifier : MoleMole.Config.ConfigAbilityAction {
	string modifierName
}
class MoleMole.Config.EnableHDMesh : MoleMole.Config.ConfigAbilityAction {
	bool enable
	string hdMeshKey
}
class MoleMole.Config.DisableAffectedByWorld : MoleMole.Config.ConfigAbilityAction {
	bool disableWeatherEffect
}
class MoleMole.Config.BaseUtilityAction : MoleMole.Config.ConfigAbilityAction {
}
class MoleMole.Config.Predicated : MoleMole.Config.BaseUtilityAction {
	MoleMole.Config.ConfigAbilityPredicate[] targetPredicates
	MoleMole.Config.ConfigAbilityAction[] successActions
	MoleMole.Config.ConfigAbilityAction[] failActions
}
class MoleMole.Config.ApplyLevelModifier : MoleMole.Config.ConfigAbilityAction {
	string modifierName
}
class MoleMole.Config.AttachModifier : MoleMole.Config.ConfigAbilityAction {
	string modifierName
}
class MoleMole.Config.RemoveUniqueModifier : MoleMole.Config.ConfigAbilityAction {
	string modifierName
}
class MoleMole.Config.FireEffect : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicString effectPattern
	string[] othereffectPatterns
	MoleMole.Config.ConfigBornType born
	bool ownedByLevel
	bool useY
	float scale
	MoleMole.Config.DynamicFloat effectTempleteID
	bool setSelfAsEffectPluginTarget
	bool useRemoteSelfPos
	bool isPlatformDependent
}
class MoleMole.Config.FireEffectFirework : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicString effectPattern
	MoleMole.Config.ConfigBornType born
	float scale
}
class MoleMole.Config.FireSubEmitterEffect : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicString effectPattern
	MoleMole.Config.ConfigBornType born
	float scale
}
class MoleMole.Config.FireEffectForStorm : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ConfigBornType born
	float height
}
class MoleMole.Config.FireEffectToTarget : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicString effectPattern
	bool reverse
	bool fromSelf
	float scale
}
class MoleMole.Config.FireHitEffect : MoleMole.Config.ConfigAbilityAction {
	string hitEntity
	MoleMole.Config.ConfigHitScene hitScene
}
class MoleMole.Config.ConfigHitScene {
	string defaultEffect
	map<string,string> surfaceEffect
}
class MoleMole.Config.AvatarSkillStart : MoleMole.Config.ConfigAbilityAction {
	vuint skillID
	MoleMole.Config.DynamicFloat cdRatio
	MoleMole.Config.DynamicFloat costStaminaRatio
}
class MoleMole.Config.AvatarShareCDSkillStart : MoleMole.Config.ConfigAbilityAction {
	vuint skillID
	vuint shareCDType
}
class MoleMole.Config.EntityDoSkill : MoleMole.Config.ConfigAbilityAction {
	vuint skillID
	bool isHold
}
class MoleMole.Config.AvatarEnterFocus : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.Vector cameraFollowLower
	MoleMole.Config.Vector cameraFollowUpper
	float cameraFollowMaxDegree
	float cameraFollowMinDegree
	bool cameraFastFocusMode
	bool faceToTarget
	float faceToTargetAngleThreshold
	bool changeMainSkillID
	string dragButtonName
	MoleMole.Config.FocusAssistanceGroup assistance
	bool canMove
	bool showCrosshair
	float vcam_fov
	float focusAnchorHorAngle
	float focusAnchorVerAngle
	bool disableAnim
	bool disableAimLayer
	float targetAnchorY
}
class MoleMole.Config.Vector {
	float x
	float y
	float z
}
class MoleMole.Config.FocusAssistanceGroup {
	MoleMole.Config.FocusAssistance ps4
	MoleMole.Config.FocusAssistance ps5
	MoleMole.Config.FocusAssistance other
}
class MoleMole.Config.FocusAssistance {
	bool useFocusSticky
	bool useAutoFocus
	bool useGyro
}
class MoleMole.Config.AvatarExitFocus : MoleMole.Config.ConfigAbilityAction {
	bool keepRotation
	float exitCameraRadius
}
class MoleMole.Config.AvatarEnterViewBias : MoleMole.Config.ConfigAbilityAction {
	float sphereBiasPole
	float sphereBiasElev
	float sphereRadius
	float postForwardPoleDeltaAngle
	float postForwardElevDeltaAngle
	float durationInNormalState
	bool lockZoom
	bool lockResetBack
}
class MoleMole.Config.AvatarExitViewBias : MoleMole.Config.ConfigAbilityAction {
	float lerpDuration
	float lerpRadius
}
class MoleMole.Config.AvatarExitClimb : MoleMole.Config.ConfigAbilityAction {
}
class MoleMole.Config.AvatarCameraParam : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ConfigStateCameraParam cameraParam
}
class MoleMole.Config.ConfigStateCameraParam {
	float radiusSpringRatio
	float combatElevWithHeightRatio
	float forceRadius
	float forceRadiusDuration
	bool shouldKeepForceRadius
}
class MoleMole.Config.AvatarEnterCameraShot : MoleMole.Config.ConfigAbilityAction {
	string cameraMoveCfgPath
	MoleMole.Config.AbilityCameraShotType shotType
}
class MoleMole.Config.AvatarExitCameraShot : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.AbilityCameraShotType shotType
}
class MoleMole.Config.AvatarEnterCameraShotByDistance : MoleMole.Config.ConfigAbilityAction {
	string cameraMoveCfgPath
	MoleMole.Config.AbilityCameraShotType shotType
	float distance
}
class MoleMole.Config.PlayEmoSync : MoleMole.Config.ConfigAbilityAction {
	vuint dialogID
	string emoSyncAssetPath
}
class MoleMole.Config.ControlEmotion : MoleMole.Config.ConfigAbilityAction {
	bool toggleEmoSync
	bool toggleBlink
	bool interruptBlink
	bool toggleEyeKey
}
class MoleMole.Config.SpawnAttach : MoleMole.Config.ConfigAbilityAction {
	bool enable
	string attachName
}
class MoleMole.Config.TurnDirection : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.TurnMode turnMode
}
class MoleMole.Config.TurnDirectionToPos : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ConfigBornType toPos
	float minAngle
	float maxAngle
}
class MoleMole.Config.SetCameraLockTime : MoleMole.Config.ConfigAbilityAction {
	float lockTime
}
class MoleMole.Config.FireMonsterBeingHitAfterImage : MoleMole.Config.ConfigAbilityAction {
	vuint effectIndex
}
class MoleMole.Config.FireAvatarBeingHitAfterImage : MoleMole.Config.ConfigAbilityAction {
	vuint effectIndex
}
class MoleMole.Config.FireAfterImage : MoleMole.Config.ConfigAbilityAction {
	vuint effectIndex
}
class MoleMole.Config.AttachEffect : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicString effectPattern
	MoleMole.Config.ConfigBornType born
	float scale
	MoleMole.Config.DynamicFloat effectTempleteID
	bool setSelfAsEffectPluginTarget
	bool isPlatformDependent
}
class MoleMole.Config.AttachEffectFirework : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicString effectPattern
	MoleMole.Config.ConfigBornType born
	float scale
}
class MoleMole.Config.AttachLight : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ConfigLightAttach attach
	MoleMole.Config.ConfigLightComponent light
}
class MoleMole.Config.ConfigLightAttach {
	string attachPoint
	float localPosX
	float localPosY
	float localPosZ
	float localRotX
	float localRotY
	float localRotZ
	float localRotW
}
class MoleMole.Config.ConfigLightComponent {
	string lightType
	float range
	float colorR
	float colorG
	float colorB
	float angle
	float intensity
	float indirectMult
}
class MoleMole.Config.AddGlobalValue : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicFloat value
	string key
	bool useLimitRange
	bool randomInRange
	MoleMole.Config.DynamicFloat maxValue
	MoleMole.Config.DynamicFloat minValue
}
class MoleMole.Config.SetGlobalValue : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicFloat value
	string key
	bool useLimitRange
	bool randomInRange
	MoleMole.Config.DynamicFloat maxValue
	MoleMole.Config.DynamicFloat minValue
}
class MoleMole.Config.MultiplyGlobalValue : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicFloat value
	string key
	bool useLimitRange
	bool randomInRange
	MoleMole.Config.DynamicFloat maxValue
	MoleMole.Config.DynamicFloat minValue
}
class MoleMole.Config.CopyGlobalValue : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.AbilityTargetting srcTarget
	MoleMole.Config.AbilityTargetting dstTarget
	string srcKey
	string dstKey
}
class MoleMole.Config.SetTargetNumToGlobalValue : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.AbilityTargetting srcTarget
	MoleMole.Config.SelectTargets srcOtherTargets
	MoleMole.Config.ConfigAbilityPredicate[] srcPredicates
	MoleMole.Config.AbilityTargetting dstTarget
	MoleMole.Config.SelectTargets dstOtherTargets
	MoleMole.Config.ConfigAbilityPredicate[] dstPredicates
	string key
	bool useLimitRange
	MoleMole.Config.DynamicFloat maxValue
	MoleMole.Config.DynamicFloat minValue
}
class MoleMole.Config.GetHealAmountToGlobalValue : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.GlobalValueChangeType type
	string key
}
class MoleMole.Config.GetHPHealedToGlobalValue : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.GlobalValueChangeType type
	string key
}
class MoleMole.Config.SetSameElementCountToGlobalValue : MoleMole.Config.ConfigAbilityAction {
	bool checkSameElement
	MoleMole.Config.AbilityTargetting elementBaseOn
	string globalValueKey
	MoleMole.Config.AbilityTargetting teamBaseOn
}
class MoleMole.Config.SetGlobalValueList : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.GlobalValuePair[] globalValueList
}
class MoleMole.Config.GlobalValuePair {
	string key
	MoleMole.Config.DynamicFloat value
	bool useLimitRange
	bool randomInRange
	MoleMole.Config.DynamicFloat maxValue
	MoleMole.Config.DynamicFloat minValue
}
class MoleMole.Config.SetGlobalValueToOverrideMap : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.AbilityFormula abilityFormula
	bool isFromOwner
	string globalValueKey
	string overrideMapKey
}
class MoleMole.Config.SetRandomOverrideMapValue : MoleMole.Config.ConfigAbilityAction {
	float valueRangeMax
	float valueRangeMin
	string overrideMapKey
	MoleMole.Config.RoundRandomType roundType
}
class MoleMole.Config.SetOverrideMapValue : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicFloat value
	string overrideMapKey
}
class MoleMole.Config.SetCrystalShieldHpToOverrideMap : MoleMole.Config.ConfigAbilityAction {
	string overrideMapKey
}
class MoleMole.Config.SetSystemValueToOverrideMap : MoleMole.Config.ConfigAbilityAction {
	string key
	MoleMole.Config.SystemValuerType type
}
class MoleMole.Config.SetGlobalValueByTargetDistance : MoleMole.Config.ConfigAbilityAction {
	string key
	bool isXZ
}
class MoleMole.Config.ClearGlobalValue : MoleMole.Config.ConfigAbilityAction {
	string key
}
class MoleMole.Config.SumTargetWeightToSelfGlobalValue : MoleMole.Config.ConfigAbilityAction {
	string key
}
class MoleMole.Config.SetGlobalPos : MoleMole.Config.ConfigAbilityAction {
	string key
	MoleMole.Config.ConfigBornType born
	bool setTarget
}
class MoleMole.Config.AddGlobalPos : MoleMole.Config.ConfigAbilityAction {
	string key
	MoleMole.Config.ConfigBornType born
	bool setTarget
}
class MoleMole.Config.ClearGlobalPos : MoleMole.Config.ConfigAbilityAction {
	string key
	bool setTarget
}
class MoleMole.Config.SetGlobalDir : MoleMole.Config.ConfigAbilityAction {
	string key
	MoleMole.Config.ConfigBornType born
	bool setTarget
}
class MoleMole.Config.PushPos : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ConfigBornType posType
	MoleMole.Config.AbilityTargetting saveTo
}
class MoleMole.Config.ClearPos : MoleMole.Config.ConfigAbilityAction {
}
class MoleMole.Config.GetPos : MoleMole.Config.ConfigAbilityAction {
	string key
	MoleMole.Config.GetPosType posType
}
class MoleMole.Config.DamageByAttackValue : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DamageAttacker attacker
	MoleMole.Config.ConfigBornType born
	MoleMole.Config.ConfigAttackInfo attackInfo
}
class MoleMole.Config.ConfigAttackInfo {
	string attackTag
	string attenuationTag
	string attenuationGroup
	MoleMole.Config.AttenuationRedirect attenuationRedirect
	MoleMole.Config.ConfigAttackProperty attackProperty
	MoleMole.Config.ConfigHitPattern hitPattern
	bool canHitHead
	MoleMole.Config.ConfigHitPattern hitHeadPattern
	bool forceCameraShake
	MoleMole.Config.ConfigCameraShake cameraShake
	MoleMole.Config.ConfigBulletWane bulletWane
	MoleMole.Config.CanBeModifiedBy canBeModifiedBy
}
class MoleMole.Config.ConfigAttackProperty {
	MoleMole.Config.DynamicFloat damagePercentage
	MoleMole.Config.DynamicFloat damagePercentageRatio
	MoleMole.Config.ElementType elementType
	float elementRank
	MoleMole.Config.DynamicFloat elementDurability
	bool overrideByWeapon
	bool ignoreAttackerProperty
	MoleMole.Config.StrikeType strikeType
	float enBreak
	float enHeadBreak
	MoleMole.Config.AttackType attackType
	MoleMole.Config.DynamicFloat damageExtra
	MoleMole.Config.DynamicFloat bonusCritical
	MoleMole.Config.DynamicFloat bonusCriticalHurt
	bool ignoreLevelDiff
	bool trueDamage
	bool ignoreModifyDamage
}
class MoleMole.Config.ConfigHitPattern {
	string onHitEffectName
	MoleMole.Config.HitLevel hitLevel
	MoleMole.Config.DynamicFloat hitImpulseX
	MoleMole.Config.DynamicFloat hitImpulseY
	string hitImpulseType
	MoleMole.Config.ConfigHitImpulse overrideHitImpulse
	MoleMole.Config.RetreatType retreatType
	float hitHaltTime
	float hitHaltTimeScale
	bool canBeDefenceHalt
	bool muteHitText
	bool recurring
	bool forceRetreat
}
class MoleMole.Config.ConfigHitImpulse {
	MoleMole.Config.HitLevel hitLevel
	MoleMole.Config.DynamicFloat hitImpulseX
	MoleMole.Config.DynamicFloat hitImpulseY
}
class MoleMole.Config.ConfigCameraShake {
	MoleMole.Config.CameraShakeType shakeType
	float shakeRange
	float shakeTime
	float shakeDistance
	MoleMole.Config.Vector shakeDir
	MoleMole.Config.ConfigCameraShakeExt extension
}
class MoleMole.Config.ConfigCameraShakeExt {
	bool infinity
	bool baseOnCamera
	bool afterShake
	float baseCycle
	float cycleDamping
	float rangeAttenuation
}
class MoleMole.Config.ConfigBulletWane {
	float waneDelay
	float damageWaneInterval
	float damageWaneRatio
	float damageWaneMinRatio
	float elementDurabilityWaneInterval
	float elementDurabilityWaneRatio
	float elementDurabilityWaneMinRatio
	float hitLevelWaneInterval
	MoleMole.Config.HitLevel hitLevelWaneMin
}
class MoleMole.Config.HealSP : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicFloat amount
	MoleMole.Config.DynamicFloat amountByCasterMaxSPRatio
	MoleMole.Config.DynamicFloat amountByTargetMaxSPRatio
	MoleMole.Config.DynamicFloat amountByCurrentComboRatio
	bool muteHealEffect
	float healRatio
}
class MoleMole.Config.HealHP : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicFloat amount
	MoleMole.Config.DynamicFloat amountByCasterMaxHPRatio
	MoleMole.Config.DynamicFloat amountByTargetMaxHPRatio
	MoleMole.Config.DynamicFloat amountByTargetCurrentHPRatio
	MoleMole.Config.DynamicFloat amountByCasterAttackRatio
	bool muteHealEffect
	float healRatio
	bool ignoreAbilityProperty
}
class MoleMole.Config.ReviveAvatar : MoleMole.Config.HealHP {
}
class MoleMole.Config.ReviveDeadAvatar : MoleMole.Config.ReviveAvatar {
	bool isReviveOtherPlayerAvatar
	vuint skillID
	MoleMole.Config.DynamicFloat cdRatio
	float range
}
class MoleMole.Config.LoseHP : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicFloat amount
	MoleMole.Config.DynamicFloat amountByCasterMaxHPRatio
	MoleMole.Config.DynamicFloat amountByTargetMaxHPRatio
	MoleMole.Config.DynamicFloat amountByTargetCurrentHPRatio
	MoleMole.Config.DynamicFloat amountByCasterAttackRatio
	MoleMole.Config.DynamicFloat limboByTargetMaxHPRatio
	bool lethal
	bool enableInvincible
	bool enableLockHP
	bool disableWhenLoading
	bool useMeta
}
class MoleMole.Config.EnableRocketJump : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.RocketJumpType type
	bool enable
	MoleMole.Config.RocketJumpExt extention
	bool uiEffect
}
class MoleMole.Config.RocketJumpExt {
	float xzMultiplier
	float yMultiplier
}
class MoleMole.Config.ForceTriggerJump : MoleMole.Config.ConfigAbilityAction {
}
class MoleMole.Config.EnableAfterImage : MoleMole.Config.ConfigAbilityAction {
	bool enable
	vuint index
}
class MoleMole.Config.ActTimeSlow : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ConfigTimeSlow timeSlow
	bool isGlobal
}
class MoleMole.Config.ConfigTimeSlow {
	float duration
	float slowRatio
}
class MoleMole.Config.TriggerAbility : MoleMole.Config.ConfigAbilityAction {
	string abilityName
	map<string,MoleMole.Config.DynamicFloat> abilitySpecials
	bool forceUseSelfCurrentAttackTarget
}
class MoleMole.Config.TriggerCrystalLinkAbility : MoleMole.Config.ConfigAbilityAction {
	vuint id
}
class MoleMole.Config.ApplyCrystalModifier : MoleMole.Config.ConfigAbilityAction {
	string modifierName
	vuint id
}
class MoleMole.Config.RemoveModifier : MoleMole.Config.ConfigAbilityAction {
	string modifierName
}
class MoleMole.Config.RemoveModifierByAbilityStateResistanceID : MoleMole.Config.ConfigAbilityAction {
	vuint resistanceListID
}
class MoleMole.Config.SetAIParam : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicString param
	MoleMole.Config.DynamicFloat value
	bool isBool
	MoleMole.Config.ParamLogicType logicType
}
class MoleMole.Config.ActCameraShake : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ConfigCameraShake cameraShake
	MoleMole.Config.ConfigBornType born
}
class MoleMole.Config.ActCameraRadialBlur : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ConfigCameraRadialBlur cameraRadialBlur
}
class MoleMole.Config.ConfigCameraRadialBlur {
	float power
	float blurTime
	float fadeTime
}
class MoleMole.Config.SetAnimatorBool : MoleMole.Config.ConfigAbilityAction {
	string boolID
	bool value
	bool persistent
}
class MoleMole.Config.SetAnimatorInt : MoleMole.Config.ConfigAbilityAction {
	string intID
	MoleMole.Config.DynamicFloat value
	bool persistent
}
class MoleMole.Config.SetAnimatorFloat : MoleMole.Config.ConfigAbilityAction {
	string floatID
	MoleMole.Config.DynamicFloat value
	bool persistent
	bool useRandomValue
	MoleMole.Config.DynamicFloat randomValueMin
	MoleMole.Config.DynamicFloat randomValueMax
	float transitionTime
}
class MoleMole.Config.SetAnimatorTrigger : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicString triggerID
	bool MPTriggerOnRemote
}
class MoleMole.Config.ResetAnimatorTrigger : MoleMole.Config.ConfigAbilityAction {
	string triggerID
}
class MoleMole.Config.SetMaterialParamFloatByTransform : MoleMole.Config.ConfigAbilityAction {
	string matName
	string patternName
	MoleMole.Config.DynamicFloat value
	bool useCurve
	vuint lerpCurveIndex
	float lerpTime
}
class MoleMole.Config.DebugLog : MoleMole.Config.ConfigAbilityAction {
	string content
}
class MoleMole.Config.SetBulletTrackTarget : MoleMole.Config.ConfigAbilityAction {
	bool notDoIfTrackTargetAlive
}
class MoleMole.Config.TriggerBullet : MoleMole.Config.ConfigAbilityAction {
	vuint bulletID
	MoleMole.Config.ConfigBornType born
	bool ownerIsTarget
	MoleMole.Config.AbilityTargetting ownerIs
	MoleMole.Config.AbilityTargetting propOwnerIs
	bool lifeByOwnerIsAlive
	MoleMole.Config.AbilityTargetting trackTarget
	MoleMole.Config.SingleTarget[] trackTargetList
	bool sightGroupWithOwner
	bool isPeerIdFromPlayer
	bool lifeByOwnerV2
	bool dontKillSelfByClientPrediction
	bool campFollowPropOwner
	bool flushAbilityPacket
}
class MoleMole.Config.SingleTarget {
	MoleMole.Config.AbilityTargetting target
	MoleMole.Config.SelectTargets otherTargets
	MoleMole.Config.ConfigAbilityPredicate[] targetPredicates
}
class MoleMole.Config.TriggerAttackEvent : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ConfigAttackEvent attackEvent
	MoleMole.Config.TargetType targetType
	MoleMole.Config.EntityType[] entityTypes
	bool isReject
	vuint campBasedOnID
}
class MoleMole.Config.ConfigAttackEvent {
	MoleMole.Config.ConfigBaseAttackPattern attackPattern
	MoleMole.Config.ConfigAttackInfo attackInfo
}
class MoleMole.Config.TriggerAttackTargetMapEvent : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ConfigAttackTargetMapEvent attackTargetMapEvent
}
class MoleMole.Config.ConfigAttackTargetMapEvent {
	MoleMole.Config.ConfigBaseAttackPattern attackPattern
	map<MoleMole.Config.TargetType,MoleMole.Config.ConfigAttackInfo> attackInfoMap
}
class MoleMole.Config.EnableWetElectricHitBox : MoleMole.Config.ConfigAbilityAction {
	bool enabled
}
class MoleMole.Config.CreateEntity : MoleMole.Config.ConfigAbilityAction {
	bool ownerIsTarget
	MoleMole.Config.AbilityTargetting ownerIs
	MoleMole.Config.AbilityTargetting propOwnerIs
	bool lifeByOwnerIsAlive
	MoleMole.Config.ConfigBornType born
	MoleMole.Config.CheckGround checkGround
	bool sightGroupWithOwner
	bool isPeerIdFromPlayer
	bool lifeByOwnerV2
	bool dontKillSelfByClientPrediction
}
class MoleMole.Config.CheckGround {
	bool enable
	float raycastUpHeight
	float raycastDownHeight
	bool stickToGroundIfValid
	bool dontCreateIfInvalid
}
class MoleMole.Config.CreateGadget : MoleMole.Config.CreateEntity {
	vuint gadgetID
	vuint campID
	MoleMole.Config.TargetType campTargetType
	bool byServer
}
class MoleMole.Config.CreateMovingPlatform : MoleMole.Config.CreateGadget {
	vuint routeID
	float detectHeight
	float detectWidth
	bool enableRotationOffset
	MoleMole.Config.ConfigAbilityAction[] failActions
}
class MoleMole.Config.CreateItem : MoleMole.Config.CreateEntity {
}
class MoleMole.Config.TryTriggerPlatformStartMove : MoleMole.Config.ConfigAbilityAction {
	float detectHeight
	float detectWidth
	bool enableRotationOffset
	MoleMole.Config.ConfigAbilityAction[] failActions
	bool forceReset
	bool forceTrigger
}
class MoleMole.Config.KillGadget : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.SelectTargetsByChildren gadgetInfo
}
class MoleMole.Config.KillMultiBullet : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.SelectTargetsByChildren gadgetInfo
	float forceKillTime
}
class MoleMole.Config.KillSelf : MoleMole.Config.ConfigAbilityAction {
	float duration
	MoleMole.Config.DieStateFlag dieStateFlage
	bool banDrop
	bool banExp
	bool banHPPercentageDrop
	MoleMole.Config.KillSelfType killSelfType
	bool hideEntity
}
class MoleMole.Config.TriggerAudio : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.OpResponder responder
	MoleMole.Config.ConfigAudioOperation operation
}
class MoleMole.Config.TriggerDropEquipParts : MoleMole.Config.ConfigAbilityAction {
	bool dropAll
	string[] equipParts
}
class MoleMole.Config.TriggerThrowEquipPart : MoleMole.Config.ConfigAbilityAction {
	string equipPart
	bool chaseAttackTarget
	MoleMole.Config.ConfigBornType born
}
class MoleMole.Config.TriggerCreateGadgetToEquipPart : MoleMole.Config.ConfigAbilityAction {
	vuint gadgetID
	string equipPart
}
class MoleMole.Config.TriggerAuxWeaponTrans : MoleMole.Config.ConfigAbilityAction {
	bool setEnable
	string equipPart
}
class MoleMole.Config.TriggerGadgetInteractive : MoleMole.Config.ConfigAbilityAction {
}
class MoleMole.Config.TriggerSetVisible : MoleMole.Config.ConfigAbilityAction {
	bool visible
}
class MoleMole.Config.TriggerSetCastShadow : MoleMole.Config.ConfigAbilityAction {
	bool castShadow
	bool affectFakeShadow
	bool forceEnable
}
class MoleMole.Config.TriggerSetPassThrough : MoleMole.Config.ConfigAbilityAction {
	bool passThrough
}
class MoleMole.Config.TriggerSetRenderersEnable : MoleMole.Config.ConfigAbilityAction {
	string[] renderNames
	bool setEnable
}
class MoleMole.Config.TriggerHideWeapon : MoleMole.Config.ConfigAbilityAction {
	bool visible
	string[] partNames
	bool modifyAnotherValue
}
class MoleMole.Config.TriggerTaunt : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.TauntLevel tauntLevel
	float careValue
	bool tauntModifierOwner
}
class MoleMole.Config.TriggerSetChestLock : MoleMole.Config.ConfigAbilityAction {
	bool locked
}
class MoleMole.Config.ClearLockTarget : MoleMole.Config.ConfigAbilityAction {
	bool onlyAvatar
}
class MoleMole.Config.SetPoseBool : MoleMole.Config.ConfigAbilityAction {
	string boolID
	bool value
}
class MoleMole.Config.SetPoseInt : MoleMole.Config.ConfigAbilityAction {
	string intID
	vint value
}
class MoleMole.Config.SetPoseFloat : MoleMole.Config.ConfigAbilityAction {
	string floatID
	MoleMole.Config.DynamicFloat value
}
class MoleMole.Config.TriggerFaceAnimation : MoleMole.Config.ConfigAbilityAction {
	string faceAnimation
}
class MoleMole.Config.EnableCrashDamage : MoleMole.Config.ConfigAbilityAction {
	bool enable
}
class MoleMole.Config.SetCrashDamage : MoleMole.Config.ConfigAbilityAction {
	string key
}
class MoleMole.Config.TryFindBlinkPoint : MoleMole.Config.ConfigAbilityAction {
	float forwardAngle
	float minRange
	float maxRange
	float limitY
	bool ignoreWater
	bool checkInCamera
}
class MoleMole.Config.TryFindBlinkPointByBorn : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ConfigBornType born
	bool hitSceneTest
	MoleMole.Config.BlinkHitSceneTestType hitSceneType
	MoleMole.Config.DynamicFloat limitY
	bool ignoreWater
}
class MoleMole.Config.TryFindMotionChangePosByBorn : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ConfigBornType born
	string key
	bool setTarget
	bool hitSceneTest
	MoleMole.Config.DynamicFloat limitY
	bool ignoreWater
}
class MoleMole.Config.DoBlink : MoleMole.Config.ConfigAbilityAction {
}
class MoleMole.Config.DoBlinkByGlobalPos : MoleMole.Config.ConfigAbilityAction {
	string positionKey
	string directionKey
	bool useGlobalUp
}
class MoleMole.Config.AvatarDoBlink : MoleMole.Config.ConfigAbilityAction {
	bool PreferInput
	float Distance
}
class MoleMole.Config.EnableHitBoxByName : MoleMole.Config.ConfigAbilityAction {
	string[] hitBoxNames
	bool setEnable
}
class MoleMole.Config.EnablePushColliderName : MoleMole.Config.ConfigAbilityAction {
	string[] pushColliderNames
	bool setEnable
}
class MoleMole.Config.EnableSceneTransformByName : MoleMole.Config.ConfigAbilityAction {
	string[] transformNames
	bool setEnable
}
class MoleMole.Config.GenerateElemBall : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DropElemBallType dropType
	vuint configID
	MoleMole.Config.ConfigBornType born
	MoleMole.Config.DynamicFloat ratio
	float baseEnergy
}
class MoleMole.Config.Randomed : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicFloat chance
	MoleMole.Config.ConfigAbilityAction[] successActions
	MoleMole.Config.ConfigAbilityAction[] failActions
}
class MoleMole.Config.TryTriggerTrampolineJump : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ConfigAbilityAction[] failActions
	MoleMole.Config.ConfigAbilityAction[] successActions
}
class MoleMole.Config.HideUIBillBoard : MoleMole.Config.ConfigAbilityAction {
	bool hide
}
class MoleMole.Config.SendEffectTrigger : MoleMole.Config.ConfigAbilityAction {
	string parameter
	string attachPoint
	MoleMole.Config.AnimatorParamType type
	vint value
	MoleMole.Config.DynamicString effectPattern
	float floatValue
	bool notInvokeWhenNotAlive
	bool isPlatformDependent
}
class MoleMole.Config.SendDungeonFogEffectTrigger : MoleMole.Config.ConfigAbilityAction {
	string parameter
	MoleMole.Config.AnimatorParamType type
	vint value
	MoleMole.Config.DynamicString cameraFogEffectName
	MoleMole.Config.DynamicString playerFogEffectName
	float floatValue
	bool notInvokeWhenNotAlive
	bool isPlatformDependent
}
class MoleMole.Config.SendEffectTriggerToLineEffect : MoleMole.Config.ConfigAbilityAction {
	string parameter
	string attachPoint
	MoleMole.Config.AnimatorParamType type
	vint value
	MoleMole.Config.DynamicString effectPattern
	float floatValue
}
class MoleMole.Config.ChangeFollowDampTime : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicString effectPattern
	MoleMole.Config.DynamicFloat PositionDampTime
	MoleMole.Config.DynamicFloat RotationDampTime
}
class MoleMole.Config.SetSelfAttackTarget : MoleMole.Config.ConfigAbilityAction {
	bool turnToTargetImmediately
	bool turnToTargetKeepUpAxisDirection
}
class MoleMole.Config.ForceInitMassiveEntity : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ConfigBornType born
	float radius
	float angle
	float height
}
class MoleMole.Config.EnableHeadControl : MoleMole.Config.ConfigAbilityAction {
	bool enable
	bool blend
}
class MoleMole.Config.EnablePartControl : MoleMole.Config.ConfigAbilityAction {
	string[] partRootNames
	bool enable
}
class MoleMole.Config.StartDither : MoleMole.Config.ConfigAbilityAction {
	float duration
	bool reverse
}
class MoleMole.Config.Summon : MoleMole.Config.ConfigAbilityAction {
	vuint monsterID
	MoleMole.Config.ConfigBornType born
	vuint bornSlotIndex
	MoleMole.Config.AbilityTargetting faceToTarget
	vuint summonTag
	bool aliveByOwner
	bool isElite
	vuint[] affixList
	MoleMole.Config.DynamicInt levelDelta
	bool hasDrop
	bool hasExp
	bool sightGroupWithOwner
}
class MoleMole.Config.AttachAbilityStateResistance : MoleMole.Config.ConfigAbilityAction {
	vuint resistanceListID
	MoleMole.Config.AbilityState[] resistanceBuffDebuffs
	float durationRatio
}
class MoleMole.Config.FireAISoundEvent : MoleMole.Config.ConfigAbilityAction {
	float volume
}
class MoleMole.Config.SetOvergrowDamgeToGlobalValue : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ReactionTriggerType reactionTriggerType
}
class MoleMole.Config.AddElementDurability : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicFloat value
	string modifierName
	MoleMole.Config.ElementType elementType
	MoleMole.Config.SortModifierType sortModifier
	bool useLimitRange
	bool useMutiPlayerFixData
	MoleMole.Config.DynamicFloat maxValue
	MoleMole.Config.DynamicFloat minValue
}
class MoleMole.Config.SetPartControlTarget : MoleMole.Config.ConfigAbilityAction {
	string[] partRootNames
	MoleMole.Config.ControlPartTargetType targetType
}
class MoleMole.Config.DropSubfield : MoleMole.Config.ConfigAbilityAction {
	string subfieldName
}
class MoleMole.Config.EnableGadgetIntee : MoleMole.Config.ConfigAbilityAction {
	bool enable
}
class MoleMole.Config.EnableGadgetInteeMp : MoleMole.Config.EnableGadgetIntee {
}
class MoleMole.Config.RemoveVelocityForce : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.VelocityForceType[] forces
}
class MoleMole.Config.ExecuteGroupTrigger : MoleMole.Config.ConfigAbilityAction {
	string sourceName
	vint param1
	vint param2
	vint param3
}
class MoleMole.Config.ReTriggerAISkillInitialCD : MoleMole.Config.ConfigAbilityAction {
	vuint[] skillIDs
	bool forceReinit
}
class MoleMole.Config.SetAISkillCDAvailableNow : MoleMole.Config.ConfigAbilityAction {
	vuint[] skillIDs
}
class MoleMole.Config.SetAISkillGCD : MoleMole.Config.ConfigAbilityAction {
	float value
}
class MoleMole.Config.EnableAIStealthy : MoleMole.Config.ConfigAbilityAction {
	bool enable
}
class MoleMole.Config.UnlockSkill : MoleMole.Config.ConfigAbilityAction {
	vuint skillID
}
class MoleMole.Config.AddAvatarSkillInfo : MoleMole.Config.ConfigAbilityAction {
	vuint skillID
}
class MoleMole.Config.RemoveAvatarSkillInfo : MoleMole.Config.ConfigAbilityAction {
	vuint skillID
	bool refreshAfterRemove
}
class MoleMole.Config.SetCanDieImmediately : MoleMole.Config.ConfigAbilityAction {
	bool dieImmediately
}
class MoleMole.Config.PlayEmojiBubble : MoleMole.Config.ConfigAbilityAction {
	string name
}
class MoleMole.Config.AttachBulletAimPoint : MoleMole.Config.ConfigAbilityAction {
	string bulletAimPoint
}
class MoleMole.Config.EnableBulletCollisionPluginTrigger : MoleMole.Config.ConfigAbilityAction {
	bool setEnable
}
class MoleMole.Config.GuidePaimonDisappearEnd : MoleMole.Config.ConfigAbilityAction {
}
class MoleMole.Config.SetPaimonLookAtCamera : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.PaimonRequestFrom from
	bool lookat
	float minTime
	float maxTime
}
class MoleMole.Config.PaimonAction : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.PaimonRequestFrom from
	MoleMole.Config.PaimonSkill actionName
}
class MoleMole.Config.SetPaimonLookAtAvatar : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.PaimonRequestFrom from
	bool lookat
	float minTime
	float maxTime
}
class MoleMole.Config.SetPaimonTempOffset : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.PaimonRequestFrom from
	MoleMole.Config.Vector offSetPos
	float time
}
class MoleMole.Config.SetKeepInAirVelocityForce : MoleMole.Config.ConfigAbilityAction {
	bool setEnable
}
class MoleMole.Config.ForceAirStateFly : MoleMole.Config.ConfigAbilityAction {
	bool isActive
}
class MoleMole.Config.ToNearstAnchorPoint : MoleMole.Config.ConfigAbilityAction {
}
class MoleMole.Config.PushDvalinS01Process : MoleMole.Config.ConfigAbilityAction {
	float time
	float toPercentage
	bool unBreak
	bool setForce
	MoleMole.Config.Vector vector
	float attenuation
}
class MoleMole.Config.SetDvalinS01FlyState : MoleMole.Config.ConfigAbilityAction {
	vint toState
}
class MoleMole.Config.RegistToStageScript : MoleMole.Config.ConfigAbilityAction {
	string alias
}
class MoleMole.Config.SyncToStageScript : MoleMole.Config.ConfigAbilityAction {
	string alias
}
class MoleMole.Config.CalcDvalinS04RebornPoint : MoleMole.Config.ConfigAbilityAction {
	bool enable
}
class MoleMole.Config.TriggerPlayerDie : MoleMole.Config.ConfigAbilityAction {
}
class MoleMole.Config.ResetEnviroEular : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.Vector eularAngles
}
class MoleMole.Config.SetEmissionScaler : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.BodyMaterialType materialType
	bool useDefaultColor
	float value
	float duration
	float emissionPower
	MoleMole.Config.ColorVector emissionColor
}
class MoleMole.Config.ColorVector {
	float r
	float g
	float b
	float a
}
class MoleMole.Config.SetSubWeaponEmissionScaler : MoleMole.Config.ConfigAbilityAction {
	string[] subWeapons
	bool useDefaultColor
	float value
	float duration
}
class MoleMole.Config.EnterCameraLock : MoleMole.Config.ConfigAbilityAction {
	string transName
	string cfgPath
}
class MoleMole.Config.ShowUICombatBar : MoleMole.Config.ConfigAbilityAction {
	bool show
	vuint sortID
	bool changingSortID
	bool fore
}
class MoleMole.Config.ShowScreenEffect : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.EffectType effectType
	bool show
}
class MoleMole.Config.AddServerBuff : MoleMole.Config.ConfigAbilityAction {
	vuint sBuffId
	float time
}
class MoleMole.Config.RemoveServerBuff : MoleMole.Config.ConfigAbilityAction {
	vuint sBuffId
	bool isTeamBuff
}
class MoleMole.Config.ModifyAvatarSkillCD : MoleMole.Config.ConfigAbilityAction {
	vuint skillID
	vuint[] skillSlot
	MoleMole.Config.DynamicFloat cdDelta
	MoleMole.Config.DynamicFloat cdRatio
}
class MoleMole.Config.ModifyExtraSkillCD : MoleMole.Config.ConfigAbilityAction {
	vuint skillID
	MoleMole.Config.DynamicFloat cdDelta
	MoleMole.Config.DynamicFloat cdRatio
	MoleMole.Config.DynamicFloat cdMin
}
class MoleMole.Config.ModifyVehicleSkillCD : MoleMole.Config.ConfigAbilityAction {
	vuint skillID
	MoleMole.Config.DynamicFloat cdDelta
	MoleMole.Config.DynamicFloat cdRatio
}
class MoleMole.Config.ResetAbilitySpecial : MoleMole.Config.ConfigAbilityAction {
	string keyName
	string valueName
}
class MoleMole.Config.EnableAvatarFlyStateTrail : MoleMole.Config.ConfigAbilityAction {
	bool setEnable
}
class MoleMole.Config.ShowReminder : MoleMole.Config.ConfigAbilityAction {
	vuint id
	bool localOnly
}
class MoleMole.Config.UpdateReactionDamage : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.AbilityTargetting levelTarget
	string reactionDamageName
}
class MoleMole.Config.ExecuteGadgetLua : MoleMole.Config.ConfigAbilityAction {
	vint param1
	vint param2
	vint param3
}
class MoleMole.Config.SetWeaponBindState : MoleMole.Config.ConfigAbilityAction {
	bool place
	string equipPartName
	MoleMole.Config.ConfigBornType born
}
class MoleMole.Config.SetWeaponAttachPointRealName : MoleMole.Config.ConfigAbilityAction {
	string partName
	string realName
}
class MoleMole.Config.SetAvatarCanShakeOff : MoleMole.Config.ConfigAbilityAction {
	bool canShakeOff
}
class MoleMole.Config.EnableMainInterface : MoleMole.Config.ConfigAbilityAction {
	bool enable
}
class MoleMole.Config.ChangePlayMode : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.PlayModeType toPlayMode
	bool authorityOnly
}
class MoleMole.Config.EnableCameraDof : MoleMole.Config.ConfigAbilityAction {
	bool enableDof
}
class MoleMole.Config.EnableHitAutoRedirect : MoleMole.Config.ConfigAbilityAction {
	bool setEnable
}
class MoleMole.Config.ClearEndura : MoleMole.Config.ConfigAbilityAction {
	float percent
}
class MoleMole.Config.RushMove : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ConfigBornType toPos
	float minRange
	float maxRange
	float timeRange
}
class MoleMole.Config.ResetAIAttackTarget : MoleMole.Config.ConfigAbilityAction {
}
class MoleMole.Config.ResetAIResistTauntLevel : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.TauntLevel resistTauntLevel
}
class MoleMole.Config.ChangeColliderSurface : MoleMole.Config.ConfigAbilityAction {
	string transformName
	MoleMole.Config.SceneSurfaceType surfaceType
}
class MoleMole.Config.SetSurroundAnchor : MoleMole.Config.ConfigAbilityAction {
	bool setPoint
	MoleMole.Config.ActionPointType actionPointType
	vuint actionPointID
}
class MoleMole.Config.SetCombatFixedMovePoint : MoleMole.Config.ConfigAbilityAction {
	bool setPoint
	MoleMole.Config.ConfigBornType toPos
}
class MoleMole.Config.SetAvatarHitBuckets : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ConfigAvatarHitBucketSetting overrideAvatarHitBucketSetting
}
class MoleMole.Config.ConfigAvatarHitBucketSetting {
	vint meleeBucketCount
	float meleeBucketCD
	vint rangedBucketCount
	float rangedBucketCD
}
class MoleMole.Config.ResetAvatarHitBuckets : MoleMole.Config.ConfigAbilityAction {
}
class MoleMole.Config.SetAISkillCDMultiplier : MoleMole.Config.ConfigAbilityAction {
	float multiplier
}
class MoleMole.Config.RegisterAIActionPoint : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ActionPointType pointType
}
class MoleMole.Config.SetTeamFightPropertyToOverrideMapKey : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.SetTeamFightPropertyToOverrideMapKeyType type
	string fightProperty
	string overrideMapKey
	bool useLimitRange
	MoleMole.Config.DynamicFloat maxValue
	MoleMole.Config.DynamicFloat minValue
}
class MoleMole.Config.NotifyUI : MoleMole.Config.ConfigAbilityAction {
	string uiContextName
	string message
	vint intParam
	float floatParam
	string stringParam
}
class MoleMole.Config.EnableGadgetExtraButton : MoleMole.Config.ConfigAbilityAction {
	bool enable
	vint extraId
}
class MoleMole.Config.ReleaseAIActionPoint : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ActionPointType pointType
}
class MoleMole.Config.SetNeuronEnable : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.NeuronName neuronName
	bool enable
}
class MoleMole.Config.SetNeuronMute : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.NeuronName neuronName
	bool enable
}
class MoleMole.Config.BroadcastNeuronStimulate : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.NeuronName neuronName
	bool stimulate
	float range
}
class MoleMole.Config.IssueCommand : MoleMole.Config.ConfigAbilityAction {
	vint commandID
	float duration
}
class MoleMole.Config.ResetAIThreatBroadcastRange : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicFloat range
}
class MoleMole.Config.SetAIHitFeeling : MoleMole.Config.ConfigAbilityAction {
	bool enable
}
class MoleMole.Config.AddAISpecialAlertTemperature : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicFloat temperature
}
class MoleMole.Config.SetVelocityIgnoreAirGY : MoleMole.Config.ConfigAbilityAction {
	bool ignoreAirGY
}
class MoleMole.Config.UseItem : MoleMole.Config.ConfigAbilityAction {
	vuint itemId
	vuint itemNum
}
class MoleMole.Config.Repeated : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicInt repeatTimes
	MoleMole.Config.ConfigAbilityAction[] actions
}
class MoleMole.Config.SetEntityScale : MoleMole.Config.ConfigAbilityAction {
	float scale
}
class MoleMole.Config.CallLuaTask : MoleMole.Config.ConfigAbilityAction {
	string targetAlias
	vint valueInt
	float valueFloat
	string valueString
}
class MoleMole.Config.DungeonFogEffects : MoleMole.Config.ConfigAbilityAction {
	bool enable
	string cameraFogEffectName
	string playerFogEffectName
	MoleMole.Config.Vector localOffset
}
class MoleMole.Config.DoTileAction : MoleMole.Config.ConfigAbilityAction {
	string actionID
}
class MoleMole.Config.DoWatcherSystemAction : MoleMole.Config.ConfigAbilityAction {
	vuint watcherId
	bool authorityOnly
	bool inThreatListOnly
}
class MoleMole.Config.DoWatcherSystemStageAction : MoleMole.Config.DoWatcherSystemAction {
	vuint stage
}
class MoleMole.Config.ShowProgressBarAction : MoleMole.Config.ConfigAbilityAction {
	bool show
}
class MoleMole.Config.ChangeTag : MoleMole.Config.ConfigAbilityAction {
	bool isAdd
	string tag
}
class MoleMole.Config.UseSkillEliteSet : MoleMole.Config.ConfigAbilityAction {
	byte skillEliteSetID
}
class MoleMole.Config.FixedMonsterRushMove : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ConfigBornType toPos
	MoleMole.Config.DynamicFloat timeRange
	float maxRange
	string[] animatorStateIDs
	string overrideMoveCollider
	bool isInAir
	bool checkAnimatorStateOnExitOnly
	bool ignoreDetectForward
	bool exactArrive
}
class MoleMole.Config.FixedAvatarRushMove : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ConfigBornType toPos
	MoleMole.Config.DynamicFloat timeRange
	float maxRange
	string[] animatorStateIDs
	string overrideMoveCollider
	bool isInAir
	bool checkAnimatorStateOnExitOnly
	bool ignoreDetectForward
	bool exactArrive
}
class MoleMole.Config.GrapplingHookRushMove : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ConfigBornType toPos
	MoleMole.Config.DynamicFloat speed
	MoleMole.Config.DynamicFloat accSpeed
	MoleMole.Config.DynamicFloat maxSpeed
	string[] animatorStateIDs
	bool isInAir
}
class MoleMole.Config.AttachElementTypeResistance : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ElementType elementType
	float durationRatio
}
class MoleMole.Config.AddGlobalValueToTarget : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.AbilityTargetting srcTarget
	MoleMole.Config.AbilityTargetting dstTarget
	string srcKey
	string dstKey
}
class MoleMole.Config.ReviveElemEnergy : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicFloat value
}
class MoleMole.Config.AddClimateMeter : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.JsonClimateType climateType
	MoleMole.Config.DynamicFloat value
}
class MoleMole.Config.ResetClimateMeter : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.JsonClimateType climateType
}
class MoleMole.Config.FireGainCrystalSeedEvent : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ElementType elementType
}
class MoleMole.Config.EnableMonsterMoveOnWater : MoleMole.Config.ConfigAbilityAction {
	bool enable
}
class MoleMole.Config.EnableAvatarMoveOnWater : MoleMole.Config.ConfigAbilityAction {
	bool enable
}
class MoleMole.Config.ChangeEnviroWeather : MoleMole.Config.ConfigAbilityAction {
	vuint areaId
	vuint climateType
	float transDuration
}
class MoleMole.Config.SyncEntityPositionByNormalizedTime : MoleMole.Config.ConfigAbilityAction {
	float normalizedTime
}
class MoleMole.Config.WidgetHitTree : MoleMole.Config.ConfigAbilityAction {
	float radius
	vuint maxCount
}
class MoleMole.Config.EquipAffixStart : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicFloat CD
	vuint equipAffixDataID
}
class MoleMole.Config.ShowExtraAbility : MoleMole.Config.ConfigAbilityAction {
	vuint skillID
}
class MoleMole.Config.SetCameraEntityDampRatio : MoleMole.Config.ConfigAbilityAction {
	float dampRatio
}
class MoleMole.Config.SetExtraAbilityEnable : MoleMole.Config.ConfigAbilityAction {
	bool enable
}
class MoleMole.Config.SetExtraAbilityState : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ExtraAbilityState state
}
class MoleMole.Config.UpdateUidValue : MoleMole.Config.ConfigAbilityAction {
}
class MoleMole.Config.ForceUseSkillSuccess : MoleMole.Config.ConfigAbilityAction {
	vuint skillID
	MoleMole.Config.UseSkillType type
	bool immediately
}
class MoleMole.Config.ServerLuaCall : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.LuaCallType luaCallType
	bool isTarget
	vuint[] CallParamList
	string funcName
	vuint paramNum
	MoleMole.Config.DynamicFloat param1
	MoleMole.Config.DynamicFloat param2
	MoleMole.Config.DynamicFloat param3
}
class MoleMole.Config.DoWidgetSystemAction : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.WidgetEventType widgetEvent
}
class MoleMole.Config.ChangeGadgetUIInteractHint : MoleMole.Config.ConfigAbilityAction {
	string hintTextMapId
}
class MoleMole.Config.KillPlayEntity : MoleMole.Config.ConfigAbilityAction {
}
class MoleMole.Config.DummyAction : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ConfigAbilityAction[] actionList
}
class MoleMole.Config.BanEntityMark : MoleMole.Config.ConfigAbilityAction {
	bool isBan
}
class MoleMole.Config.FireUIEffect : MoleMole.Config.ConfigAbilityAction {
	string effectPattern
	MoleMole.Config.ActionPanelEffectSlot effectSlot
}
class MoleMole.Config.SetEffectFollowPath : MoleMole.Config.ConfigAbilityAction {
	string followPath
	MoleMole.Config.DynamicString effectPattern
	string attachPoint
}
class MoleMole.Config.AttachUIEffect : MoleMole.Config.ConfigAbilityAction {
	string effectPattern
	MoleMole.Config.ActionPanelEffectSlot effectSlot
}
class MoleMole.Config.SetSkillAnchor : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ConfigBornType born
}
class MoleMole.Config.AddChargeValue : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ElementType chargeType
	MoleMole.Config.DynamicFloat value
	string globalValueKey
}
class MoleMole.Config.SetChargeRatio : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ElementType chargeType
	MoleMole.Config.DynamicFloat ratio
	string globalValueKey
}
class MoleMole.Config.EnableLightCoreComponent : MoleMole.Config.ConfigAbilityAction {
	bool enable
}
class MoleMole.Config.ServerMonsterLog : MoleMole.Config.ConfigAbilityAction {
	vint[] paramList
}
class MoleMole.Config.EnablePositionSynchronization : MoleMole.Config.ConfigAbilityAction {
	bool enable
}
class MoleMole.Config.ReviveStamina : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicFloat value
}
class MoleMole.Config.DeductStamina : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicFloat value
	bool swimCheck
}
class MoleMole.Config.AddChargeBarValue : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicFloat value
	bool randomInRange
	MoleMole.Config.DynamicFloat maxValue
	MoleMole.Config.DynamicFloat minValue
}
class MoleMole.Config.SetChargeBarValue : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicFloat value
}
class MoleMole.Config.SetUICombatBarSpark : MoleMole.Config.ConfigAbilityAction {
	bool enable
}
class MoleMole.Config.SetUICombatBarAsh : MoleMole.Config.ConfigAbilityAction {
	bool enable
}
class MoleMole.Config.RefreshUICombatBarLayout : MoleMole.Config.ConfigAbilityAction {
}
class MoleMole.Config.EnableGadgetSpecialCamera : MoleMole.Config.ConfigAbilityAction {
	bool enable
}
class MoleMole.Config.SetFollowMove : MoleMole.Config.ConfigAbilityAction {
	string attachPoint
	bool followRotation
}
class MoleMole.Config.SetSpecialCamera : MoleMole.Config.ConfigAbilityAction {
	bool enable
	string specialCameraName
}
class MoleMole.Config.SetLockingV3Config : MoleMole.Config.ConfigAbilityAction {
	bool enable
	string specialCameraName
}
class MoleMole.Config.KillServerGadget : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.SelectTargetsByChildren gadgetInfo
}
class MoleMole.Config.ShowTextMap : MoleMole.Config.ConfigAbilityAction {
	string id
}
class MoleMole.Config.FireChargeBarEffect : MoleMole.Config.ConfigAbilityAction {
}
class MoleMole.Config.EnableWeatherLock : MoleMole.Config.ConfigAbilityAction {
	bool enable
}
class MoleMole.Config.PushInterActionByConfigPath : MoleMole.Config.ConfigAbilityAction {
	string cfgPath
	bool isExternal
}
class MoleMole.Config.IgnoreMoveColToRockCol : MoleMole.Config.ConfigAbilityAction {
	bool ignore
}
class MoleMole.Config.CreateTile : MoleMole.Config.ConfigAbilityAction {
	string tileName
	MoleMole.Config.ConfigBaseAttackPattern attackPattern
}
class MoleMole.Config.DestroyTile : MoleMole.Config.ConfigAbilityAction {
	string tileName
	MoleMole.Config.ConfigBaseAttackPattern attackPattern
}
class MoleMole.Config.ClearTile : MoleMole.Config.ConfigAbilityAction {
	string tileName
}
class MoleMole.Config.ChangeShieldValue : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicFloat shieldHPRatio
	MoleMole.Config.DynamicFloat shieldHP
	MoleMole.Config.DynamicFloat maxShieldByHPRatio
	MoleMole.Config.DynamicFloat maxShieldHP
	string modifierName
	bool refreshTime
}
class MoleMole.Config.FireFishingEvent : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.FishingEvent eventType
}
class MoleMole.Config.SetOvergrowDamgeToOverrideMap : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ReactionTriggerType reactionTriggerType
}
class MoleMole.Config.SendEvtElectricCoreMoveEnterP1 : MoleMole.Config.ConfigAbilityAction {
}
class MoleMole.Config.SendEvtElectricCoreMoveInterrupt : MoleMole.Config.ConfigAbilityAction {
}
class MoleMole.Config.GetFightProperty : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.AbilityTargetting fightPropSourceTarget
	string fightProp
	string globalValueKey
}
class MoleMole.Config.CaptureAnimal : MoleMole.Config.ConfigAbilityAction {
	vuint materialId
}
class MoleMole.Config.GetTeamTotalMaxEnergyToOverridemap : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.TeamType teamType
	string overrideMapKey
}
class MoleMole.Config.TriggerSetShadowRamp : MoleMole.Config.ConfigAbilityAction {
	bool useShadowRamp
	string[] specialMats
}
class MoleMole.Config.SectorCityManeuver : MoleMole.Config.ConfigAbilityAction {
	bool start
	string attachPointName
}
class MoleMole.Config.WidgetSkillStart : MoleMole.Config.ConfigAbilityAction {
	vuint itemId
}
class MoleMole.Config.AttackByEnergy : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.DynamicFloat energy
	float overDamageRatio
	float overDamageMaxHPRatio
}
class MoleMole.Config.ChangeUGCRayTag : MoleMole.Config.ConfigAbilityAction {
	vuint rayTag
}
class MoleMole.Config.SetRegionalPlayVarValue : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.RegionalPlayVarType varType
	float varValue
}
class MoleMole.Config.AddRegionalPlayVarValue : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.RegionalPlayVarType varType
	float addValue
}
class MoleMole.Config.TriggerUGCGadgetMove : MoleMole.Config.ConfigAbilityAction {
}
class MoleMole.Config.ServerLuaTriggerEvent : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.LuaCallType luaCallType
	bool isTarget
	vuint[] CallParamList
	string sourceName
	vuint paramNum
	MoleMole.Config.DynamicFloat param1
	MoleMole.Config.DynamicFloat param2
	MoleMole.Config.DynamicFloat param3
}
class MoleMole.Config.GetInteractIdToGlobalValue : MoleMole.Config.ConfigAbilityAction {
	string key
}
class MoleMole.Config.ShowGadgetBubble : MoleMole.Config.ConfigAbilityAction {
	float duration
	string content
	float distance
}
class MoleMole.Config.HideGadgetBubble : MoleMole.Config.ConfigAbilityAction {
}
class MoleMole.Config.RunGM : MoleMole.Config.ConfigAbilityAction {
	string gm
	bool flush
}
class MoleMole.Config.AddLogicStateValue : MoleMole.Config.ConfigAbilityAction {
	string logicStateName
	MoleMole.Config.DynamicFloat value
	bool useLimitRange
	MoleMole.Config.DynamicFloat maxValue
	MoleMole.Config.DynamicFloat minValue
}
class MoleMole.Config.SetLogicStateValue : MoleMole.Config.ConfigAbilityAction {
	string logicStateName
	MoleMole.Config.DynamicFloat value
}
class MoleMole.Config.ForceEnableShakeOffButton : MoleMole.Config.ConfigAbilityAction {
	bool enable
}
class MoleMole.Config.ElementAttachForActivityGacha : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ElementType element
}
class MoleMole.Config.ModifySkiffPhysicsParam : MoleMole.Config.ConfigAbilityAction {
	float angularVelocityClamp
	float disableMinSpeed
	float angularVelocityClampFadeTime
}
class MoleMole.Config.RefreshRainOccluder : MoleMole.Config.ConfigAbilityAction {
}
class MoleMole.Config.ClearLocalGadgets : MoleMole.Config.ConfigAbilityAction {
	vuint[] whiteList
}
class MoleMole.Config.TriggerCountCheckEvent : MoleMole.Config.ConfigAbilityAction {
	string eventKey
}
class MoleMole.Config.TeasureHuntMarkShow : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.TreasureHuntMarkType markType
	bool show
}
class MoleMole.Config.ChangeGadgetState : MoleMole.Config.ConfigAbilityAction {
	vint state
}
class MoleMole.Config.FireEarlyWarningEffectForStorm : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.ConfigBornType born
}
class MoleMole.Config.NotifyNahidaTrigger : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.SelectTargetsByShape selectTargets
	MoleMole.Config.DynamicString effectPattern
}
class MoleMole.Config.TriggerGatherCollect : MoleMole.Config.ConfigAbilityAction {
	MoleMole.Config.SelectTargetsByShape selectTargets
	MoleMole.Config.DynamicInt maxCount
}
class MoleMole.Config.SelectTargets {
	vint topLimit
	MoleMole.Config.EntityType[] entityTypePriority
	MoleMole.Config.SelectTargetsSortType sortType
}
class MoleMole.Config.SelectTargetsByShape : MoleMole.Config.SelectTargets {
	string shapeName
	MoleMole.Config.AbilityTargetting centerBasedOn
	MoleMole.Config.TargetType campTargetType
	MoleMole.Config.AbilityTargetting campBasedOn
	MoleMole.Config.DynamicFloat sizeRatio
}
class MoleMole.Config.SelectTargetsByEquipParts : MoleMole.Config.SelectTargets {
	string[] equipPartNames
}
class MoleMole.Config.SelectTargetsByChildren : MoleMole.Config.SelectTargets {
	vuint configID
}
class MoleMole.Config.SelectTargetsByChildrenEntityType : MoleMole.Config.SelectTargets {
	MoleMole.Config.EntityType entityType
}
class MoleMole.Config.SelectTargetsByTag : MoleMole.Config.SelectTargets {
	string tag
}
class MoleMole.Config.SelectTargetsBySelfGroup : MoleMole.Config.SelectTargets {
	MoleMole.Config.BitwiseOperator operation
	vuint value
	MoleMole.Config.DynamicInt dynamicValue
	bool useBinary
	MoleMole.Config.RelationalOperator compareType
}
class MoleMole.Config.SelectTargetsByGrapplingHook : MoleMole.Config.SelectTargets {
}
class MoleMole.Config.SelectTargetsByLCTrigger : MoleMole.Config.SelectTargets {
	MoleMole.Config.TargetType campTargetType
}
class MoleMole.Config.SelectTargetsByLCTriggerAll : MoleMole.Config.SelectTargets {
}
class MoleMole.Config.ConfigAbilityMixin {
	bool isUnique
}
class MoleMole.Config.DebugMixin : MoleMole.Config.ConfigAbilityMixin {
}
class MoleMole.Config.RelyOnElementMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ElementType elementType
}
class MoleMole.Config.ReplaceEventPatternMixin : MoleMole.Config.ConfigAbilityMixin {
	string[] oldPatterns
	string[] newPatterns
}
class MoleMole.Config.AttachToStateIDMixin : MoleMole.Config.ConfigAbilityMixin {
	string[] stateIDs
	string modifierName
	MoleMole.Config.AbilityTargetting target
	MoleMole.Config.ConfigAbilityPredicate[] predicates
	bool isCheckOnAttach
	string[] animatorWhiteList
	string[] animatorBlackList
}
class MoleMole.Config.AttachToAnimatorStateIDMixin : MoleMole.Config.AttachToStateIDMixin {
}
class MoleMole.Config.DoActionByAimMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.EntityType[] entityTypes
	string colliderNodeName
	MoleMole.Config.DynamicFloat cd
	MoleMole.Config.ConfigAbilityAction[] actionQueue
	MoleMole.Config.ConfigAbilityAction[] onLeaveScopeActionQueue
	MoleMole.Config.ConfigAbilityAction[] onRemoveActionQueue
	MoleMole.Config.ConfigAbilityPredicate[] predicates
	MoleMole.Config.AimType aimType
}
class MoleMole.Config.AttackChainReceiverMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.DynamicFloat cd
	MoleMole.Config.ConfigAbilityAction[] actionQueue
	MoleMole.Config.ConfigAbilityPredicate[] predicates
	MoleMole.Config.ConfigAbilityPredicate[] attackerPredicates
	string attackChainReceiverKey
}
class MoleMole.Config.LaserMixin : MoleMole.Config.ConfigAbilityMixin {
	string effectPattern
	MoleMole.Config.ConfigAbilityAction[] onLaserHit
	MoleMole.Config.ConfigAbilityAction[] onLaserLeave
}
class MoleMole.Config.LaserReceiveMixin : MoleMole.Config.ConfigAbilityMixin {
	string effectPattern
	string attachEffect
}
class MoleMole.Config.TumbleweedMoveMixin : MoleMole.Config.ConfigAbilityMixin {
	float interval
	float attenuation
	float tendToBornPosRadius
	float moveToBornPosRadius
	float delay
	float downwardAccTime
	float downwardAcc
	MoleMole.Config.ConfigAbilityAction[] onDirectionChanged
	MoleMole.Config.ConfigAbilityAction[] onStartMove
	MoleMole.Config.ConfigAbilityAction[] onStopMove
}
class MoleMole.Config.ListenWindZoneMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityAction[] onWindZone
}
class MoleMole.Config.ListenFallOnGroundMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityAction[] onGround
}
class MoleMole.Config.AttachToMonsterAirStateMixin : MoleMole.Config.ConfigAbilityMixin {
	string modifierName
	bool IsAirMove
}
class MoleMole.Config.ThinkIntervalMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.DynamicFloat thinkInterval
	bool thinkIntervalIgnoreTimeScale
	bool tickThinkIntervalAfterDie
	MoleMole.Config.ConfigAbilityAction[] onThinkInterval
}
class MoleMole.Config.SectorCityManeuverMixin : MoleMole.Config.ConfigAbilityMixin {
	string attachPointName
}
class MoleMole.Config.TriggerWidgetMusicGameMixin : MoleMole.Config.ConfigAbilityMixin {
	vuint musicId
	float range
	MoleMole.Config.ConfigAbilityAction[] onSuccess
}
class MoleMole.Config.AvatarCountsMixin : MoleMole.Config.ConfigAbilityMixin {
	vint aliveAvatarCount
	MoleMole.Config.ConfigAbilityAction[] actionList
}
class MoleMole.Config.MultiAvatarCountsMixin : MoleMole.Config.ConfigAbilityMixin {
	vint aliveAvatarCount
	MoleMole.Config.ConfigAbilityAction[] actionList
}
class MoleMole.Config.TransparentSourceMixin : MoleMole.Config.ConfigAbilityMixin {
	float radius
}
class MoleMole.Config.AttachToNormalizedTimeMixin : MoleMole.Config.ConfigAbilityMixin {
	string stateID
	string modifierName
	MoleMole.Config.AbilityTargetting target
	MoleMole.Config.ConfigAbilityPredicate[] predicates
	float normalizeStart
	float normalizeEnd
}
class MoleMole.Config.AttachToPoseIDMixin : MoleMole.Config.ConfigAbilityMixin {
	vint[] poseIDs
	string modifierName
}
class MoleMole.Config.AttachToGadgetStateMixin : MoleMole.Config.ConfigAbilityMixin {
	vint gadgetState
	string modifierName
}
class MoleMole.Config.AttachToGadgetStateMutexMixin : MoleMole.Config.ConfigAbilityMixin {
	vint[] gadgetStates
	string[][] modifierNames
}
class MoleMole.Config.AttachModifierByStackingMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityAction[] actionQueue
	string stackingModifier
}
class MoleMole.Config.AttachToAIAlertnessMixin : MoleMole.Config.ConfigAbilityMixin {
	vint[] alertness
	string modifierName
}
class MoleMole.Config.AttachModifierToPredicateMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.AvatarStageType type
	MoleMole.Config.OnEventType onEvent
	MoleMole.Config.ConfigAbilityPredicate[] predicates
	string modifierName
	MoleMole.Config.ConfigAbilityStateToActions[] onAbilityStateAdded
	MoleMole.Config.ConfigAbilityStateToActions[] onAbilityStateRemoved
}
class MoleMole.Config.NahidaAimNpcGatherMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.DynamicFloat detectRangeForNpc
	MoleMole.Config.DynamicFloat widthForNpc
	MoleMole.Config.DynamicFloat heightForNpc
	string npcAttachEffect
	MoleMole.Config.DynamicFloat detectRangeForGather
	MoleMole.Config.DynamicFloat widthForGather
	MoleMole.Config.DynamicFloat heightForGather
	MoleMole.Config.DynamicFloat gatherIgnoreRaycastThreshold
	MoleMole.Config.DynamicInt gatherMaxCount
	bool disableRayCheck
	string gatherAttachEffect
}
class MoleMole.Config.NahidaHollowFlowerMixin : MoleMole.Config.ConfigAbilityMixin {
	string effectPattern
	string effectTrigger
	float interval
	vint maxCount
	vint createMaxNumPerInterval
	MoleMole.Config.Vector createOffset
	float minRange
	float maxRange
	float destroyRange
}
class MoleMole.Config.OnNotifyAttachEffectMixin : MoleMole.Config.ConfigAbilityMixin {
	string effectName
	string uiContextName
}
class MoleMole.Config.DisableMotionBlurMixin : MoleMole.Config.ConfigAbilityMixin {
}
class MoleMole.Config.EraseBrickActivityMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.DynamicFloat explodeDelay
	map<MoleMole.Config.EraseBrickActivity_BrickType,MoleMole.Config.DynamicFloat> hpMap
	map<MoleMole.Config.EraseBrickActivity_BrickType,MoleMole.Config.DynamicFloat> scoreMap
	MoleMole.Config.EraseBrickActivity_CreateBrick[] rule
	MoleMole.Config.EraseBrickActivity_CreateBrickRuleListItem[] ruleSteps
	string ruleStepGvKey
	map<vint,MoleMole.Config.EraseBrickActivity_CreateBrickRuleListItem[]> otherRuleSteps
	MoleMole.Config.ConfigAbilityAction[] onStaminaBroken
	MoleMole.Config.DynamicFloat staminaBuffDuration
	MoleMole.Config.DynamicFloat staminaBuffRatio
	MoleMole.Config.EraseBrickActivity_SwitchStateAction[] stateSwitchActions
	MoleMole.Config.ConfigAbilityAction[][] stateSwitchActionArray
	string stateParaName
	MoleMole.Config.EraseBrickActivity_StatePara[] stateParaValues
	string hpParaName
	string countParaName
	map<MoleMole.Config.EraseBrickActivity_BrickType,string> typeCountParaName
	string[] durabilityChangedGvlist
	map<vint,MoleMole.Config.EraseBrickActivity_BrickType[]> initRule
	map<vint,MoleMole.Config.EraseBrickActivity_BrickType[]> clearRule
}
class MoleMole.Config.EraseBrickActivity_CreateBrickRuleListItem {
	vuint index
	MoleMole.Config.EraseBrickActivity_CreateBrick[] rule
}
class MoleMole.Config.EraseBrickActivity_StatePara {
	MoleMole.Config.EraseBrickActivity_BrickType brickType
	MoleMole.Config.EraseBrickActivity_State state
	float paraValue
}
class MoleMole.Config.EraseBrickActivity_CreateBrick {
	MoleMole.Config.EraseBrickActivity_Predicate[] predicates
	MoleMole.Config.EraseBrickActivity_BrickType brickType
}
class MoleMole.Config.EraseBrickActivity_Predicate {
	MoleMole.Config.EraseBrickActivity_BrickType brickType
	MoleMole.Config.EraseBrickActivity_ValueCompareType op
	vuint value
}
class MoleMole.Config.EraseBrickActivity_SwitchStateAction {
	vint[] index
	MoleMole.Config.EraseBrickActivity_State[] fromStates
	MoleMole.Config.EraseBrickActivity_State[] toStates
	MoleMole.Config.EraseBrickActivity_BrickType[] fromTypes
	MoleMole.Config.EraseBrickActivity_BrickType[] toTypes
	MoleMole.Config.EraseBrickActivity_BrokenReason[] reasons
	MoleMole.Config.ConfigAbilityAction[] actions
}
class MoleMole.Config.EraseBrickActivitySubMixin : MoleMole.Config.ConfigAbilityMixin {
	string durabilityChangedGV
	MoleMole.Config.ConfigAbilityAction[] actions
}
class MoleMole.Config.EnterSceneLookMixin : MoleMole.Config.ConfigAbilityMixin {
	string lookAtTag
	MoleMole.Config.Vector followOffset
	float fov
	MoleMole.Config.Vector trackedObjectOffset
	float lookaheadTime
	float lookaheadSmoothing
	float horizontalDamping
	float verticalDamping
	float screenX
	float screenY
	float deadZoneWidth
	float deadZoneHeight
	float softZoneWidth
	float softZoneHeight
	float biasX
	float biasY
}
class MoleMole.Config.DisableCineMachineMixin : MoleMole.Config.ConfigAbilityMixin {
	bool disableAiming
}
class MoleMole.Config.HittingOtherMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityAction[] onHittingOther
}
class MoleMole.Config.IgnoreBulletAimPointMixin : MoleMole.Config.ConfigAbilityMixin {
	string overrideBulletAimPoint
}
class MoleMole.Config.DeathZoneMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityAction[] disactiveHaloTrigger
}
class MoleMole.Config.UIInteractMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.UIInteractMesaage ui_message_id
	MoleMole.Config.ConfigAbilityAction[] actionList
}
class MoleMole.Config.ConfigAbilityStateToActions {
	MoleMole.Config.AbilityState abilityState
	MoleMole.Config.ConfigAbilityAction[] actions
}
class MoleMole.Config.DoActionByEventMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.AvatarStageType type
	MoleMole.Config.OnEventType onEvent
	vuint[] pickItemConfigIDs
	vuint skillReadyID
	MoleMole.Config.ConfigAbilityPredicate[] predicates
	MoleMole.Config.ConfigAbilityAction[] actions
	MoleMole.Config.ConfigAbilityStateToActions[] onAbilityStateAdded
	MoleMole.Config.ConfigAbilityStateToActions[] onAbilityStateRemoved
	string costEnergyDeltaName
}
class MoleMole.Config.SwitchSkillIconMixin : MoleMole.Config.ConfigAbilityMixin {
	vuint skillID
	string skillIcon
}
class MoleMole.Config.ButtonHoldChargeMixin : MoleMole.Config.ConfigAbilityMixin {
	vuint skillID
	float chargeTime
	MoleMole.Config.DynamicFloat secondChargeTime
	MoleMole.Config.ConfigAbilityAction[] OnBeginUncharged
	MoleMole.Config.ConfigAbilityAction[] OnReleaseUncharged
	MoleMole.Config.ConfigAbilityAction[] OnBeginCharged
	MoleMole.Config.ConfigAbilityAction[] OnReleaseCharged
	MoleMole.Config.ConfigAbilityAction[] OnBeginSecondCharged
	MoleMole.Config.ConfigAbilityAction[] OnReleaseSecondCharged
	MoleMole.Config.ConfigAbilityAction[] OnCancelCharged
	string[] chargeStateIDs
}
class MoleMole.Config.SkillButtonHoldChargeMixin : MoleMole.Config.ConfigAbilityMixin {
	bool allowHoldLockDirection
	vuint skillID
	string nextLoopTriggerID
	string endHoldTrigger
	string[] beforeStateIDs
	float beforeHoldDuration
	string[] chargeLoopStateIDs
	string[] afterStateIDs
	float[] chargeLoopDurations
	string[] transientStateIDs
}
class MoleMole.Config.AvatarSteerByCameraMixin : MoleMole.Config.ConfigAbilityMixin {
	string[] stateIDs
	float angularSpeed
	bool canReviveStamina
	bool isCheckOnAttach
}
class MoleMole.Config.SteerAttackMixin : MoleMole.Config.ConfigAbilityMixin {
	string[] steerStateIDs
	float startNormalizedTime
	float endNormalizedTime
	float angularSpeed
	float attackAngle
	string attackTrigger
	float attackDistance
	bool remoteSteerToLocalTarget
	MoleMole.Config.SteerAttackTargetType[] facingTargetTypes
}
class MoleMole.Config.SteerAttackMoveMixin : MoleMole.Config.SteerAttackMixin {
}
class MoleMole.Config.SteerAttackTraceMixin : MoleMole.Config.SteerAttackMixin {
}
class MoleMole.Config.SteerAttackTraceToPosMixin : MoleMole.Config.SteerAttackMixin {
	string globalPosKey
}
class MoleMole.Config.SteerAttackClothoidMixin : MoleMole.Config.SteerAttackMixin {
}
class MoleMole.Config.SetTrampolineAbilityMixin : MoleMole.Config.ConfigAbilityMixin {
	string abilityName
	bool isExcitedState
}
class MoleMole.Config.ShieldBarMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityAction[] onShieldBroken
	bool revert
	string showDamageText
	bool useMutiPlayerFixData
	bool skipInitAnim
	MoleMole.Config.ElementType barElementType
}
class MoleMole.Config.ChargeBarMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ElementType chargeBarElementType
	vint chargeBarIconID
	MoleMole.Config.DynamicFloat initialValue
	MoleMole.Config.DynamicFloat maxValue
}
class MoleMole.Config.ElementShieldMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ElementType elementType
	string showDamageText
	MoleMole.Config.DynamicFloat shieldAngle
	MoleMole.Config.DynamicFloat shieldHPRatio
	MoleMole.Config.DynamicFloat shieldHP
	MoleMole.Config.DynamicFloat damageRatio
	MoleMole.Config.ConfigAbilityAction[] onShieldBroken
	MoleMole.Config.ConfigAbilityAction[] onShieldSuccess
	MoleMole.Config.ConfigAbilityAction[] onShieldFailed
	bool useMutiPlayerFixData
	bool updateShieldByMaxHp
}
class MoleMole.Config.EliteShieldMixin : MoleMole.Config.ConfigAbilityMixin {
	string shieldType
	MoleMole.Config.DynamicFloat shieldAngle
	MoleMole.Config.DynamicFloat shieldHPRatio
	MoleMole.Config.DynamicFloat shieldHP
	string costShieldRatioName
	string showDamageText
	MoleMole.Config.ConfigAbilityAction[] onShieldBroken
	MoleMole.Config.DynamicFloat amountByGetDamage
	bool targetMuteHitEffect
	bool infiniteShield
	MoleMole.Config.DynamicFloat healLimitedByCasterMaxHPRatio
}
class MoleMole.Config.OverrideAttackEventMixin : MoleMole.Config.ConfigAbilityMixin {
	string overrideAttackEvent
}
class MoleMole.Config.AttachModifierToSelfGlobalValueMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.AbilityTargetting globalValueTarget
	string globalValueKey
	MoleMole.Config.AddActionType addAction
	MoleMole.Config.DynamicFloat defaultGlobalValueOnCreate
	MoleMole.Config.DynamicFloat[] valueSteps
	string[] modifierNameSteps
	MoleMole.Config.ConfigAbilityAction[][] actionQueues
	bool removeAppliedModifier
}
class MoleMole.Config.AttachModifierToSelfGlobalValueAndTalkStateMixin : MoleMole.Config.AttachModifierToSelfGlobalValueMixin {
	MoleMole.Config.DynamicFloat GVInTalk
}
class MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin : MoleMole.Config.ConfigAbilityMixin {
	string globalValueKey
	MoleMole.Config.AddActionType addAction
	MoleMole.Config.DynamicFloat[] valueSteps
	string[] modifierNameSteps
	MoleMole.Config.ConfigAbilityAction[][] actionQueues
	bool removeAppliedModifier
}
class MoleMole.Config.TemperatureGrowRateMixin : MoleMole.Config.ConfigAbilityMixin {
	string monsterGV
	float growRateMultiplier
}
class MoleMole.Config.AttachModifierToSelfGlobalValueAndTalkStateNoInitMixin : MoleMole.Config.AttachModifierToSelfGlobalValueNoInitMixin {
	MoleMole.Config.DynamicFloat GVInTalk
}
class MoleMole.Config.AttachModifierToGlobalValueMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.AbilityTargetting globalValueTarget
	MoleMole.Config.SelectTargets otherTargets
	string globalValueKey
	MoleMole.Config.DynamicFloat[] valueSteps
	string[] modifierNameSteps
	MoleMole.Config.ConfigAbilityAction[][] actionQueues
	bool removeAppliedModifier
	bool removeAppliedModifierTargetDisappear
	bool removeAppliedModifierClearGlobalValue
	bool removeModifierByAttach
	MoleMole.Config.TargetRegisterType targetRegisterType
	bool notRemoveModifierWhenEntityNotSync
}
class MoleMole.Config.TriggerTypeSupportMixin : MoleMole.Config.ConfigAbilityMixin {
	float duration
	float radius
}
class MoleMole.Config.TriggerElementSupportMixin : MoleMole.Config.TriggerTypeSupportMixin {
	MoleMole.Config.ElementType elementType
}
class MoleMole.Config.TriggerBeHitSupportMixin : MoleMole.Config.TriggerTypeSupportMixin {
	MoleMole.Config.HitLevel hitLevel
}
class MoleMole.Config.TriggerRageSupportMixin : MoleMole.Config.TriggerTypeSupportMixin {
	float dampRatio
	float addRatio
	float maxValue
	float minValue
}
class MoleMole.Config.WindZoneMixin : MoleMole.Config.ConfigAbilityMixin {
	string shapeName
	MoleMole.Config.ConfigBornType born
	MoleMole.Config.DynamicFloat strength
	MoleMole.Config.DynamicFloat attenuation
	MoleMole.Config.DynamicFloat innerRadius
	bool reverse
	MoleMole.Config.TargetType targetType
	MoleMole.Config.ConfigAbilityPredicate[] predicates
	string modifierName
	vuint maxNum
	float forceGrowth
	float forceFallen
	MoleMole.Config.Vector offset
	MoleMole.Config.VelocityForceType forceType
	float thinkInterval
	MoleMole.Config.ConfigAbilityAction[] onThinkInterval
	float overrideWeight
}
class MoleMole.Config.TornadoMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigTornadoZone[] stageZone
	MoleMole.Config.ConfigAbilityPredicate[] predicates
	MoleMole.Config.TargetType targetType
	MoleMole.Config.ConfigBornType born
	MoleMole.Config.DynamicFloat enviroWindStrength
	MoleMole.Config.DynamicFloat enviroWindRadius
}
class MoleMole.Config.ConfigTornadoZone {
	string shapeName
	MoleMole.Config.Vector offset
	MoleMole.Config.Vector dir
	MoleMole.Config.DynamicFloat strength
	MoleMole.Config.DynamicFloat attenuation
	MoleMole.Config.DynamicFloat innerRadius
	string modifierName
	vuint maxNum
	float forceGrowth
	float forceFallen
	float duration
}
class MoleMole.Config.AirFlowMixin : MoleMole.Config.ConfigAbilityMixin {
	vuint gadgetID
	vuint campID
	MoleMole.Config.TargetType campTargetType
	MoleMole.Config.ConfigBornType born
}
class MoleMole.Config.WindSeedSpawnerMixin : MoleMole.Config.ConfigAbilityMixin {
	bool refreshEnable
	float spawnerRadius
	float spawnerHeightAngle
	float spawnerAreaAngle
	float minDistanceToAvatar
	float moveSuppressSpeed
	float moveRefreshAngleFreeze
	float moveRefreshAngleSlow
	vuint minNumPerSpawn
	vuint maxNumPerSpawn
	vuint maxSwapNumPerSpawn
	float minSeparateRange
	float maxSeparateRange
	float removeSeedDistance
	float refreshMeterPerMeter
	float refreshMeterPerSecond
	float refreshMeterPerDistRemove
	float refreshMeterMax
	string windForceModifier
	string windExplodeModifier
	string windBulletAbility
	string globalValueKey
	vuint[] spawnNumArray
	vuint seedGadgetID
	float initSignalStrength
	float triggerSignalStrength
	float signalDecaySpeed
	float mutipleRange
	float catchSeedRange
}
class MoleMole.Config.CollisionMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigCollision collision
	float minShockSpeed
	float cd
	MoleMole.Config.ConfigAbilityAction[] onCollision
}
class MoleMole.Config.ConfigCollision {
	MoleMole.Config.ConfigCCD ccd
	MoleMole.Config.ColliderTriggerType triggerType
	float triggerCD
	MoleMole.Config.TargetType targetType
	bool ignoreScene
	bool ignoreWater
	bool bornWithTriggerEnabled
}
class MoleMole.Config.ConfigCCD {
	MoleMole.Config.CCDType type
	float detectCD
	bool sorted_hit_result
}
class MoleMole.Config.VelocityDetectMixin : MoleMole.Config.ConfigAbilityMixin {
	float minSpeed
	float maxSpeed
	bool detectOnStart
	MoleMole.Config.ConfigAbilityAction[] onPoseedge
	MoleMole.Config.ConfigAbilityAction[] onNegedge
}
class MoleMole.Config.OverrideAvatarMoveSpeedRatioMixin : MoleMole.Config.ConfigAbilityMixin {
	float minValue
	float maxValue
}
class MoleMole.Config.OverrideGadgetMoveSpeedRatioMixin : MoleMole.Config.ConfigAbilityMixin {
	float minValue
	float maxValue
}
class MoleMole.Config.WeightDetectRegionMixin : MoleMole.Config.ConfigAbilityMixin {
	string globalValueKey
	MoleMole.Config.ConfigAbilityAction[] onWeightChanged
}
class MoleMole.Config.ChangeFieldMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ChangeFieldType type
	float targetRadius
	float time
}
class MoleMole.Config.CloseForceFieldMixin : MoleMole.Config.ConfigAbilityMixin {
}
class MoleMole.Config.ShootFromCameraMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.UIInteractMesaage ui_message_id
	MoleMole.Config.Vector offsetFromCamera
	string gvBulletInitPos
	string gvBulletForward
	MoleMole.Config.ConfigAbilityAction[] actionList
	float aimAngelThreshoold
	float rayMaxDistance
}
class MoleMole.Config.SwitchSkillIDMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.SwitchSkillPriority priority
	vint skillIndex
	vuint skillID
	vuint fromSkillID
	vuint toSkillID
}
class MoleMole.Config.AvatarChangeSkillMixin : MoleMole.Config.ConfigAbilityMixin {
	vint index
	MoleMole.Config.SwitchSkillPriority priority
	vuint aimSkillID
	vuint jumpSkillID
	vuint flySkillID
	bool changeOnAdd
}
class MoleMole.Config.AvatarLevelSkillMixin : MoleMole.Config.ConfigAbilityMixin {
	vuint skillID
	vint skillIndex
}
class MoleMole.Config.OnAvatarUseSkillMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityAction[] onTriggerNormalAttack
	MoleMole.Config.ConfigAbilityAction[] onTriggerSkill
	MoleMole.Config.ConfigAbilityAction[] onTriggerUltimateSkill
	bool useSkillStart
	float clearSkillIdDelay
}
class MoleMole.Config.OnLocalAvatarAddedShieldMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.HasShieldType[] shieldTypeList
	MoleMole.Config.ConfigAbilityAction[] actions
}
class MoleMole.Config.CostStaminaMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.DynamicFloat costStaminaDelta
	MoleMole.Config.DynamicFloat costStaminaRatio
	MoleMole.Config.ConfigAbilityAction[] onStaminaEmpty
}
class MoleMole.Config.EntityDefenceMixin : MoleMole.Config.ConfigAbilityMixin {
	string[] stateIDs
	string defendTriggerID
	float defendAngle
	MoleMole.Config.DynamicFloat defendProbability
	MoleMole.Config.DynamicFloat defendProbabilityDelta
	MoleMole.Config.DynamicFloat defendTimeInterval
	bool alwaysRecover
	MoleMole.Config.DynamicInt defendCountInterval
	bool canDefenceWhileEndureFull
}
class MoleMole.Config.MonsterDefendMixin : MoleMole.Config.EntityDefenceMixin {
	MoleMole.Config.AttackType attackType
	MoleMole.Config.ConfigAbilityAction[] onDefendSucceded
	MoleMole.Config.MonsterDefendAudio defendAudioConfig
	bool randomDirection
	bool doNotTurnDirection
}
class MoleMole.Config.MonsterDefendAudio {
	MoleMole.Config.ConfigWwiseString onDefendSucceded
}
class MoleMole.Config.ConfigWwiseString {
	string text
}
class MoleMole.Config.AutoDefenceMixin : MoleMole.Config.EntityDefenceMixin {
	float costStaminaRatio
}
class MoleMole.Config.BeingHitMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityAction[] toAttacker
	MoleMole.Config.ConfigAbilityAction[] toAttackerOwner
	MoleMole.Config.ConfigAbilityAction[] toAttackerOriginOwner
}
class MoleMole.Config.AttackHittingSceneMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityAction[] onHittingScene
	string[] animEventIDs
}
class MoleMole.Config.TriggerWitchTimeMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.TargetType ignoreTargetType
	float timescale
	float duration
	bool useMax
	bool enableEffect
	bool enableDelay
	float delayTimeScale
	float delayDuration
	string openEffectPattern
	string closeEffectPattern
	string weatherPattern
}
class MoleMole.Config.TriggerWeatherMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.TriggerWeatherType type
	vuint areaId
	string weatherPattern
	float transDuration
	float duration
}
class MoleMole.Config.TriggerPostProcessEffectMixin : MoleMole.Config.ConfigAbilityMixin {
	string postEffectAssetName
	float duration
	bool isStageEffect
	bool forceFadeOut
}
class MoleMole.Config.TriggerSkillRadialBlurMixin : MoleMole.Config.ConfigAbilityMixin {
}
class MoleMole.Config.DeathZoneRegionalPlayMixin : MoleMole.Config.ConfigAbilityMixin {
}
class MoleMole.Config.ModifyDamageMixin : MoleMole.Config.ConfigAbilityMixin {
	string[] animEventNames
	string[] attackTags
	MoleMole.Config.AttackType attackType
	bool ignoreEventInfo
	MoleMole.Config.DynamicFloat damagePercentage
	MoleMole.Config.DynamicFloat damagePercentageRatio
	MoleMole.Config.DynamicFloat damageExtra
	MoleMole.Config.DynamicFloat bonusCritical
	MoleMole.Config.DynamicFloat bonusCriticalHurt
	MoleMole.Config.ElementTypeModifier elementTypeModifier
	MoleMole.Config.ConfigAbilityPredicate[] predicates
	bool trueDamage
	MoleMole.Config.DynamicFloat defenseIgnoreRatio
	MoleMole.Config.DynamicFloat defenseIgnoreDelta
}
class MoleMole.Config.ElementTypeModifier {
	MoleMole.Config.ElementType elementType
}
class MoleMole.Config.ModifyDamageCountMixin : MoleMole.Config.ModifyDamageMixin {
	MoleMole.Config.DynamicFloat maxModifyCount
	MoleMole.Config.ConfigAbilityPredicate[] countPredicates
	bool isIgnoreAttenuation
	MoleMole.Config.ConfigAbilityAction[] successActions
	MoleMole.Config.ConfigAbilityAction[] maxCountActions
}
class MoleMole.Config.ModifyBeHitDamageMixin : MoleMole.Config.ModifyDamageMixin {
	MoleMole.Config.DynamicFloat Actor_PhysicalSubHurtDelta
	MoleMole.Config.DynamicFloat Actor_FireSubHurtDelta
	MoleMole.Config.DynamicFloat Actor_ElecSubHurtDelta
	MoleMole.Config.DynamicFloat Actor_WaterSubHurtDelta
	MoleMole.Config.DynamicFloat Actor_GrassSubHurtDelta
	MoleMole.Config.DynamicFloat Actor_WindSubHurtDelta
	MoleMole.Config.DynamicFloat Actor_IceSubHurtDelta
	MoleMole.Config.DynamicFloat Actor_RockSubHurtDelta
	MoleMole.Config.DynamicFloat Actor_ElementReactionCriticalDelta
	MoleMole.Config.DynamicFloat Actor_ElementReactionCriticalHurtDelta
}
class MoleMole.Config.ClusterTriggerMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigBornType born
	vuint configID
	float radius
	float duration
	MoleMole.Config.DynamicFloat[] valueSteps
	MoleMole.Config.ConfigAbilityAction[] actionQueue
}
class MoleMole.Config.ModifySkillCDByModifierCountMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.TargetType targetType
	string modifierName
	vuint skillID
	MoleMole.Config.DynamicFloat cdDelta
}
class MoleMole.Config.ReviveElemEnergyMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.AvatarStageType type
	MoleMole.Config.DynamicFloat period
	MoleMole.Config.DynamicFloat baseEnergy
	MoleMole.Config.DynamicFloat ratio
}
class MoleMole.Config.RejectAttackMixin : MoleMole.Config.ConfigAbilityMixin {
	string attackTag
	float limitTime
	MoleMole.Config.RejectEventType type
}
class MoleMole.Config.RejectAttackMixinV2 : MoleMole.Config.ConfigAbilityMixin {
	string[] attackTags
	float limitTime
	MoleMole.Config.RejectEventType type
	bool isWhiteList
}
class MoleMole.Config.AttackCostElementMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.StrikeType strikeType
	MoleMole.Config.ElementType elementType
	MoleMole.Config.AttackType attackType
	float strikeCostRatio
	float attackCostRatio
	float elementCostRatio
	MoleMole.Config.ElementType costElementType
	MoleMole.Config.AttackCostType costType
}
class MoleMole.Config.ApplyInertiaVelocityMixin : MoleMole.Config.ConfigAbilityMixin {
	float damping
	bool useXZ
	bool useY
}
class MoleMole.Config.ChangePropTypeValueMixin : MoleMole.Config.ConfigAbilityMixin {
	string propType
	MoleMole.Config.DynamicFloat energyCostDelta
}
class MoleMole.Config.ExtendLifetimeByPickedGadgetMixin : MoleMole.Config.ConfigAbilityMixin {
	vuint[] pickedConfigIDs
	MoleMole.Config.DynamicFloat extendLifeTime
	MoleMole.Config.DynamicFloat maxExtendLifeTime
}
class MoleMole.Config.DoActionByEnergyChangeMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.AvatarStageType type
	MoleMole.Config.ElementType[] elementTypes
	bool doWhenEnergyMax
	MoleMole.Config.ConfigAbilityAction[] onGainEnergyByBall
	MoleMole.Config.ConfigAbilityAction[] onGainEnergyByOther
	MoleMole.Config.ConfigAbilityAction[] onGainEnergyByAll
	MoleMole.Config.ConfigAbilityAction[] onGainEnergyMax
}
class MoleMole.Config.DoReviveMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.AvatarStageType type
	bool ignoreDieAbyss
	bool ignoreDieDrawn
	MoleMole.Config.ConfigAbilityAction[] onKillActions
	MoleMole.Config.ConfigAbilityAction[] onReviveActions
}
class MoleMole.Config.IceFloorMixin : MoleMole.Config.ConfigAbilityMixin {
	float width
	float height
	float moveDistance
	float minInterval
	MoleMole.Config.ConfigAbilityAction doAction
}
class MoleMole.Config.HitLevelGaugeMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.HitLevel fromHitLevel
	MoleMole.Config.HitLevel toHitLevel
	float maxCharge
	float minChargeDelta
	float maxChargeDelta
	float fadeTime
}
class MoleMole.Config.RecycleModifierMixin : MoleMole.Config.ConfigAbilityMixin {
	string modifierName
	float cd
	float initialCD
}
class MoleMole.Config.CurLocalAvatarMixin : MoleMole.Config.ConfigAbilityMixin {
	string modifierName
}
class MoleMole.Config.LocalAvatarsMixin : MoleMole.Config.ConfigAbilityMixin {
	string modifierName
	bool avatarAppearAttachModifier
}
class MoleMole.Config.CurLocalAvatarMixinV2 : MoleMole.Config.ConfigAbilityMixin {
	string modifierName
}
class MoleMole.Config.AttachToDayNightMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.LevelDayTimeType time
	string modifierName
}
class MoleMole.Config.DoActionByCreateGadgetMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.CreateGadgetMixinType type
	MoleMole.Config.ConfigAbilityAction[] actionQueue
}
class MoleMole.Config.AttackChainMixin : MoleMole.Config.ConfigAbilityMixin {
	bool ignoreElementReactionType
	MoleMole.Config.ElementReactionType[] reactionTypes
	bool ignoreAttackTag
	string[] attackTags
	string effectName
	string effectAttachPoint
	MoleMole.Config.DynamicFloat lineRange
	string attackChainReceiverKey
	MoleMole.Config.DynamicFloat cd
	MoleMole.Config.ConfigAbilityAction[] actionQueue
	MoleMole.Config.ConfigAbilityPredicate[] predicates
}
class MoleMole.Config.FireworksLauncherMixin : MoleMole.Config.ConfigAbilityMixin {
	string startCountDownModifier
	MoleMole.Config.ConfigAbilityAction[] OnEvtStartCountDown
	MoleMole.Config.ConfigAbilityAction[] OnAllBulletsFired
	string GV_FW_BulletItemID
	string GV_FW_ColorH
	string GV_FW_Scale
	string GV_FW_Angle
	string GV_FW_MaxParticleCount
	string GV_FW_FaceToCamera
	string GV_FW_BulletLifeTime
}
class MoleMole.Config.EnviroFollowRotateMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.Vector selfRotateOffSet
	string deactiveOnCutsecneName
}
class MoleMole.Config.BoxClampWindZoneMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.Vector size
	MoleMole.Config.ConfigBornType born
	float attracForceStrength
	float maxStrengthRange
}
class MoleMole.Config.DvalinS01BoxMoxeMixin : MoleMole.Config.ConfigAbilityMixin {
}
class MoleMole.Config.FixDvalinS04MoveMixin : MoleMole.Config.ConfigAbilityMixin {
}
class MoleMole.Config.DvalinS01PathEffsMixin : MoleMole.Config.ConfigAbilityMixin {
	vint effectStart
	vint effectEnd
	MoleMole.Config.DvalinS01PathEffsInfo[] effInfos
}
class MoleMole.Config.DvalinS01PathEffsInfo {
	vint flyState
	string effectName
	bool pathCenter
	vint intervalMax
	vint intervalMin
	vint numMax
	vint numMin
	float rangeMax
	float rangeMin
	float eularMax
	float eularMin
	float yScale
}
class MoleMole.Config.CameraLockMixin : MoleMole.Config.ConfigAbilityMixin {
	string transName
	string cfgPath
}
class MoleMole.Config.AvatarLockForwardFlyMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.Vector worldForward
	float flySpeedScale
	float flyBackSpeedScale
	MoleMole.Config.Vector eularRawInput
}
class MoleMole.Config.TriggerResistDamageTextMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ElementType[] elementTypes
}
class MoleMole.Config.StageReadyMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityAction[] onStageReady
}
class MoleMole.Config.AttachModifierToElementDurabilityMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.DynamicFloat[] valueSteps
	string[] modifierNameSteps
}
class MoleMole.Config.AttachModifierToSurfaceTypeMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.SceneSurfaceType surfaceType
	MoleMole.Config.ModifierWithPredicates[] modifiersWithPredicates
	string extraEnterTriggerLevelAbility
	string extraExitTriggerLevelAbility
	string extraResetTriggerLevelAbility
}
class MoleMole.Config.ModifierWithPredicates {
	string modifierName
	MoleMole.Config.ConfigAbilityPredicate[] predicates
	bool attachModifier
}
class MoleMole.Config.DoActionByStateIDMixin : MoleMole.Config.ConfigAbilityMixin {
	string[] stateIDs
	MoleMole.Config.ConfigAbilityPredicate[] enterPredicates
	MoleMole.Config.ConfigAbilityPredicate[] exitPredicates
	MoleMole.Config.ConfigAbilityAction[] enterActions
	MoleMole.Config.ConfigAbilityAction[] exitActions
}
class MoleMole.Config.DoActionByAnimatorStateIDMixin : MoleMole.Config.ConfigAbilityMixin {
	string[] stateIDs
	MoleMole.Config.ConfigAbilityPredicate[] enterPredicates
	MoleMole.Config.ConfigAbilityPredicate[] exitPredicates
	MoleMole.Config.ConfigAbilityAction[] enterActions
	MoleMole.Config.ConfigAbilityAction[] exitActions
}
class MoleMole.Config.DoActionByPoseIDMixin : MoleMole.Config.ConfigAbilityMixin {
	vint[] poseIDs
	MoleMole.Config.ConfigAbilityPredicate[] enterPredicates
	MoleMole.Config.ConfigAbilityPredicate[] exitPredicates
	MoleMole.Config.ConfigAbilityAction[] enterActions
	MoleMole.Config.ConfigAbilityAction[] exitActions
}
class MoleMole.Config.OverrideStickElemUIMixin : MoleMole.Config.ConfigAbilityMixin {
	string effName
}
class MoleMole.Config.GlobalMainShieldMixin : MoleMole.Config.ConfigAbilityMixin {
	string shieldType
	MoleMole.Config.DynamicFloat shieldAngle
	MoleMole.Config.DynamicFloat shieldHPRatio
	MoleMole.Config.DynamicFloat shieldHP
	string costShieldRatioName
	string showDamageText
	MoleMole.Config.ConfigAbilityAction[] onShieldBroken
	MoleMole.Config.DynamicFloat amountByGetDamage
	string effectPattern
	string childShieldModifierName
	bool targetMuteHitEffect
	bool infiniteShield
	MoleMole.Config.DynamicFloat healLimitedByCasterMaxHPRatio
	MoleMole.Config.DynamicFloat healLimitedByLocalCreatureMaxHPRatio
}
class MoleMole.Config.GlobalSubShieldMixin : MoleMole.Config.ConfigAbilityMixin {
	string mainShieldModifierName
	bool notifyMainshieldWhenHit
}
class MoleMole.Config.AttachModifierToHPPercentMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.DynamicFloat[] valueSteps
	string[] modifierNameSteps
}
class MoleMole.Config.AttachModifierToHPPercentMixinV2 : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.DynamicFloat[] valueSteps
	string[] modifierNameSteps
	vuint delayFrameCount
	bool isNeedFlushOnRemoved
}
class MoleMole.Config.DoActionByTeamStatusMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityAction[] actions
	MoleMole.Config.ConfigAbilityPredicate[] predicates
	float waitTime
	bool waitForBigteam
	bool runPostRecover
}
class MoleMole.Config.DoActionByElementReactionMixin : MoleMole.Config.ConfigAbilityMixin {
	float range
	MoleMole.Config.EntityType[] entityTypes
	MoleMole.Config.ElementReactionType[] reactionTypes
	MoleMole.Config.ConfigAbilityAction[] actions
}
class MoleMole.Config.AnimatorRotationCompensateMixin : MoleMole.Config.ConfigAbilityMixin {
	string[] animatorStateIDs
	float animationRotate
	float angleLimit
}
class MoleMole.Config.TileAttackMixin : MoleMole.Config.ConfigAbilityMixin {
	string attackID
}
class MoleMole.Config.TileComplexMixin : MoleMole.Config.ConfigAbilityMixin {
	string attackID
	string attachPointName
	MoleMole.Config.Vector offset
	MoleMole.Config.TileShapeInfo shape
}
class MoleMole.Config.TileAttackManagerMixin : MoleMole.Config.ConfigAbilityMixin {
	string attackID
	float interval
	MoleMole.Config.TileCampType campType
	vuint fixCamp
	bool authorityHandle
	MoleMole.Config.ConfigAttackInfo attackInfo
}
class MoleMole.Config.DoTileActionManagerMixin : MoleMole.Config.ConfigAbilityMixin {
	float duration
	string actionID
	string actionPosKey
	string actionRadiusKey
	bool reactionForceUseOwnerProp
	MoleMole.Config.ConfigAbilityAction[] actions
}
class MoleMole.Config.TileComplexManagerMixin : MoleMole.Config.ConfigAbilityMixin {
	string attackID
	float interval
	vuint srcCamp
	MoleMole.Config.ConfigAttackInfo attackInfo
}
class MoleMole.Config.MonsterReadyMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityAction[] onMonsterReady
}
class MoleMole.Config.DoActionByKillingMixin : MoleMole.Config.ConfigAbilityMixin {
	string[] attackTags
	float detectWindow
	MoleMole.Config.ConfigAbilityAction[] onKill
}
class MoleMole.Config.ShaderLerpMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.E_ShaderData type
	bool forceStopWhenRemoved
}
class MoleMole.Config.ElementAdjustMixin : MoleMole.Config.ConfigAbilityMixin {
	float changeInterval
	map<MoleMole.Config.ElementType,string> elementModifies
}
class MoleMole.Config.AttachToElementTypeMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ElementType[] elementTypes
	bool reject
	string modifierName
}
class MoleMole.Config.AttachToAbilityStateMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.AbilityState[] abilityStates
	bool reject
	string modifierName
}
class MoleMole.Config.WatcherSystemMixin : MoleMole.Config.ConfigAbilityMixin {
	vuint watcherId
	MoleMole.Config.WatcherSystemMixinType mixinType
	MoleMole.Config.WatcherSystemListenType listenEntityType
	string listenStateId
	MoleMole.Config.ConfigAbilityPredicate[] predicates
}
class MoleMole.Config.ElementOuterGlowEffectMixin : MoleMole.Config.ConfigAbilityMixin {
}
class MoleMole.Config.ApplyModifierWithSharedDurabilityMixin : MoleMole.Config.ConfigAbilityMixin {
	string modifierName
}
class MoleMole.Config.PlayerUidNotifyMixin : MoleMole.Config.ConfigAbilityMixin {
	string opParam
	vuint opType
	MoleMole.Config.RelationalOperator logic
	MoleMole.Config.ConfigAbilityAction[] actions
}
class MoleMole.Config.AttachToPlayStageMixin : MoleMole.Config.ConfigAbilityMixin {
	vuint stage
	MoleMole.Config.ConfigAbilityAction[] actions
}
class MoleMole.Config.ServerCreateGadgetOnKillMixin : MoleMole.Config.ConfigAbilityMixin {
	vuint[] gadgetIDList
	vuint campID
	MoleMole.Config.TargetType campTargetType
	bool randomCreate
	bool useOriginOwnerAsGadgetOwner
	bool lifeByOwnerIsAlive
}
class MoleMole.Config.CameraBlurMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigCameraRadialBlur cameraRadialBlur
}
class MoleMole.Config.DoActionByGainCrystalSeedMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ElementType[] elementTypes
	MoleMole.Config.ConfigAbilityAction[] actions
}
class MoleMole.Config.ModifyElementDecrateMixin : MoleMole.Config.ConfigAbilityMixin {
	string group
}
class MoleMole.Config.ElementHittingOtherPredicatedMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityPredicate[] prePredicates
	MoleMole.Config.ElementBatchPredicated[] elementBatchPredicateds
}
class MoleMole.Config.ElementBatchPredicated {
	MoleMole.Config.ElementType[] elementTypeArr
	MoleMole.Config.ConfigAbilityAction[] successActions
	MoleMole.Config.ConfigAbilityAction[] failActions
}
class MoleMole.Config.ResistClimateMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.JsonClimateType[] climateTypes
	MoleMole.Config.ClimateSourceType source
	MoleMole.Config.ClimateTrendType trend
	MoleMole.Config.DynamicFloat ratio
	MoleMole.Config.AvatarStageType type
}
class MoleMole.Config.ServerUpdateGlobalValueMixin : MoleMole.Config.ConfigAbilityMixin {
	string key
	bool useLimitRange
	MoleMole.Config.DynamicFloat maxValue
	MoleMole.Config.DynamicFloat minValue
}
class MoleMole.Config.ElementReactionShockMixin : MoleMole.Config.ConfigAbilityMixin {
	float thinkInterval
	string campGlobalKey
	MoleMole.Config.ConfigAbilityAction attackAction
	MoleMole.Config.ConfigAbilityAction conductAction
}
class MoleMole.Config.BillboardMarkMixin : MoleMole.Config.ConfigAbilityMixin {
	string iconName
	float showDistance
}
class MoleMole.Config.BillboardFixedMarkMixin : MoleMole.Config.ConfigAbilityMixin {
	string prefabName
	bool onlyShowInElementView
}
class MoleMole.Config.AttachModifierToTargetDistanceMixin : MoleMole.Config.ConfigAbilityMixin {
	vuint[] targetIDs
	bool byserver
	MoleMole.Config.DynamicFloat[] valueSteps
	string[] modifierNameSteps
	bool removeAppliedModifier
	string BlendParam
	MoleMole.Config.DynamicFloat[] BlendDistance
	string effectPattern
}
class MoleMole.Config.MoveStateMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.MoveStateMixinType type
}
class MoleMole.Config.ServerFinishWatcherMixin : MoleMole.Config.ConfigAbilityMixin {
	vuint watcherId
	MoleMole.Config.ConfigAbilityPredicate[] predicates
}
class MoleMole.Config.DummyMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityAction[][] actionList
}
class MoleMole.Config.UrgentHotFixMixin : MoleMole.Config.ConfigAbilityMixin {
	vuint logicId
	float thinkInterval
	MoleMole.Config.ConfigAbilityAction[] actionList
}
class MoleMole.Config.FieldEntityCountChangeMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.TargetType campTargetType
	bool ignoreCamp
	bool forceTriggerWhenChangeAuthority
	MoleMole.Config.ConfigAbilityPredicate[] targetPredicates
	MoleMole.Config.ConfigAbilityAction[] onFieldEnter
	MoleMole.Config.ConfigAbilityAction[] onFieldExit
	bool replaceOnAddedInTick
	string simpleCountGlobaValueKey
	bool simpleCountUseLimitRange
	MoleMole.Config.DynamicFloat simpleCountMaxValue
	MoleMole.Config.DynamicFloat simpleCountMinValue
}
class MoleMole.Config.TDPlayMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.TDPlayTowerType towerType
	float baseCD
	float baseAttackRange
	MoleMole.Config.ConfigAbilityAction[] onFireActions
	string towerModifierName
	vuint[] bulletIDs
	MoleMole.Config.ConfigBornType born
	string[] partRootNames
	MoleMole.Config.ControlPartTargetType targetType
}
class MoleMole.Config.TDPlayMixinV2 : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.TDPlayTowerType towerType
	float baseCD
	float baseAttackRange
	MoleMole.Config.ConfigAbilityAction[] onFireActions
	vuint bulletID
	MoleMole.Config.ConfigBornType born
	string[] partRootNames
	MoleMole.Config.ControlPartTargetType targetType
}
class MoleMole.Config.ModifyCameraMaxDistanceMixin : MoleMole.Config.ConfigAbilityMixin {
	float MaxDistance
	bool ResetToMaxOnStart
	float LerpInDuration
	float LerpOutDuration
}
class MoleMole.Config.CircleBarrageMixin : MoleMole.Config.ConfigAbilityMixin {
	vuint bulletID
	float innerRadius
	vint cutNum
	vint waveNum
	float waveCD
	vint wavebulletNum
	float waveangle
	float triggerCD
	string shootPoint
}
class MoleMole.Config.VelocityForceMixin : MoleMole.Config.ConfigAbilityMixin {
	bool muteAll
	bool useAll
	MoleMole.Config.VelocityForceType[] includeForces
	MoleMole.Config.VelocityForceType[] excludeForces
}
class MoleMole.Config.ScenePropSyncMixin : MoleMole.Config.ConfigAbilityMixin {
	string tileName
	bool isWorldType
}
class MoleMole.Config.BanEntityMarkMixin : MoleMole.Config.ConfigAbilityMixin {
}
class MoleMole.Config.EntityMarkShowTypeMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.EntityMarkType markType
}
class MoleMole.Config.EntityDitherMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityPredicate[] predicates
	float ditherValue
	float cutInTime
	float cutOutTime
	bool forceUpdateAtStart
}
class MoleMole.Config.EntityInVisibleMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityPredicate[] predicates
	MoleMole.Config.AbilityEntityVisibleReason reason
	bool disableAudio
}
class MoleMole.Config.SetSkillCanUseInStateMixin : MoleMole.Config.ConfigAbilityMixin {
	vuint[] skillList
	string[] stateList
}
class MoleMole.Config.GadgetChargeMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ElementType chargeType
	float chargeRatio
	float chargeValue
	float maxChargeValue
	MoleMole.Config.DynamicFloat[] valueSteps
	string[] modifierNameSteps
	string globalValueKey
	string ratioGlobalValueKey
}
class MoleMole.Config.HomeworldEnterEditorMixin : MoleMole.Config.ConfigAbilityMixin {
	string[] editorModifierNames
	string[] worldModifierNames
}
class MoleMole.Config.HomeworldServerEventMixin : MoleMole.Config.ConfigAbilityMixin {
	string[] editorModifierNames
	string[] worldModifierNames
}
class MoleMole.Config.GadgetUpgradeChainMixin : MoleMole.Config.ConfigAbilityMixin {
	string globalValueKey
}
class MoleMole.Config.InteractTriggerAbility : MoleMole.Config.ConfigAbilityMixin {
	string abilityName
}
class MoleMole.Config.InteractTriggerAbilityMixin : MoleMole.Config.ConfigAbilityMixin {
	string abilityName
}
class MoleMole.Config.AttachToWidgetStateMixin : MoleMole.Config.ConfigAbilityMixin {
	vuint targetWidgetMaterialId
	MoleMole.Config.ConfigAbilityAction[] onActive
	MoleMole.Config.ConfigAbilityAction[] onDisable
	MoleMole.Config.ConfigAbilityAction[] onRemoved
}
class MoleMole.Config.WidgetMpSupportMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityAction[] succActions
	MoleMole.Config.ConfigAbilityAction[] failActions
	MoleMole.Config.ConfigAbilityPredicate[] predicates
}
class MoleMole.Config.FollowAttachPointEffectMixin : MoleMole.Config.ConfigAbilityMixin {
	string modifierName
	MoleMole.Config.FollowAttachOccupyPriority attachPriority
	bool refreshOnAvatarIn
}
class MoleMole.Config.MultiBadmintonShootMixin : MoleMole.Config.ConfigAbilityMixin {
	float minInterval
	float maxInterval
	float extraShootInterval
	string[] extraShootTag
	MoleMole.Config.MultiBadmintonBullet[] bullets
	vint tresBulletID
	vint normalBulletID
	vint traceBulletID
	string[] traceTarget
	vint perChangeWeight
	MoleMole.Config.ConfigBornType born
}
class MoleMole.Config.MultiBadmintonBullet {
	vuint bulletID
	vint weight
	vint speed
}
class MoleMole.Config.ElementConvertToChargeBarValueMixin : MoleMole.Config.ConfigAbilityMixin {
	string group
}
class MoleMole.Config.DynamicCollisionMixin : MoleMole.Config.ConfigAbilityMixin {
	string[] tags
	bool isChecker
}
class MoleMole.Config.AIPerceptionMixin : MoleMole.Config.ConfigAbilityMixin {
	vuint[] featureTagIDs
	vuint perceptionTemplateID
}
class MoleMole.Config.AttachModifierByNeuronMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.NeuronName[] neuronNameList
	MoleMole.Config.NeuronMixinRemoveOperatorType removeOperator
	string modifierName
	bool authorityOnly
}
class MoleMole.Config.OverrideMonsterMoveSpeedRatioMixin : MoleMole.Config.ConfigAbilityMixin {
	float minValue
	float maxValue
}
class MoleMole.Config.ConnectLineMixin : MoleMole.Config.ConfigAbilityMixin {
	string RepeaterModifier
	string CollectorModifier
	string CollectorGlobalvalueKey
	MoleMole.Config.SelectTargets otherTargets
	MoleMole.Config.ConfigAbilityPredicate[] predicates
	MoleMole.Config.ConfigAbilityPredicate[] predicatesForeach
}
class MoleMole.Config.ElectricCoreMoveMixin : MoleMole.Config.ConfigAbilityMixin {
	float stageOnceVelocity
	float stageOneAccelerate
	float stageTwoVelocity
	float stageTwoAttenuation
	float maxAbsorbTime
	MoleMole.Config.ConfigBornType toPos
	MoleMole.Config.ConfigAbilityAction[] onCoreEnter
	MoleMole.Config.ConfigAbilityAction[] onInterrupted
	MoleMole.Config.ConfigAbilityAction[] onStartSuccess
	MoleMole.Config.ConfigAbilityAction[] onStartFailed
}
class MoleMole.Config.SendPostionToShaderCutMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.AbilityTargetting sendTarget
	float sendRadius
	MoleMole.Config.Vector scale
	MoleMole.Config.Vector offset
}
class MoleMole.Config.FishingAimParabolaMixin : MoleMole.Config.ConfigAbilityMixin {
	float minAngle
	float maxAngle
	float minRange
	float maxRange
	string globalValueKey
	MoleMole.Config.SelectTargets otherTargets
	MoleMole.Config.AbilityTargetting target
}
class MoleMole.Config.ElectricCoreLineMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.SelectTargets otherTargets
	string activateSkillKey
	MoleMole.Config.ConfigAbilityPredicate[] predicates
}
class MoleMole.Config.StreamingModifierMixin : MoleMole.Config.ConfigAbilityMixin {
	bool applyModifier
}
class MoleMole.Config.SelfAddDurabilityMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.DynamicFloat value
	bool useLimitRange
	MoleMole.Config.DynamicFloat maxValue
	MoleMole.Config.DynamicFloat minValue
	float thinkInterval
}
class MoleMole.Config.ClampDamageReceivedMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.DamageClampType clampType
	MoleMole.Config.DynamicFloat maxValue
	MoleMole.Config.DynamicFloat minValue
}
class MoleMole.Config.DoActionByDamageReceivedMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.DoActionByDamageReceivedParamType paramType
	MoleMole.Config.DynamicFloat valueMin
	MoleMole.Config.DynamicFloat valueMax
	MoleMole.Config.ConfigAbilityAction[] actionQueue
}
class MoleMole.Config.AttachModifierToClimateMeterMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.DynamicFloat[] valueSteps
	string[] modifierNameSteps
}
class MoleMole.Config.ChangeLockTypeMixin : MoleMole.Config.ConfigAbilityMixin {
	string lockType
	float overrideRange
	float overrideNormalPri
	float overrideCombatPri
}
class MoleMole.Config.EffectChangeAlphaMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.AbilityTargetting target
	MoleMole.Config.SelectTargets otherTargets
	MoleMole.Config.ConfigAbilityPredicate[] predicates
	float startDuration
	float endDuration
}
class MoleMole.Config.ReplaceFaceAnimationMixin : MoleMole.Config.ConfigAbilityMixin {
	string[] oldFaceAnimations
	string[] newFaceAnimations
}
class MoleMole.Config.DigAttachModifierToTargetDistanceMixin : MoleMole.Config.ConfigAbilityMixin {
	vuint targetID
	float distance
	string unfoundEffectPattern
	string foundEffectPattern
	MoleMole.Config.ConfigAbilityAction[] unfoundActionArray
	MoleMole.Config.ConfigAbilityAction[] foundActionArray
}
class MoleMole.Config.RigidBodyFreezeMixin : MoleMole.Config.ConfigAbilityMixin {
}
class MoleMole.Config.DoActionOnGlobalValueChangeMixin : MoleMole.Config.ConfigAbilityMixin {
	string globalValueKey
	MoleMole.Config.ConfigAbilityAction[] actions
	bool isDelay
	float delayTime
}
class MoleMole.Config.DiePatternSwitchMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.DiePatternSwitchMixinPriority priority
	bool hasAnimatorDie
	bool muteAllShaderDieEff
	bool fallWhenAirDie
	float dieEndTime
	float dieForceDisappearTime
	string dieDisappearEffect
	float dieDisappearEffectDelay
	MoleMole.Config.E_ShaderData dieShaderData
	float dieShaderEnableDurationTime
	float dieShaderDisableDurationTime
	float dieModelFadeDelay
	float ragDollDieEndTimeDelay
	bool startDieEndAtOnce
	bool notSendDieTrigger
	bool ignoreElementDie
	bool muteHitBox
	bool dieDenyLockOn
	bool dieIsGhostToEnemy
	bool dieIgnoreTriggerBullet
	bool muteBillboard
	bool mutePushCollider
}
class MoleMole.Config.AttackReviveEnergyMixin : MoleMole.Config.ConfigAbilityMixin {
	string[] attackTags
	float maxValue
	float minValue
	float addValue
	MoleMole.Config.ConfigAbilityAction reviveAction
	map<MoleMole.Config.ElementType,MoleMole.Config.ConfigAbilityAction> fireEffectActions
}
class MoleMole.Config.DoActionBySelfModifierElementDurabilityRatioMixin : MoleMole.Config.ConfigAbilityMixin {
	string uniqueModifierName
	MoleMole.Config.DynamicFloat[] valueSteps
	MoleMole.Config.ConfigAbilityAction[][] actionQueues
}
class MoleMole.Config.WidgetCDSyncMixin : MoleMole.Config.ConfigAbilityMixin {
	bool syncOnTick
	bool syncOnChangeAvatar
	bool syncOnCDChange
	bool syncOnlyGreater
	vuint itemId
	vuint skillId
	float skillCDOffset
}
class MoleMole.Config.DoActionByEntityKillMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityPredicate[] predicates
	MoleMole.Config.ConfigAbilityAction[] actionQueue
}
class MoleMole.Config.EnableCharacterMoveOnWaterMixin : MoleMole.Config.ConfigAbilityMixin {
}
class MoleMole.Config.ExcludeGravityMixin : MoleMole.Config.ConfigAbilityMixin {
}
class MoleMole.Config.HideAvatarSkillMixin : MoleMole.Config.ConfigAbilityMixin {
	vuint[] skillIDs
}
class MoleMole.Config.DoActionByRayTagMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.UGCRayTriggerDirectionType[] UGCRayTriggerDirections
	vuint[] rayTags
	string[] modifierToTags
	float raycastInterval
}
class MoleMole.Config.UnitDurationMixin : MoleMole.Config.ConfigAbilityMixin {
	bool isTrigger
	string[] modifierName
	MoleMole.Config.DynamicFloat[] steps
}
class MoleMole.Config.UGCTimeControlMixin : MoleMole.Config.ConfigAbilityMixin {
}
class MoleMole.Config.EntityDisplacementMixin : MoleMole.Config.ConfigAbilityMixin {
	float triggerDistance
	MoleMole.Config.ConfigAbilityAction[] actionList
}
class MoleMole.Config.OnLevelTagChangeMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityAction[] actions
}
class MoleMole.Config.RoomRotateGadgetStateMixin : MoleMole.Config.ConfigAbilityMixin {
}
class MoleMole.Config.CameraSetReflectionMixin : MoleMole.Config.ConfigAbilityMixin {
	string reflectionLayer
	string reflectionPlaneTransName
}
class MoleMole.Config.MonsterLaunchMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityAction[] onMotionChange
	string runUpToPos
	string launchToPos
	vint launchSpeedBezierType
	bool hasLaunchPos
	float launchTime
	float launchSpeed
}
class MoleMole.Config.MonsterLandMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityAction[] onMotionChange
	string dropToPos
	vint dropSpeedBezierType
	bool hasDropPos
	float dropTime
	float dropSpeed
}
class MoleMole.Config.GrapplingHookMoveMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityAction[] onArrived
	float upForceValue
	float upForceTime
	float arriveDistance
}
class MoleMole.Config.GrapplingHookMoveStayInPlaceMixin : MoleMole.Config.ConfigAbilityMixin {
}
class MoleMole.Config.EnableManualOcclusionMixin : MoleMole.Config.ConfigAbilityMixin {
}
class MoleMole.Config.DisableTrampolineMixin : MoleMole.Config.ConfigAbilityMixin {
}
class MoleMole.Config.DoActionBySelfElementReactionMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ElementReactionType[] reactionTypes
	MoleMole.Config.ConfigAbilityAction[] actionQueue
}
class MoleMole.Config.SetAnimationPauseByAbilityStateMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.AbilityState[] abilityStates
}
class MoleMole.Config.BaseSwitchMixin : MoleMole.Config.ConfigAbilityMixin {
}
class MoleMole.Config.CountCheckEventMixin : MoleMole.Config.ConfigAbilityMixin {
	string eventKey
	MoleMole.Config.ConfigAbilityPredicate[] predicates
	float checkTime
	vuint checkCount
	MoleMole.Config.ConfigAbilityAction[] actionQueue
}
class MoleMole.Config.RocketJumpMixin : MoleMole.Config.BaseSwitchMixin {
	MoleMole.Config.RocketJumpType type
	MoleMole.Config.RocketJumpExt extention
	bool uiEffect
}
class MoleMole.Config.ChangeColliderTagMixin : MoleMole.Config.BaseSwitchMixin {
	string transName
	MoleMole.Config.TagType tag
}
class MoleMole.Config.AttachActionToModifierMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityAction[] onAdded
	MoleMole.Config.ConfigAbilityAction[] onRemoved
}
class MoleMole.Config.OnParentAbilityStartMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityAction[] actionList
}
class MoleMole.Config.CheckGrapplingHookMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityAction[] onEnterHookArea
	MoleMole.Config.ConfigAbilityAction[] onExitHookArea
	string activateSkillKey
	MoleMole.Config.CheckGrapplingHookConfig checkParams
}
class MoleMole.Config.CheckGrapplingHookConfig {
	vuint gadgetState
	float hookAreaRadius
	float minDistToAvatar
	float maxDistToAvatar
	float screenEllipseRatioX
	float screenEllipseRatioY
	float xweight
	float yweight
	MoleMole.Config.GrapplingHookUIConfig ui
}
class MoleMole.Config.GrapplingHookUIConfig {
	string selectableIcon
	string selectedIcon
	string unselectableIcon
}
class MoleMole.Config.ThrowGrapplingHookMixin : MoleMole.Config.ConfigAbilityMixin {
	string effectPattern
	string positionKey
	MoleMole.Config.ConfigAbilityAction[] onHookReached
}
class MoleMole.Config.PlatformMoveMixin : MoleMole.Config.ConfigAbilityMixin {
	bool isLogicMove
	string[] moveModifiers
	string[] stopModifiers
}
class MoleMole.Config.EnableSprintInBlackMudMixin : MoleMole.Config.ConfigAbilityMixin {
}
class MoleMole.Config.DisableMonsterPickedUpMixin : MoleMole.Config.ConfigAbilityMixin {
}
class MoleMole.Config.AttachModifierByActivityGachaStageMixin : MoleMole.Config.ConfigAbilityMixin {
	vuint[] stageIDs
	string[] modifierNameSteps
}
class MoleMole.Config.AddAvatarInCDMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.DynamicFloat increasedDuration
}
class MoleMole.Config.GrapplingHookPointMixin : MoleMole.Config.ConfigAbilityMixin {
}
class MoleMole.Config.VehicleSkillDepotChangeMixin : MoleMole.Config.ConfigAbilityMixin {
	vuint[] targetVehicleIDs
	vuint skillDepotId
}
class MoleMole.Config.WidgetLightUpControlMixin : MoleMole.Config.ConfigAbilityMixin {
	vuint targetWidgetMaterialId
}
class MoleMole.Config.HideActionSlotMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ActionSlotType slotType
}
class MoleMole.Config.DamageStatisticsMixin : MoleMole.Config.ConfigAbilityMixin {
	bool isMinDamage
	string damageElementTypeKey
	string damageAmountKey
	MoleMole.Config.ConfigAbilityAction[] onExitActions
}
class MoleMole.Config.AvatarCombatMixin : MoleMole.Config.ConfigAbilityMixin {
	MoleMole.Config.ConfigAbilityAction[] onEnterCombat
	MoleMole.Config.ConfigAbilityAction[] onExitCombat
}
class MoleMole.Config.TileShapeInfo {
}
class MoleMole.Config.SphereTileShapeInfo : MoleMole.Config.TileShapeInfo {
	float radius
}
class MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.AbilityTargetting target
}
class MoleMole.Config.RelationalOperationPredicate : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.RelationalOperator logic
}
class MoleMole.Config.ByRaycast : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.RaycastType raycastType
	MoleMole.Config.DynamicFloat value
	MoleMole.Config.RelationType compareType
}
class MoleMole.Config.ByHitLevel : MoleMole.Config.RelationalOperationPredicate {
	MoleMole.Config.HitLevel hitLevel
}
class MoleMole.Config.ByTargetPosToGlobalPosDistance : MoleMole.Config.RelationalOperationPredicate {
	MoleMole.Config.TargetPosToSelfPosType compareType
	MoleMole.Config.DynamicFloat value
	string positionKey
	bool keyFromTarget
}
class MoleMole.Config.ByGlobalPosToGlobalPosDistance : MoleMole.Config.RelationalOperationPredicate {
	MoleMole.Config.TargetPosToSelfPosType compareType
	MoleMole.Config.DynamicFloat value
	string positionKey1
	bool key1FromTarget
	string positionKey2
	bool key2FromTarget
}
class MoleMole.Config.ByTargetHPRatio : MoleMole.Config.RelationalOperationPredicate {
	MoleMole.Config.DynamicFloat HPRatio
}
class MoleMole.Config.ByLocalAvatarStamina : MoleMole.Config.RelationalOperationPredicate {
	MoleMole.Config.DynamicFloat stamina
}
class MoleMole.Config.ByLocalAvatarStaminaRatio : MoleMole.Config.RelationalOperationPredicate {
	MoleMole.Config.DynamicFloat staminaRatio
}
class MoleMole.Config.ByTargetHPValue : MoleMole.Config.RelationalOperationPredicate {
	MoleMole.Config.DynamicFloat HP
}
class MoleMole.Config.ByHitDamage : MoleMole.Config.RelationalOperationPredicate {
	MoleMole.Config.DynamicFloat damage
	bool useOriginDamage
}
class MoleMole.Config.ByHitEnBreak : MoleMole.Config.RelationalOperationPredicate {
	MoleMole.Config.DynamicFloat enBreak
}
class MoleMole.Config.ByTargetOverrideMapValue : MoleMole.Config.RelationalOperationPredicate {
	string targetAbilityName
	string targetKey
	MoleMole.Config.DynamicFloat targetValue
}
class MoleMole.Config.ByTargetWeight : MoleMole.Config.RelationalOperationPredicate {
	MoleMole.Config.DynamicFloat weight
}
class MoleMole.Config.ByAnimatorFloat : MoleMole.Config.RelationalOperationPredicate {
	MoleMole.Config.DynamicFloat value
	string parameter
}
class MoleMole.Config.ByAnimatorInt : MoleMole.Config.RelationalOperationPredicate {
	MoleMole.Config.DynamicInt value
	string parameter
}
class MoleMole.Config.ByAnimatorBool : MoleMole.Config.RelationalOperationPredicate {
	bool value
	string parameter
}
class MoleMole.Config.ByTargetPositionToSelfPosition : MoleMole.Config.RelationalOperationPredicate {
	MoleMole.Config.TargetPosToSelfPosType compareType
	MoleMole.Config.DynamicFloat value
}
class MoleMole.Config.ByTargetForwardAndSelfPosition : MoleMole.Config.RelationalOperationPredicate {
	MoleMole.Config.DynamicFloat value
	bool isXZ
}
class MoleMole.Config.BySelfForwardAndTargetPosition : MoleMole.Config.RelationalOperationPredicate {
	MoleMole.Config.DynamicFloat value
	bool isXZ
}
class MoleMole.Config.ByEnergyRatio : MoleMole.Config.RelationalOperationPredicate {
	MoleMole.Config.DynamicFloat ratio
}
class MoleMole.Config.ByEnergy : MoleMole.Config.RelationalOperationPredicate {
	MoleMole.Config.DynamicFloat value
}
class MoleMole.Config.BySummonTagValue : MoleMole.Config.RelationalOperationPredicate {
	vuint summonTag
	MoleMole.Config.DynamicInt value
}
class MoleMole.Config.ByAttackNotHitScene : MoleMole.Config.RelationalOperationPredicate {
	MoleMole.Config.ConfigBaseAttackPattern attackPattern
	bool checkWaterLayer
}
class MoleMole.Config.ByTargetAltitude : MoleMole.Config.RelationalOperationPredicate {
	MoleMole.Config.DynamicFloat value
	MoleMole.Config.TargetAltitudeType TargetAltitudeType
}
class MoleMole.Config.ByCompareWithTarget : MoleMole.Config.RelationalOperationPredicate {
	bool useOwner
	MoleMole.Config.CompareProperty property
}
class MoleMole.Config.ByGlobalPosToGround : MoleMole.Config.RelationalOperationPredicate {
	string globalPos
	MoleMole.Config.DynamicFloat toGroundHeight
	bool toWater
}
class MoleMole.Config.ByTargetRaycastVisiable : MoleMole.Config.ConfigAbilityPredicate {
}
class MoleMole.Config.ByHitCritical : MoleMole.Config.ConfigAbilityPredicate {
}
class MoleMole.Config.ByWetHitCollider : MoleMole.Config.ConfigAbilityPredicate {
}
class MoleMole.Config.ByHitBoxName : MoleMole.Config.ConfigAbilityPredicate {
	string[] hitBoxNames
}
class MoleMole.Config.ByHitBoxType : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.HitBoxType hitBoxType
}
class MoleMole.Config.ByHasElement : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.ElementType element
}
class MoleMole.Config.ByHasAbilityState : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.AbilityState abilityState
}
class MoleMole.Config.ByNot : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.ConfigAbilityPredicate[] predicates
}
class MoleMole.Config.ByAny : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.ConfigAbilityPredicate[] predicates
}
class MoleMole.Config.ByAnd : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.ConfigAbilityPredicate[] predicates
}
class MoleMole.Config.ByHasAttackTarget : MoleMole.Config.ConfigAbilityPredicate {
}
class MoleMole.Config.ByTargetIsGhostToEnemy : MoleMole.Config.ConfigAbilityPredicate {
}
class MoleMole.Config.ByTargetIsSelf : MoleMole.Config.ConfigAbilityPredicate {
	bool isSelf
}
class MoleMole.Config.ByTargetElement : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.ElementType elementType
}
class MoleMole.Config.ByHostOrGuest : MoleMole.Config.ConfigAbilityPredicate {
	bool isHost
}
class MoleMole.Config.ByAvatarIsHost : MoleMole.Config.ConfigAbilityPredicate {
	bool isHost
}
class MoleMole.Config.ByTargetGlobalValue : MoleMole.Config.ConfigAbilityPredicate {
	string key
	MoleMole.Config.DynamicFloat value
	MoleMole.Config.DynamicFloat maxValue
	bool forceByCaster
	MoleMole.Config.RelationType compareType
}
class MoleMole.Config.ByScenePropState : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.EntityType entityType
	MoleMole.Config.SceneObjState state
}
class MoleMole.Config.ByAvatarInWaterDepth : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.RelationType compareType
	float depth
}
class MoleMole.Config.ByEntityTypes : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.EntityType[] entityTypes
	bool reject
	bool useEventSource
	vint isAuthority
}
class MoleMole.Config.ByHitImpulse : MoleMole.Config.ConfigAbilityPredicate {
	float hitImpulse
}
class MoleMole.Config.ByHitElement : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.ElementType element
}
class MoleMole.Config.ByHitStrikeType : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.StrikeType strikeType
}
class MoleMole.Config.ByIsMoveOnWater : MoleMole.Config.ConfigAbilityPredicate {
}
class MoleMole.Config.ByAttackTags : MoleMole.Config.ConfigAbilityPredicate {
	string[] attackTags
}
class MoleMole.Config.BySceneSurfaceType : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.SceneSurfaceType[] filters
	bool include
	MoleMole.Config.Vector offset
}
class MoleMole.Config.ByUnlockTalentParam : MoleMole.Config.ConfigAbilityPredicate {
	string talentParam
}
class MoleMole.Config.BySkillReady : MoleMole.Config.ConfigAbilityPredicate {
	vuint skillID
	vuint[] skillSlot
}
class MoleMole.Config.ByIsCombat : MoleMole.Config.ConfigAbilityPredicate {
}
class MoleMole.Config.ByVehicleIsCombat : MoleMole.Config.ConfigAbilityPredicate {
}
class MoleMole.Config.ByStageIsReadyTemp : MoleMole.Config.ConfigAbilityPredicate {
}
class MoleMole.Config.ByItemNumber : MoleMole.Config.ConfigAbilityPredicate {
	vuint itemId
	vuint itemNum
}
class MoleMole.Config.ByHasFeatureTag : MoleMole.Config.ConfigAbilityPredicate {
	vuint[] featureTagIDs
}
class MoleMole.Config.ByAvatarElementType : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.ElementType elementType
}
class MoleMole.Config.ByAvatarWeaponType : MoleMole.Config.ConfigAbilityPredicate {
	string[] weaponTypes
}
class MoleMole.Config.ByAvatarBodyType : MoleMole.Config.ConfigAbilityPredicate {
	string bodyType
}
class MoleMole.Config.ByCurTeamHasFeatureTag : MoleMole.Config.ConfigAbilityPredicate {
	vuint featureTagID
	vuint number
	MoleMole.Config.RelationalOperator logic
}
class MoleMole.Config.ByCurTeamHasElementType : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.ElementType elementType
	vuint number
	MoleMole.Config.RelationalOperator logic
}
class MoleMole.Config.ByCurTeamElementTypeSort : MoleMole.Config.ConfigAbilityPredicate {
	vuint number
	MoleMole.Config.RelationalOperator logic
}
class MoleMole.Config.ByCurTeamHasWeaponType : MoleMole.Config.ConfigAbilityPredicate {
	string weaponType
	vuint number
	MoleMole.Config.RelationalOperator logic
}
class MoleMole.Config.ByCurTeamWeaponTypeSort : MoleMole.Config.ConfigAbilityPredicate {
	vuint number
	MoleMole.Config.RelationalOperator logic
}
class MoleMole.Config.ByCurTeamHasBodyType : MoleMole.Config.ConfigAbilityPredicate {
	string bodyType
	vuint number
	MoleMole.Config.RelationalOperator logic
}
class MoleMole.Config.ByCurTeamBodyTypeSort : MoleMole.Config.ConfigAbilityPredicate {
	vuint number
	MoleMole.Config.RelationalOperator logic
}
class MoleMole.Config.ByBigTeamHasFeatureTag : MoleMole.Config.ConfigAbilityPredicate {
	vuint featureTagID
	vuint number
	MoleMole.Config.RelationalOperator logic
}
class MoleMole.Config.ByBigTeamHasElementType : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.ElementType elementType
	vuint number
	MoleMole.Config.RelationalOperator logic
}
class MoleMole.Config.ByBigTeamElementTypeSort : MoleMole.Config.ConfigAbilityPredicate {
	vuint number
	MoleMole.Config.RelationalOperator logic
}
class MoleMole.Config.ByBigTeamHasWeaponType : MoleMole.Config.ConfigAbilityPredicate {
	string weaponType
	vuint number
	MoleMole.Config.RelationalOperator logic
}
class MoleMole.Config.ByBigTeamWeaponTypeSort : MoleMole.Config.ConfigAbilityPredicate {
	vuint number
	MoleMole.Config.RelationalOperator logic
}
class MoleMole.Config.ByBigTeamHasBodyType : MoleMole.Config.ConfigAbilityPredicate {
	string bodyType
	vuint number
	MoleMole.Config.RelationalOperator logic
}
class MoleMole.Config.ByBigTeamBodyTypeSort : MoleMole.Config.ConfigAbilityPredicate {
	vuint number
	MoleMole.Config.RelationalOperator logic
}
class MoleMole.Config.ByAttackType : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.AttackType attackType
}
class MoleMole.Config.ByEntityAppearVisionType : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.EntityAppearVisionType visionType
}
class MoleMole.Config.ByElementTriggerEntityType : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.EntityType[] entityTypes
	bool forcebyOriginOwner
}
class MoleMole.Config.ByElementReactionSourceType : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.ElementReactionSourceType sourceType
}
class MoleMole.Config.ByElementReactionType : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.ElementReactionType reactionType
}
class MoleMole.Config.ByTargetConfigID : MoleMole.Config.ConfigAbilityPredicate {
	vuint[] configIdArray
}
class MoleMole.Config.ByIsLocalAvatar : MoleMole.Config.ConfigAbilityPredicate {
}
class MoleMole.Config.ByTargetGadgetState : MoleMole.Config.ConfigAbilityPredicate {
	vuint gadgetState
}
class MoleMole.Config.ByDieStateFlag : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.DieStateFlag dieStateFlag
}
class MoleMole.Config.ByHasShield : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.HasShieldType type
	bool usePotentShield
	MoleMole.Config.ElementType potentShieldType
}
class MoleMole.Config.ByHasShieldV2 : MoleMole.Config.ByHasShield {
}
class MoleMole.Config.ByHasShieldBar : MoleMole.Config.ConfigAbilityPredicate {
	bool usePotentShield
	MoleMole.Config.ElementType potentShieldType
}
class MoleMole.Config.ByEquipAffixReady : MoleMole.Config.ConfigAbilityPredicate {
	vuint equipAffixDataID
}
class MoleMole.Config.ByTargetInArea : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.TargetPositionAreaLevel areaLevel
	vuint[] areas
}
class MoleMole.Config.ByIsTargetCamp : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.AbilityTargetting campBaseOn
	MoleMole.Config.TargetType campTargetType
}
class MoleMole.Config.ByHasChildGadget : MoleMole.Config.ConfigAbilityPredicate {
	vuint[] configIdArray
	vuint value
	MoleMole.Config.RelationType compareType
	bool forceByCaster
	bool checkEntityAlive
}
class MoleMole.Config.ByTargetLayoutArea : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.JsonClimateType areaType
	MoleMole.Config.JsonClimateType climateType
	vuint areaID
}
class MoleMole.Config.ByPlayerClimateType : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.JsonClimateType climateType
}
class MoleMole.Config.ByTargetWeatherName : MoleMole.Config.ConfigAbilityPredicate {
	string weatherName
}
class MoleMole.Config.ByIsGadgetExistAround : MoleMole.Config.ConfigAbilityPredicate {
	vuint[] gadgetIdArray
	bool trunToTarget
}
class MoleMole.Config.ByEntityIsAlive : MoleMole.Config.ConfigAbilityPredicate {
}
class MoleMole.Config.ByMonsterAirState : MoleMole.Config.ConfigAbilityPredicate {
	bool IsAirMove
}
class MoleMole.Config.ByGameTimeIsLocked : MoleMole.Config.ConfigAbilityPredicate {
	bool isLocked
}
class MoleMole.Config.ByTargetIsCaster : MoleMole.Config.ConfigAbilityPredicate {
	bool isCaster
}
class MoleMole.Config.ByHitElementDurability : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.ElementType element
	float durability
	MoleMole.Config.RelationType compareType
	bool applyAttenuation
}
class MoleMole.Config.ByHasTag : MoleMole.Config.ConfigAbilityPredicate {
	string tag
}
class MoleMole.Config.ByHasLevelTag : MoleMole.Config.ConfigAbilityPredicate {
	string levelTag
	vuint levelTagId
}
class MoleMole.Config.ByCurrentSceneTypes : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.SceneType[] SceneTypes
}
class MoleMole.Config.ByTargetType : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.AbilityTargetting targetType
	bool isTarget
}
class MoleMole.Config.ByCurrentSceneId : MoleMole.Config.ConfigAbilityPredicate {
	vuint[] sceneIds
}
class MoleMole.Config.ByTargetChargeValue : MoleMole.Config.ConfigAbilityPredicate {
	MoleMole.Config.ElementType element
	string globalValueKey
	MoleMole.Config.DynamicFloat value
	MoleMole.Config.RelationType compareType
}
class MoleMole.Config.ByHasModifier : MoleMole.Config.ConfigAbilityPredicate {
	string modifierName
}
class MoleMole.Config.ByFindBlinkPointSuccess : MoleMole.Config.ConfigAbilityPredicate {
	bool findPointSuccess
}
class MoleMole.Config.ByFollowTargetValid : MoleMole.Config.ConfigAbilityPredicate {
	bool checkComponent
	bool checkHasFollowTarget
	bool checkVisible
	bool checkActive
	bool checkValid
}
class MoleMole.Config.ByWidgetExCDReady : MoleMole.Config.ConfigAbilityPredicate {
	vuint itemId
}
class MoleMole.Config.ByHaveMoveInput : MoleMole.Config.ConfigAbilityPredicate {
}
class MoleMole.Config.ByTargetSkillPoint : MoleMole.Config.ConfigAbilityPredicate {
	vuint skillID
	MoleMole.Config.DynamicFloat value
	MoleMole.Config.RelationType compareType
}
class MoleMole.Config.ByDungeonSettled : MoleMole.Config.ConfigAbilityPredicate {
}
class MoleMole.Config.BySceneLoaded : MoleMole.Config.ConfigAbilityPredicate {
}
class MoleMole.Config.ByIsInReconnect : MoleMole.Config.ConfigAbilityPredicate {
}
class MoleMole.Config.ByTrampolineType : MoleMole.Config.ConfigAbilityPredicate {
	bool isExcitedState
}
class MoleMole.Config.ConfigAbilityTask : MoleMole.Config.BaseAbilityLogic {
	bool isAsync
	float duration
	float delay
}
class MoleMole.Config.ConfigDummyAbilityTask : MoleMole.Config.ConfigAbilityTask {
	vint dummyNumber
}
class MoleMole.Config.ConfigTriggerMassiveElementTask : MoleMole.Config.ConfigAbilityTask {
	MoleMole.Config.ConfigMassiveEntityElement[] entityElements
	MoleMole.Config.ConfigMassiveElementTriggerAction[] elementTriggerActions
}
class MoleMole.Config.ConfigMassiveEntityElement {
	MoleMole.Config.EntityType entityType
	MoleMole.Config.ElementType elementType
	float elementDurability
	bool isElementDurabilityMutable
}
class MoleMole.Config.ConfigMassiveElementTriggerAction {
	MoleMole.Config.MassiveElementTriggerType triggerType
	MoleMole.Config.ModifierStacking stackType
	float reduceDurability
	float duration
	string attackID
	string actionID
	MoleMole.Config.ConfigAbilityAction[] onFlush
	MoleMole.Config.ConfigAbilityAction[] onPreUpdate
	MoleMole.Config.ConfigAbilityAction[] onDetach
}
class MoleMole.Config.ConfigAIThreatScoreBaseSetting {
	bool enable
	vint weight
	float value
	float min
	float max
	MoleMole.Config.OrderingType compareOperation
}
class MoleMole.Config.ConfigAITSAbilityGlobalValueSetting : MoleMole.Config.ConfigAIThreatScoreBaseSetting {
	string caredGlobalValueName
}
class MoleMole.Config.ConfigAITSTargetDistanceSetting : MoleMole.Config.ConfigAIThreatScoreBaseSetting {
}
class MoleMole.Config.ConfigAITSTargetBearingSetting : MoleMole.Config.ConfigAIThreatScoreBaseSetting {
}
class MoleMole.Config.ConfigAITacticBaseSetting {
	bool enable
	MoleMole.Config.ConfigAITacticCondition condition
	MoleMole.Config.NeuronName[] nerveTrigger
}
class MoleMole.Config.ConfigAITacticCondition {
	vint[] pose
}
class MoleMole.Config.ConfigAIReturnToBornPosSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAIReturnToBornPosData defaultSetting
	map<vint,MoleMole.Config.ConfigAIReturnToBornPosData> specification
}
class MoleMole.Config.ConfigAIMoveToSpecialAlertTargetSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAIMoveToSpecialAlertTargetData defaultSetting
	map<vint,MoleMole.Config.ConfigAIMoveToSpecialAlertTargetData> specification
}
class MoleMole.Config.ConfigAIMoveToSpecialAlertTargetData {
	float beginActionWaitTime
	float forceAlertDistanceLimit
	vint speedLevel
	float decreaseTemperFactor
	bool useArrivedSearchAction
}
class MoleMole.Config.ConfigAIReturnToBornPosData {
	vint speedLevel
	float turnSpeedOverride
	float fadeoutBeginTime
	float fadeoutEndTime
	bool spacial
	float performTime
	float performTimeAfterReturn
}
class MoleMole.Config.ConfigAIWanderSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	vint[] threatLevelLimit
	MoleMole.Config.ConfigAIWanderData defaultSetting
	map<vint,MoleMole.Config.ConfigAIWanderData> specification
}
class MoleMole.Config.ConfigAIWanderData {
	vint speedLevel
	float turnSpeedOverride
	float cdMax
	float cdMin
	float distanceFromBorn
	float distanceFromCurrentMin
	float distanceFromCurrentMax
	MoleMole.Config.AIBasicMoveType moveType
	bool amphibious_mode_on
	float amphibious_mode_limitation
}
class MoleMole.Config.ConfigAIFollowScriptedPathSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAIFollowScriptedPathData defaultSetting
	map<vint,MoleMole.Config.ConfigAIFollowScriptedPathData> specification
}
class MoleMole.Config.ConfigAIFollowScriptedPathData {
	float turnSpeedOverrideWalk
	float turnSpeedOverrideRun
	bool spacial
	bool spacialRoll
}
class MoleMole.Config.ConfigAIFollowServerRouteSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAIFollowServerRouteData defaultSetting
	map<vint,MoleMole.Config.ConfigAIFollowServerRouteData> specification
}
class MoleMole.Config.ConfigAIFollowServerRouteData {
	vint speedLevel
	float turnSpeedOverrideWalk
	float turnSpeedOverrideRun
	float checkRange
	bool special
}
class MoleMole.Config.ConfigAIInvestigateSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAIInvestigateData defaultSetting
	map<vint,MoleMole.Config.ConfigAIInvestigateData> specification
}
class MoleMole.Config.ConfigAIInvestigateData {
	vint speedLevel
	float lookAroundTime
	bool spacial
}
class MoleMole.Config.ConfigAIReactActionPointSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAIReactActionPointData defaultSetting
	map<vint,MoleMole.Config.ConfigAIReactActionPointData> specification
}
class MoleMole.Config.ConfigAIReactActionPointData {
	MoleMole.Config.ConfigAIPickActionPointCriteria[] reactList
}
class MoleMole.Config.ConfigAIPickActionPointCriteria {
	MoleMole.Config.ActionPointType pointType
	float detectDistance
	vint speedLevel
	vint[] pose
	MoleMole.Config.NeuronName[] nerveTrigger
	vint skillID
}
class MoleMole.Config.ConfigAIPatrolFollowSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAIPatrolFollowData defaultSetting
	map<vint,MoleMole.Config.ConfigAIPatrolFollowData> specification
}
class MoleMole.Config.ConfigAIPatrolFollowData {
	vint speedLevel
	float innerDistance
	vint speedLevelInner
	float outDistance
	float stopDistance
}
class MoleMole.Config.ConfigAICombatFollowMoveSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAICombatFollowMoveData defaultSetting
	map<vint,MoleMole.Config.ConfigAICombatFollowMoveData> specification
}
class MoleMole.Config.ConfigAICombatFollowMoveData {
	float startDistance
	float stopDistance
	float middleDistance
	float innerDistance
	vint speedLevelOuter
	vint speedLevelMiddle
	vint speedLevelInner
	float startAngle
	float outerAngle
	float turnSpeedOverride
	float turnSpeedOverrideOuter
	bool useMeleeSlot
	float moveOutDampRange
}
class MoleMole.Config.ConfigAIMeleeChargeSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAIMeleeChargeData defaultSetting
	map<vint,MoleMole.Config.ConfigAIMeleeChargeData> specification
}
class MoleMole.Config.ConfigAIMeleeChargeData {
	vint speedLevel
	float turnSpeedOverride
	float startDistanceMin
	float startDistanceMax
	float stopDistance
	float innerDistance
	vint speedLevelInner
	bool useMeleeSlot
}
class MoleMole.Config.ConfigAIFacingMoveSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAIFacingMoveData defaultSetting
	map<vint,MoleMole.Config.ConfigAIFacingMoveData> specification
}
class MoleMole.Config.ConfigAIFacingMoveData {
	vint speedLevel
	float rangeMin
	float rangeMax
	float restTimeMin
	float restTimeMax
	float facingMoveTurnInterval
	float facingMoveMinAvoidanceVelecity
	float obstacleDetectRange
	MoleMole.Config.ConfigAIFacingMoveWeight facingMoveWeight
	bool needHasPath
	bool amphibiousMovePermeability
	string amphibiousWaterToLand
	string amphibiousLandToWater
	bool restrictedByDefendArea
	bool ignoreRbdaoutOfZone
	float distanceToDefendArea
}
class MoleMole.Config.ConfigAIFacingMoveWeight {
	float stop
	float forward
	float back
	float left
	float right
}
class MoleMole.Config.ConfigAISurroundSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAISurroundData defaultSetting
	map<vint,MoleMole.Config.ConfigAISurroundData> specification
}
class MoleMole.Config.ConfigAISurroundData {
	vint speedLevel
	float turnSpeedOverride
	float startDistance
	float surroundRadius
	string[] turningStates
	float detectFrontDistance
	float detectFrontOffsetUp
	float detectFrontOffsetForward
	bool amphibious_mode_on
}
class MoleMole.Config.ConfigAIGroupSurroundSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAIGroupSurroundData defaultSetting
	map<vint,MoleMole.Config.ConfigAIGroupSurroundData> specification
}
class MoleMole.Config.ConfigAIGroupSurroundData {
	vint speedLevel
	float turnSpeedOverride
	float startDistanceMin
	float startDistanceMax
	float surroundRadius
	string[] turningStates
	float detectFrontDistance
	float detectFrontOffsetUp
	float cd
	float exitDistanceMax
	float exitDistanceMin
	float clockWiseWeight
	float detectCollisionRadius
	float detectCollisionDistance
	bool amphibious_mode_on
}
class MoleMole.Config.ConfigAIFindBackSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAIFindBackData defaultSetting
	map<vint,MoleMole.Config.ConfigAIFindBackData> specification
}
class MoleMole.Config.ConfigAIFindBackData {
	vint speedLevel
	float turnSpeedOverride
	float cd
	float overtime
	float targetLRSpace
	float targetBackSpace
}
class MoleMole.Config.ConfigAICombatFixedMoveSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAICombatFixedMoveData defaultSetting
	map<vint,MoleMole.Config.ConfigAICombatFixedMoveData> specification
}
class MoleMole.Config.ConfigAICombatFixedMoveData {
	MoleMole.Config.ActionPointType pointType
	float cdActionPoint
	vint speedLevel
	float turnSpeedOverride
	float detectDistance
	float overtime
	vuint skillID
}
class MoleMole.Config.ConfigAICrabMoveSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAICrabMoveData defaultSetting
	map<vint,MoleMole.Config.ConfigAICrabMoveData> specification
}
class MoleMole.Config.ConfigAICrabMoveData {
	vint speedLevel
	float turnSpeedOverride
	float radiusMin
	float radiusMax
	float moveTimeMin
	float moveTimeMax
	float restTimeMin
	float restTimeMax
	float detectFrontDistance
}
class MoleMole.Config.ConfigAIFleeSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAIFleeData defaultSetting
	map<vint,MoleMole.Config.ConfigAIFleeData> specification
}
class MoleMole.Config.ConfigAIFleeData {
	vint speedLevel
	float turnSpeedOverride
	float cd
	float triggerDistance
	float fleeAngle
	vint fleeNumberMin
	vint fleeNumberMax
	float fleeDistanceMin
	float fleeDistanceMax
	bool turnToTarget
	bool restrictedByDefendArea
	bool expandFleeAngleWhenBlocked
	float killSelfTime
	bool preferWaterPosition
	float clearThreatTime
}
class MoleMole.Config.ConfigAIFleeOnBlockAvatarLandingSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAIFleeOnBlockAvatarLandingData defaultSetting
	map<vint,MoleMole.Config.ConfigAIFleeOnBlockAvatarLandingData> specification
}
class MoleMole.Config.ConfigAIFleeOnBlockAvatarLandingData {
	vint speedLevel
	float turnSpeedOverride
	float triggerDistance
	float fleeAngle
	float fleeDistanceMin
	float fleeDistanceMax
	float neuronTriggerCD
}
class MoleMole.Config.ConfigAISpacialChaseSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAISpacialChaseData defaultSetting
	map<vint,MoleMole.Config.ConfigAISpacialChaseData> specification
}
class MoleMole.Config.ConfigAISpacialChaseData {
	vint speedLevel
	float chaseStartDistance
	float chaseStopDistance
	float yOffsetMin
	float yOffsetMax
	float segmentDistance
	MoleMole.Config.ConfigAIRaycastCondition[] canStartRangeByRaycast
}
class MoleMole.Config.ConfigAIRaycastCondition {
	float min
	float max
	MoleMole.Config.RaycastType raycastType
}
class MoleMole.Config.ConfigAISpacialProbeSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAISpacialProbeData defaultSetting
	map<vint,MoleMole.Config.ConfigAISpacialProbeData> specification
}
class MoleMole.Config.ConfigAISpacialProbeData {
	vint speedLevel
	float turnSpeedOverride
	float cdMax
	float cdMin
	float terrainOffsetMin
	float terrainOffsetMax
	float distanceFromBorn
	float distanceFromCurrentMin
	float distanceFromCurrentMax
	vint probeNumberMin
	vint probeNumberMax
	bool use_double_ray
}
class MoleMole.Config.ConfigAISpacialAdjustSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAISpacialAdjustData defaultSetting
	map<vint,MoleMole.Config.ConfigAISpacialAdjustData> specification
}
class MoleMole.Config.ConfigAISpacialAdjustData {
	vint speedLevel
	float yLow
	float yHigh
}
class MoleMole.Config.ConfigAISpacialWanderSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAISpacialWanderData defaultSetting
	map<vint,MoleMole.Config.ConfigAISpacialWanderData> specification
}
class MoleMole.Config.ConfigAISpacialWanderData {
	vint speedLevel
	float turnSpeedOverride
	string[] turningStates
	float cdMax
	float cdMin
	float terrainOffsetMin
	float terrainOffsetMax
	float distanceFromBorn
	float distanceFromCurrentMin
	float distanceFromCurrentMax
	float distanceFromEdge
	float coneAngleThreshold
	MoleMole.Config.ConfigAISpacialWanderConeWeightData coneWeight
}
class MoleMole.Config.ConfigAISpacialWanderConeWeightData {
	vuint[] normalAreaWeight
	vuint[] edgeAreaWeight
}
class MoleMole.Config.ConfigAIBirdCirclingSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAIBirdCirclingData defaultSetting
	map<vint,MoleMole.Config.ConfigAIBirdCirclingData> specification
}
class MoleMole.Config.ConfigAIBirdCirclingData {
	vint speedLevel
	float radius
}
class MoleMole.Config.ConfigAIScriptedMoveToSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAIScriptedMoveToData defaultSetting
	map<vint,MoleMole.Config.ConfigAIScriptedMoveToData> specification
}
class MoleMole.Config.ConfigAIScriptedMoveToData {
	vint speedLevel
	bool is3D
	bool stopByObstacle
}
class MoleMole.Config.ConfigAILandingSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAILandingData defaultSetting
	map<vint,MoleMole.Config.ConfigAILandingData> specification
}
class MoleMole.Config.ConfigAILandingData {
	vint speedLevel
	float landingAngleMax
	float landingAngleMin
	float landingTerrainAltitude
}
class MoleMole.Config.ConfigAIExtractionSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAIExtractionData defaultSetting
	map<vint,MoleMole.Config.ConfigAIExtractionData> specification
}
class MoleMole.Config.ConfigAIExtractionData {
	vint speedLevel
	float extractionDistance
	float extractionAngleMax
	float extractionAngleMin
	float triggerDistance
	float killSelfTime
}
class MoleMole.Config.ConfigAIBrownianMotionSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAIBrownianMotionData defaultSetting
	map<vint,MoleMole.Config.ConfigAIBrownianMotionData> specification
}
class MoleMole.Config.ConfigAIBrownianMotionData {
	vint speedLevel
	float turnSpeedOverride
	float moveCdMin
	float moveCdMax
	float terrainOffsetMin
	float terrainOffsetMax
	float motionRadius
	bool recalcCenterOnLeaveCurrentZone
	bool recalcCenterOnAttachPosChange
}
class MoleMole.Config.ConfigAIFishingBitesBaitSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAIFishingBitesBaitData defaultSetting
	map<vint,MoleMole.Config.ConfigAIFishingBitesBaitData> specification
}
class MoleMole.Config.ConfigAIFishingBitesBaitData {
	vint speedLevel
	float turnSpeedOverride
}
class MoleMole.Config.ConfigAIFishingPretendBitesSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAIFishingPretendBitesData defaultSetting
	map<vint,MoleMole.Config.ConfigAIFishingPretendBitesData> specification
}
class MoleMole.Config.ConfigAIFishingPretendBitesData {
	vint speedLevel
	float turnSpeedOverride
	float minPretendDistance
	float maxPretendDistance
	float cd
}
class MoleMole.Config.ConfigAIFishingFleeSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAIFishingFleeData defaultSetting
	map<vint,MoleMole.Config.ConfigAIFishingFleeData> specification
}
class MoleMole.Config.ConfigAIFishingFleeData {
	vint speedLevel
	float turnSpeedOverride
	float fleeAngle
	float fleeDuration
	float fleeDistanceMin
	float fleeDistanceMax
	bool turnToTarget
	bool restrictedByDefendArea
	bool expandFleeAngleWhenBlocked
}
class MoleMole.Config.ConfigAISpacialFacingMoveSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAISpacialFacingMoveData defaultSetting
	map<vint,MoleMole.Config.ConfigAISpacialFacingMoveData> specification
}
class MoleMole.Config.ConfigAISpacialFacingMoveData {
	vint speedLevel
	float rangeRadiusMin
	float rangeRadiusMax
	bool rangeXZ_YLimitEnable
	MoleMole.Config.ConfigAIRangeXZ_Y rangeLimitXZ_Y
	float restTimeMin
	float restTimeMax
	float facingMoveTurnInterval
	float facingMoveMinAvoidanceVelecity
	float obstacleDetectRange
	float obstacleUpRange
	float obstacleMaxAngle
	MoleMole.Config.ConfigAISpacialFacingMoveProbability spacialFacingMoveProbability
	MoleMole.Config.ConfigAIRaycastCondition[] canStartRangeByRaycast
	float turn_speed_override_in_run
	float turn_speed_override_in_idle
	bool use_aniamtor_velocity_in_idle
}
class MoleMole.Config.ConfigAIRangeXZ_Y {
	float xz_min
	float xz_max
	float ymin
	float ymax
}
class MoleMole.Config.ConfigAISpacialFacingMoveProbability {
	float stop
	float forward
	float right
	float up
	float forwardMin
	float forwardMax
	float backMin
	float backMax
	float rightMin
	float rightMax
	float leftMin
	float leftMax
	float upMin
	float upMax
	float downMin
	float downMax
	float bestHeight
	float minHeight
	float maxHeight
}
class MoleMole.Config.ConfigBaseAttackPattern {
	MoleMole.Config.TriggerType triggerType
	MoleMole.Config.CheckHitLayerType checkHitLayerType
	MoleMole.Config.ConfigHitScene hitScene
	float triggerCD
	bool filterByFrame
	bool ignoreMassive
	MoleMole.Config.EntityAttackFilter entityAttackFilter
	float massiveAttackRatio
	MoleMole.Config.ConfigBornType born
}
class MoleMole.Config.ConfigSimpleAttackPattern : MoleMole.Config.ConfigBaseAttackPattern {
	bool useCustomShape
}
class MoleMole.Config.ConfigAttackTrail : MoleMole.Config.ConfigSimpleAttackPattern {
	string trailName
	string trailStartName
}
class MoleMole.Config.ConfigAttackDoubleTrail : MoleMole.Config.ConfigAttackTrail {
	string trail2Name
	string trailStart2Name
}
class MoleMole.Config.ConfigAttackBox : MoleMole.Config.ConfigSimpleAttackPattern {
	MoleMole.Config.DynamicFloatVector size
	bool muteHitBehindScene
}
class MoleMole.Config.ConfigAttackCircle : MoleMole.Config.ConfigSimpleAttackPattern {
	float height
	float fanAngle
	MoleMole.Config.DynamicFloat radius
	MoleMole.Config.DynamicFloat innerRadius
	MoleMole.Config.CircleDetectDirection detectDirection
}
class MoleMole.Config.ConfigAttackSphere : MoleMole.Config.ConfigSimpleAttackPattern {
	MoleMole.Config.DynamicFloat radius
	MoleMole.Config.SphereDetectDirection detectDirection
}
class MoleMole.Config.ConfigAttackUsePrefab : MoleMole.Config.ConfigBaseAttackPattern {
	string prefabPathName
	bool isConnect
	float duration
}
class MoleMole.Config.ConfigAudioEventCullingRuleBase {
}
class MoleMole.Config.ConfigRuleCullingDistance : MoleMole.Config.ConfigAudioEventCullingRuleBase {
	float distance
}
class MoleMole.Config.ConfigRuleWaitDistance : MoleMole.Config.ConfigAudioEventCullingRuleBase {
	float distance
	vint recheckFrame
}
class MoleMole.Config.ConfigRuleLimitFrameGlobal : MoleMole.Config.ConfigAudioEventCullingRuleBase {
	vint limitFrame
}
class MoleMole.Config.ConfigRuleLimitFrame : MoleMole.Config.ConfigAudioEventCullingRuleBase {
	vint limitFrame
}
class MoleMole.Config.ConfigRuleCullingEventNameContain : MoleMole.Config.ConfigAudioEventCullingRuleBase {
	string pattern
}
class MoleMole.Config.ConfigRuleCullingEvent : MoleMole.Config.ConfigAudioEventCullingRuleBase {
}
class MoleMole.Config.ConfigAudioOperation {
	MoleMole.Config.ConfigWwiseString operation
}
class MoleMole.Config.ConfigAudioEventOp : MoleMole.Config.ConfigAudioOperation {
}
class MoleMole.Config.ConfigAudioEmitterOp : MoleMole.Config.ConfigAudioOperation {
}
class MoleMole.Config.ConfigAudioPositionedOp : MoleMole.Config.ConfigAudioOperation {
	float positioning
}
class MoleMole.Config.ConfigAudioPositionedEventOp : MoleMole.Config.ConfigAudioPositionedOp {
	float duration
}
class MoleMole.Config.ConfigAudioPositionedEmitterOp : MoleMole.Config.ConfigAudioPositionedOp {
}
class MoleMole.Config.ConfigAudioEventOnEffectOp : MoleMole.Config.ConfigAudioOperation {
	MoleMole.Config.DynamicString effectPattern
}
class MoleMole.Config.AudioSettingSlider {
	MoleMole.Config.ConfigWwiseString rtpc
	string textMap
	vuint minValue
	vuint maxValue
	float[] eachValues
}
class MoleMole.Config.AudioSettingSlider_PostEvent : MoleMole.Config.AudioSettingSlider {
	MoleMole.Config.ConfigWwiseString changeEvent
}
class MoleMole.Config.AudioSettingSlider_PostVoice : MoleMole.Config.AudioSettingSlider {
	MoleMole.Config.AudioSettingSlider_PostVoiceItem[] changeVoiceArray
}
class MoleMole.Config.AudioSettingSlider_PostVoiceItem {
	MoleMole.Config.VoiceTriggerIdentity voiceTriggerIdentity
	vuint repeatCount
}
class MoleMole.Config.VoiceTriggerIdentity {
	MoleMole.Config.AudioVoiceTrigger gameTrigger
	vuint gameTriggerArgs
}
class MoleMole.Config.ConfigBattleFervorUpdatePredicate {
}
class MoleMole.Config.ConfigBattleFervorUpdatePredicate_FactorRange : MoleMole.Config.ConfigBattleFervorUpdatePredicate {
	float min
	float max
}
class MoleMole.Config.ConfigBattleFervorUpdatePredicate_LocalAvatarInBattle : MoleMole.Config.ConfigBattleFervorUpdatePredicate {
	bool isUpdateInBattle
}
class MoleMole.Config.ConfigBattleFervorUpdateTrigger {
	MoleMole.Config.ConfigBattleFervorUpdatePredicate[] predicates
	float deltaValue
}
class MoleMole.Config.ConfigBattleFervorUpateTrigger_ByTick : MoleMole.Config.ConfigBattleFervorUpdateTrigger {
}
class MoleMole.Config.ConfigBattleFervorUpdateTrigger_ByStateIDChanged : MoleMole.Config.ConfigBattleFervorUpdateTrigger {
	MoleMole.Config.BattleFervorStateIDTriggerType type
	string[] stateIDs
	float cd
}
class MoleMole.Config.ConfigBattleFervorUpdateTrigger_ByAttackTag : MoleMole.Config.ConfigBattleFervorUpdateTrigger {
	string[] attackTags
	float cd
}
class MoleMole.Config.ConfigBattleFervorUpdateTrigger_ByElementArt : MoleMole.Config.ConfigBattleFervorUpdateTrigger {
	float cd
}
class MoleMole.Config.ConfigBattleFervorUpdateTrigger_ByElementBurst : MoleMole.Config.ConfigBattleFervorUpdateTrigger {
	float cd
}
class MoleMole.Config.ConfigBattleFervorUpdateTrigger_ByMonster : MoleMole.Config.ConfigBattleFervorUpdateTrigger {
	vint combatBGMLevel
}
class MoleMole.Config.ConfigBattleFervorFactor {
	float factorMinValue
	float factorMaxValue
	float factorInitValue
}
class MoleMole.Config.ConfigBattleFervorFactor_ByTrigger : MoleMole.Config.ConfigBattleFervorFactor {
	MoleMole.Config.ConfigBattleFervorUpdateTrigger[] triggers
}
class MoleMole.Config.ConfigBattleFervorFactor_ByMonster : MoleMole.Config.ConfigBattleFervorFactor {
	MoleMole.Config.ConfigBattleFervorUpdateTrigger_ByMonster[] triggers
}
class MoleMole.Config.ConfigClimateInfoBase {
}
class MoleMole.Config.ConfigClimateInfo : MoleMole.Config.ConfigClimateInfoBase {
	MoleMole.Config.JsonClimateType climateType
	MoleMole.Config.ConfigClimateTemperatureOptions temperatureOptions
	MoleMole.Config.ConfigClimateUI climateUIInfo
	MoleMole.Config.ConfigClimateAudio climateScreenEffAudio
}
class MoleMole.Config.ConfigClimateTemperatureOptions {
	float speed
}
class MoleMole.Config.ConfigClimateUI {
	string climateInfoBtnIcon
	string climateDialogTitle
	string climateDialogDesc
	string climateDialogLeftIcon
	string climateDialogLeftBg
	bool showClimateMeter
	vuint climateMeterColorIndex
	vuint climateMeterBgColorIndex
	vuint screenEffectIndex
	bool climateInfoShowWithMeterType
	float uiLowWarningRatio
	float uiLenLowIntensity
	float uiMiddleWarningRatio
	float uiLenMiddleIntensity
}
class MoleMole.Config.ConfigClimateAudio {
	string uiLenStopAudio
	string uiLenLowAudio
	string uiLenMiddleAudio
	string uiLenMaxAudio
}
class MoleMole.Config.ConfigBeHitBlendShake {
}
class MoleMole.Config.ConfigBeHitBlendShakeByAinmator : MoleMole.Config.ConfigBeHitBlendShake {
	MoleMole.Config.ShakeByAinmator[] shakeFlagMap
}
class MoleMole.Config.ShakeByAinmator {
	float shakeFlag
	string[] hitBoxNames
}
class MoleMole.Config.ConfigSpecialCamera {
	float priority
	float enterRadius
	float exitRadius
	float heightAdjust
	float fov
	float zoom
	float sphericalY
	bool lockSphericalY
	float sphericalYUp
	float sphericalYDown
	float autoTurnStartMin
	float autoTurnStartMax
	float autoTurnEndMin
	float autoTurnEndMax
	string enterShape
	string exitShape
	MoleMole.Config.Vector shapeCenterOffset
	vint subPriorityInStack
	MoleMole.Config.ESpecialCameraPushStackType inStack
	bool adjustSphericalXatStart
}
class MoleMole.Config.ConfigGadgetSpecialCamera : MoleMole.Config.ConfigSpecialCamera {
	float enterAngle
	float exitAngle
	float blendDuration
}
class MoleMole.Config.ConfigContinuesLockCamera : MoleMole.Config.ConfigSpecialCamera {
	string lockPoint
}
class MoleMole.Config.ConfigContinuesLockCameraV2 : MoleMole.Config.ConfigSpecialCamera {
	string lockPoint
	float forwardMaxAngle
	float forwardMaxAngleExtra
	float forwardAdjustMinSpeed
	float forwardAdjustMaxSpeed
	float enemyWeight
	float zoomMin
	float zoomMax
	float enemyPosTolerateRange
	bool enableHandleInput
	float springLerpInterval
}
class MoleMole.Config.ConfigEffectAttachShape {
}
class MoleMole.Config.ConfigEffectAttachBox : MoleMole.Config.ConfigEffectAttachShape {
	MoleMole.Config.ParticleShapeType emitFrom
	float scaleX
	float scaleY
	float scaleZ
}
class MoleMole.Config.ConfigEffectAttachSkinnedMesh : MoleMole.Config.ConfigEffectAttachShape {
	string mesh
}
class MoleMole.Config.ConfigEffectAttachMesh : MoleMole.Config.ConfigEffectAttachShape {
	string mesh
}
class MoleMole.Config.ConfigBillboard {
	string attachPoint
	MoleMole.Config.Vector offset
	MoleMole.Config.BillboardOffsetType offsetType
	float radiusOffset
	bool enableSelfAdapt
	float showDistance
	float markShowDistance
	float nameShowDistance
	bool forceHideAllBars
	float element_reaction_scale
	float charge_bar_height_offset
}
class MoleMole.Config.ConfigCombatBillboard : MoleMole.Config.ConfigBillboard {
	bool showHPBar
	float forceShowDistance
	MoleMole.Config.CombatBillboardSize size
	bool shieldBarOnly
}
class MoleMole.Config.ConfigProgressBillboard : MoleMole.Config.ConfigBillboard {
	string[] customKeyList
	float maxValue
	string prefabPluginName
	MoleMole.Config.ProgressBillboardType type
	bool needUpAnim
}
class MoleMole.Config.ConfigGadgetIconBillboard : MoleMole.Config.ConfigBillboard {
	string iconName
	string title
}
class MoleMole.Config.ConfigCoopBaseNode {
	vuint coopNodeId
	MoleMole.Config.CoopNodeType coopNodeType
	vuint[] nextNodeArray
}
class MoleMole.Config.ConfigCoopTalkNode : MoleMole.Config.ConfigCoopBaseNode {
	vuint talkId
	MoleMole.Config.ConfigTalkScheme talkConfig
}
class MoleMole.Config.ConfigTalkScheme {
	vuint id
	MoleMole.Config.TalkBeginWay beginWay
	MoleMole.Config.PlayMode activeMode
	MoleMole.Config.LogicType beginCondComb
	MoleMole.Config.TalkCondEx[] beginCond
	vuint priority
	vuint[] nextTalks
	vuint[] nextRandomTalks
	vint showRandomTalkCount
	vuint initDialog
	vuint decoratorID
	vuint[] npcId
	string performCfg
	MoleMole.Config.TalkHeroType heroTalk
	MoleMole.Config.TalkLoadType loadType
	vuint questId
	vuint[] extraLoadMarkId
	vuint assetIndex
	bool dontBlockDaily
	vuint[] participantId
	string prePerformCfg
	bool stayFreeStyle
	bool enableCameraDisplacement
	bool lockGameTime
	MoleMole.Config.TalkMarkType talkMarkType
	bool questIdleTalk
	bool lowPriority
	MoleMole.Config.TalkExecEx[] finishExec
	vint[] prePerformFreeStyleList
	vint[] freeStyleList
	vuint[] talkMarkHideList
	vint[] crowdLOD0List
	bool checkActionAfter
}
class MoleMole.Config.TalkCondEx {
	MoleMole.Config.QuestCondType type
	string[] param
}
class MoleMole.Config.TalkExecEx {
	MoleMole.Config.TalkExecType type
	string[] param
}
class MoleMole.Config.ConfigCoopCondNode : MoleMole.Config.ConfigCoopBaseNode {
	MoleMole.Config.CoopCondGroup coopCondGrp
}
class MoleMole.Config.CoopCondGroup {
	MoleMole.Config.LogicType condCombType
	MoleMole.Config.CoopCond[] coopCondList
}
class MoleMole.Config.CoopCond {
	MoleMole.Config.CoopCondType type
	vint[] param
}
class MoleMole.Config.ConfigCoopSelectNode : MoleMole.Config.ConfigCoopBaseNode {
	MoleMole.Config.CoopSelectNodeContent[] selectList
	bool delayMoveNext
}
class MoleMole.Config.CoopSelectNodeContent {
	vuint dialogId
	MoleMole.Config.CoopCondGroup showCond
	MoleMole.Config.CoopCondGroup enableCond
}
class MoleMole.Config.ConfigCoopActionNode : MoleMole.Config.ConfigCoopBaseNode {
	MoleMole.Config.ConfigCoopAction[] actionList
}
class MoleMole.Config.ConfigCoopAction {
	MoleMole.Config.CoopActionType actionType
	vint[] param
}
class MoleMole.Config.ConfigCoopEndNode : MoleMole.Config.ConfigCoopBaseNode {
	vuint savePointId
}
class MoleMole.Config.ConfigBaseCutscene {
	MoleMole.Config.CutsceneType type
	MoleMole.Config.ConfigCutscenePreTask preTaskCfg
	bool canSkip
	bool can_skip_if_played
	bool forceCanSkip
	bool skipGeneralDialog
	bool can
	bool clearBlackScreen
	float fadeOutWhenFinish
	bool directTransmit
	float delayTransmit
	string luaDataPath
	string resPath
	string castListPath
	string entityBan
	bool ban_gadget_effect
	MoleMole.Config.CutsceneInitPosType startPosType
	MoleMole.Config.Vector startOffset
	bool needXZEuler
	bool needYEuler
	bool keepCamera
	bool useTargetPos
	MoleMole.Config.Vector targetPos
	bool modifyLastPoseOffset
	bool attackModeRecover
	vint[] crowdLOD0List
	bool enableCameraDisplacement
	vuint entityRuntimeID
	bool clearAvatarLocalGadget
	bool disableGPUCulling
	bool canPlayerLoop
	vuint mainQuestId
	bool disableAvatarLocalGadget
}
class MoleMole.Config.ConfigCutscenePreTask {
	float duration
	float targetDayTime
	string targetWeather
}
class MoleMole.Config.ConfigTimeline : MoleMole.Config.ConfigBaseCutscene {
	bool syncLoad
	float fadeInDuration
	float fadeOutDuration
	bool forceGC
}
class MoleMole.Config.ConfigPolygonZone {
	float checkCD
}
class MoleMole.Config.ConfigDangerZone : MoleMole.Config.ConfigPolygonZone {
	string[] zonelist
}
class MoleMole.Config.ConfigFishingZone : MoleMole.Config.ConfigPolygonZone {
	float validRadius
	float fleeRadius
	bool disableInMultiplayer
	float bornRadius
}
class MoleMole.Config.DebugBlletinInfo {
	vuint id
	vuint board_id
	string content
	string author
	string create_time
}
class MoleMole.Config.DebugBoardInfo : MoleMole.Config.DebugBlletinInfo {
	vuint type
	string title
	string location
	vuint scene_id
}
class MoleMole.Config.ConfigBornDirectionType {
	MoleMole.Config.DynamicFloatVector angleOffset
	MoleMole.Config.DynamicFloatVector angleOffsetCorrect
	bool useCorrectDir
	float randomAngleHor
	float randomAngleVer
	MoleMole.Config.DirectionAngleType maxAngleType
	float maxAngle
}
class MoleMole.Config.ConfigDirectionByDefault : MoleMole.Config.ConfigBornDirectionType {
}
class MoleMole.Config.ConfigDirectionByEntity : MoleMole.Config.ConfigBornDirectionType {
}
class MoleMole.Config.ConfigDirectionByAttackTarget : MoleMole.Config.ConfigBornDirectionType {
	float speedForPredictive
	MoleMole.Config.DirectionTarDistanceScatter scatter
}
class MoleMole.Config.DirectionTarDistanceScatter {
	float maxDistance
	float maxScatterAngle
	float centerRote
	float randomRote
}
class MoleMole.Config.ConfigDirectionByAttachPoint : MoleMole.Config.ConfigBornDirectionType {
	string attachPointName
	MoleMole.Config.AttachPointTargetType attachPointTargetType
}
class MoleMole.Config.ConfigDirectionByBackToHitBoxCenter : MoleMole.Config.ConfigBornDirectionType {
}
class MoleMole.Config.ConfigDirectionByLookAtEntity : MoleMole.Config.ConfigBornDirectionType {
}
class MoleMole.Config.ConfigDirectionByLookAtEntityFix : MoleMole.Config.ConfigBornDirectionType {
}
class MoleMole.Config.ConfigDirectionByGroundNormal : MoleMole.Config.ConfigBornDirectionType {
}
class MoleMole.Config.ConfigDirectionByGlobalValue : MoleMole.Config.ConfigBornDirectionType {
	string directionKey
}
class MoleMole.Config.ConfigDirectionByWorld : MoleMole.Config.ConfigBornDirectionType {
	MoleMole.Config.Vector eularAngles
}
class MoleMole.Config.ConfigDirectionByGroundNormalRange : MoleMole.Config.ConfigBornDirectionType {
	vuint range
	bool checkOffset
	MoleMole.Config.Vector offset
}
class MoleMole.Config.ConfigDirectionByReflection : MoleMole.Config.ConfigBornDirectionType {
}
class MoleMole.Config.ConfigDirectionByRefraction : MoleMole.Config.ConfigBornDirectionType {
	float validAngleRange
}
class MoleMole.Config.BornRandom {
}
class MoleMole.Config.BornRandomFromCenter : MoleMole.Config.BornRandom {
	MoleMole.Config.DynamicFloat minRandomRange
	MoleMole.Config.DynamicFloat maxRandomRange
}
class MoleMole.Config.BornRandomInShape : MoleMole.Config.BornRandom {
	string shapeName
}
class MoleMole.Config.ConfigBornType {
	MoleMole.Config.DynamicFloatVector offset
	MoleMole.Config.BornRandom bornRandom
	bool onGround
	bool onGroundIgnoreWater
	float onGroundRaycastUpDist
	MoleMole.Config.ConfigBornDirectionType direction
	bool alongGround
	bool useRotation
}
class MoleMole.Config.ConfigBornByTarget : MoleMole.Config.ConfigBornType {
}
class MoleMole.Config.ConfigBornBySelf : MoleMole.Config.ConfigBornType {
}
class MoleMole.Config.ConfigBornBySelfOwner : MoleMole.Config.ConfigBornType {
}
class MoleMole.Config.ConfigBornByAttachPoint : MoleMole.Config.ConfigBornType {
	string attachPointName
	MoleMole.Config.AttachPointTargetType attachPointTargetType
}
class MoleMole.Config.ConfigBornByStormLightning : MoleMole.Config.ConfigBornType {
	float hitHeightRatio
	float selectRange
	float maxOffsetLen
	float lightningHitOrNotRatio
}
class MoleMole.Config.ConfigBornByWorld : MoleMole.Config.ConfigBornType {
	MoleMole.Config.Vector worldPos
	MoleMole.Config.Vector worldFwd
}
class MoleMole.Config.ConfigBornByGlobalValue : MoleMole.Config.ConfigBornType {
	string positionKey
	string directionKey
	bool useGlobalUp
}
class MoleMole.Config.ConfigBornByCollisionPoint : MoleMole.Config.ConfigBornType {
	bool useSyncValue
}
class MoleMole.Config.ConfigBornByRushToPoint : MoleMole.Config.ConfigBornType {
}
class MoleMole.Config.ConfigBornByTeleportToPoint : MoleMole.Config.ConfigBornType {
}
class MoleMole.Config.ConfigBornByPredicatePoint : MoleMole.Config.ConfigBornType {
	float timeForPredictive
}
class MoleMole.Config.ConfigBornByHitPoint : MoleMole.Config.ConfigBornType {
}
class MoleMole.Config.ConfigBornByElementPos : MoleMole.Config.ConfigBornType {
}
class MoleMole.Config.ConfigBornBySelectedPoint : MoleMole.Config.ConfigBornType {
}
class MoleMole.Config.ConfigBornByActionPoint : MoleMole.Config.ConfigBornType {
	MoleMole.Config.ActionPointType actionPointType
	MoleMole.Config.ConfigActionPointSelectType selectType
}
class MoleMole.Config.ConfigBornByTargetLinearPoint : MoleMole.Config.ConfigBornType {
	MoleMole.Config.DynamicFloat linearOffset
	bool baseOnTarget
	bool linearXZ
	MoleMole.Config.DynamicFloat linearMin
	MoleMole.Config.DynamicFloat linearMax
}
class MoleMole.Config.ConfigBornByFollowEffectOverPos : MoleMole.Config.ConfigBornType {
	bool byOwner
}
class MoleMole.Config.ConfigActionPointSelectType {
}
class MoleMole.Config.SelectActionPointByID : MoleMole.Config.ConfigActionPointSelectType {
	vuint actionPointID
}
class MoleMole.Config.SelectActionPointBySelfPos : MoleMole.Config.ConfigActionPointSelectType {
	float distance
}
class MoleMole.Config.SelectActionPointByTargetPos : MoleMole.Config.ConfigActionPointSelectType {
	float distance
}
class MoleMole.Config.SelectActionPointByAwayFromAvatar : MoleMole.Config.ConfigActionPointSelectType {
	float distance
}
class MoleMole.Config.SelectActionPointByTargetOrientation : MoleMole.Config.ConfigActionPointSelectType {
	vuint[] actionPointIDs
	float angle
	bool signType
}
class MoleMole.Config.SelectActionPointByAllAvatarsOrientation : MoleMole.Config.ConfigActionPointSelectType {
	vuint[] actionPointIDs
	float angle
	float distance
	bool signType
}
class MoleMole.Config.ConfigHeadControl {
	bool useHeadControl
	float maxYawDegree
	float maxPitchDegree
	float speed
	float weightSpeed
	bool useWhiteAnimStates
	string[] animStates
	string[] dontAnimStates
}
class MoleMole.Config.ConfigMonsterHeadControl : MoleMole.Config.ConfigHeadControl {
}
class MoleMole.Config.ConfigEntity {
	MoleMole.Config.ConfigEntityCommon common
	MoleMole.Config.ConfigHeadControl headControl
	MoleMole.Config.ConfigEntityPoint specialPoint
	MoleMole.Config.ConfigCustomAttackShape customAttackShape
	MoleMole.Config.ConfigModel model
	MoleMole.Config.ConfigDither dither
	MoleMole.Config.ConfigGlobalValue globalValue
	MoleMole.Config.ConfigEntityTags entityTags
}
class MoleMole.Config.ConfigEntityCommon {
	MoleMole.Config.ConfigEffectAttachShape effectAttachShape
	float mass
	float height
	float modelHeight
	float viewSize
	float shadowViewSizeRatio
	float overrideCullBoundsRadius
	bool affectedByWorld
	bool checkInSurface
	float scale
	float disableTickDistance
	float forcePauseTickDistance
	bool shouldPauseAnimatorBeforeReady
	bool canTriggerElementReactionText
	bool useGrassDisplacement
	bool muteElementStickUI
	bool hasAfterImage
	bool useDynamicBone
	bool enableCrashDamage
	bool clearAnimatorOnSetLightDeactive
	bool clearAIOnSetLightDeactive
	bool reconnectSupport
	bool recoverByInitPose
	bool useFinalIK
	bool muteElementReactionOvergrow
	bool isForceRefreshAuthotiryToHost
	bool isRefreshAuthWhenAuthOutSight
	bool syncAnimCrossfadeDuration
}
class MoleMole.Config.ConfigEntityPoint {
	string elementAbsorb
	string elementPendant
	string elementDrop
	string bulletAim
	string[] hitPoints
	string[] selectedPoints
	bool ignoreTransform
	float selectedPointRadius
}
class MoleMole.Config.ConfigCustomAttackShape {
	MoleMole.Config.ConfigCustomAttackSphere sphere
	MoleMole.Config.ConfigCustomAttackBox box
	MoleMole.Config.ConfigCustomAttackCircle circle
}
class MoleMole.Config.ConfigCustomAttackSphere {
	float customAttackSphere_Radius
}
class MoleMole.Config.ConfigCustomAttackBox {
	float customAttackBox_Size_X
	float customAttackBox_Size_Y
	float customAttackBox_Size_Z
}
class MoleMole.Config.ConfigCustomAttackCircle {
	float customAttackCircle_Radius
	float customAttackCircle_InnerRadius
}
class MoleMole.Config.ConfigModel {
	MoleMole.Config.ConfigMatLinearChangedByDistance[] matLinearChangedByDistance
	string bornEffect
	string attachEffect
	bool ignoreDistCheckWhenAttachEffect
	bool canBakeMesh
	bool setPerObjectShadowGroupID
	bool hasCharacterRenderering
}
class MoleMole.Config.ConfigMatLinearChangedByDistance {
	string transformName
	string[] textureProperty
	string[] floatProperty
	float minRatio
	float maxRatio
	float minDistance
	float maxDistance
}
class MoleMole.Config.ConfigDither {
	float showDitherDuration
	MoleMole.Config.ConfigDitherByStartDitherAction startDitherAction
	MoleMole.Config.ConfigDitherByBetweenCameraAndAvatar betweenCameraAndAvatar
	MoleMole.Config.ConfigDitherByNormalBetweenCamera normalBetweenCamera
	bool hideEffectWhenDither
}
class MoleMole.Config.ConfigDitherByStartDitherAction {
	bool enable
}
class MoleMole.Config.ConfigDitherByBetweenCameraAndAvatar {
	float detectDitherRange
}
class MoleMole.Config.ConfigDitherByNormalBetweenCamera {
	float detectDitherRange
}
class MoleMole.Config.ConfigGlobalValue {
	string[] serverGlobalValues
	map<string,float> initServerGlobalValues
}
class MoleMole.Config.ConfigEntityTags {
	string[] initTags
}
class MoleMole.Config.ConfigGadget : MoleMole.Config.ConfigEntity {
	bool hasEquip
	bool hasAudio
	bool hasModel
	bool hasAbility
	bool hasDither
	bool hasFollowWindZoneRotation
	bool forceDontUseUpdateRigidbody
	bool hasConnectTrigger
	bool canBeCreatedOnPlatform
	vuint connectTriggerPriority
	bool ignoreChildSceneProp
	bool moveRefreshGroundForceUp
	MoleMole.Config.ConfigCombat combat
	string combatTemplate
	MoleMole.Config.ConfigEntityAbilityEntry[] abilities
	MoleMole.Config.ConfigTrigger field
	MoleMole.Config.ConfigTimer timer
	MoleMole.Config.ConfigMove move
	MoleMole.Config.ConfigGadgetPattern gadget
	MoleMole.Config.ConfigEquipment equipment
	MoleMole.Config.ConfigNavigation navigation
	MoleMole.Config.ConfigGadgetUI uiInteract
	MoleMole.Config.ConfigGadgetMisc misc
	map<string,MoleMole.Config.ConfigBaseStateLayer> stateLayers
	MoleMole.Config.ConfigGadgetAudio audio
	MoleMole.Config.ConfigAIBeta aibeta
	MoleMole.Config.ConfigWeather weather
	MoleMole.Config.ConfigWall wall
	MoleMole.Config.ConfigFace face
	MoleMole.Config.ConfigPartController partControl
	MoleMole.Config.ConfigPaimon paimon
	MoleMole.Config.ConfigCharacterRendering characterRendering
	bool radarHint
	bool keepModifierOutSight
	MoleMole.Config.ConfigGadgetAction gadgetAction
	MoleMole.Config.ConfigGadgetTurn gadgetTurn
	MoleMole.Config.ConfigGlobalValueTurn gvTurn
	MoleMole.Config.ConfigBillboard billboard
	MoleMole.Config.ConfigIntee intee
	string[] bindEmotions
	bool projector
	bool lowPriorityIntee
	bool canRemoveByClient
	string[] tags
	bool canBeTriggeredByAvatarRay
	MoleMole.Config.ConfigVehicle vehicle
	MoleMole.Config.ConfigDangerZone dangerzone
	MoleMole.Config.ConfigFishingZone fishingZone
	MoleMole.Config.EntityType forceSetEntityType
	MoleMole.Config.ConfigGadgetSpecialCamera cameraAdjust
	MoleMole.Config.ConfigVODIntee vodIntee
	MoleMole.Config.ConfigLivePlayer vodPlayer
	MoleMole.Config.ConfigGadgetCameraBox cameraBox
	bool openWatcher
	vuint rayTag
	bool hasRayTag
	bool useRetreatType
	bool dontDestroyByPerform
	bool correctOwner
}
class MoleMole.Config.ConfigCombat {
	MoleMole.Config.ConfigCombatProperty property
	MoleMole.Config.ConfigCombatBeHit beHit
	MoleMole.Config.ConfigCombatLock combatLock
	MoleMole.Config.ConfigDie die
	map<string,MoleMole.Config.ConfigAttackEvent> animEvents
	MoleMole.Config.ConfigSummon summon
	MoleMole.Config.ConfigSimulatePhysics simulatePhysics
}
class MoleMole.Config.ConfigCombatProperty {
	MoleMole.Config.EndureType endureType
	bool useCreatorProperty
	MoleMole.Config.CombatPropertyIndex[] useCreatorPropertyPartly
	bool useCreatorBuffedProperty
	bool useAbilityProperty
	float HP
	float attack
	float defense
	vint level
	MoleMole.Config.LevelOption levelOption
	float weight
	float endureShake
	bool isInvincible
	bool isLockHP
	bool isLockHPNoHeal
	bool isNoHeal
	bool isGhostToAllied
	bool isGhostToEnemy
	bool canTriggerBullet
	bool denyElementStick
	bool ignorePurgeRate
	bool ignoreDamageToSelf
}
class MoleMole.Config.ConfigCombatBeHit {
	string hitBloodEffect
	bool hitAutoRedirect
	bool muteAllHit
	bool muteAllHitEffect
	bool muteAllHitText
	bool ignoreMinHitVY
	MoleMole.Config.ConfigBeHitBlendShake blendShake
}
class MoleMole.Config.ConfigCombatLock {
	string lockShape
	bool denyLockOn
	float lockWeightYaxisParam
	float lockWeightYaxisThreshold
	string lockType
	float overrideRange
	float overrideNormalPri
	float overrideCombatPri
}
class MoleMole.Config.ConfigDie {
	bool hasAnimatorDie
	bool muteAllShaderDieEff
	bool fallWhenAirDie
	float dieEndTime
	float dieForceDisappearTime
	string dieDisappearEffect
	float dieDisappearEffectDelay
	MoleMole.Config.E_ShaderData dieShaderData
	float dieShaderEnableDurationTime
	float dieShaderDisableDurationTime
	float dieModelFadeDelay
	bool useRagDoll
	float ragDollDieEndTimeDelay
	bool startDieEndAtOnce
	bool notSendDieTrigger
	bool ignoreElementDie
	bool muteHitBox
	bool dieDenyLockOn
	bool dieIsGhostToEnemy
	bool dieIgnoreTriggerBullet
	bool muteBillboard
	bool mutePushCollider
	bool dropWeaponImmediately
	bool muteHdmesh
}
class MoleMole.Config.ConfigSummon {
	MoleMole.Config.ConfigSummonTag[] summonTags
}
class MoleMole.Config.ConfigSummonTag {
	vuint summonTag
	string name
	vint maxNum
	bool copyOwnerThreatList
	bool useOwnerDefendArea
}
class MoleMole.Config.ConfigSimulatePhysics {
	bool enable
	float radius
}
class MoleMole.Config.ConfigEntityAbilityEntry {
	string abilityID
	string abilityName
	string abilityOverride
	bool lightWeightRemove
}
class MoleMole.Config.ConfigTrigger {
	MoleMole.Config.EntityTriggerType triggerType
	MoleMole.Config.TriggerFlag triggerFlag
	MoleMole.Config.ConcernType concernType
	string shape
	bool ignoreScale
	MoleMole.Config.Vector offset
	MoleMole.Config.Vector eularOffset
	float height
	string fromShape
	MoleMole.Config.Vector fromOffset
	MoleMole.Config.Vector fromEularOffset
	float fromHeight
	bool checkInfinite
	bool triggerInfinite
	bool lifeInfinite
	float startCheckTime
	float checkInterval
	vint checkCount
	float triggerInterval
	vint triggerCount
	float lifeTime
	bool overwriteCampType
	MoleMole.Config.TargetType campType
	bool checkPoint
	bool useSurfaceHeight
	bool useCollider
	string colliderName
	string fromColliderName
	bool checkGhost
	bool colliderCheckOnInit
	bool checkOnReconnect
	string[] colliderWhiteList
	string[] colliderBlackList
	bool useLevelOverride
	MoleMole.Config.ConfigBaseShape rawShape
	bool useLocalTriggerLogic
	MoleMole.Config.ConfigLocalTriggerMeta localTriggerMeta
}
class MoleMole.Config.ConfigTimer {
	bool lifeInfinite
	float startCheckTime
	float checkInterval
	float lifeTime
}
class MoleMole.Config.ConfigEquipment {
	string attachTo
	vuint subGadgetId
	string subAttachTo
	string auxToTrans
	MoleMole.Config.EquipEntityType equipEntityType
	MoleMole.Config.ConfigBladeElementFx bladeFx
	MoleMole.Config.ConfigBowData bowData
}
class MoleMole.Config.ConfigBladeElementFx {
	string slash
	string colorA
	string colorB
}
class MoleMole.Config.ConfigBowData {
	string bowRatioName
	MoleMole.Config.Vector bowStringLoosePoint
	float bowStringMaxLen
}
class MoleMole.Config.ConfigNavigation {
	MoleMole.Config.NavType type
	float sizeX
	float sizeY
	float sizeZ
}
class MoleMole.Config.ConfigGadgetMisc {
	MoleMole.Config.ConfigChest chest
	MoleMole.Config.ConfigGear gear
	MoleMole.Config.ConfigConstForceField forceField
	MoleMole.Config.ConfigCrystal crystal
	MoleMole.Config.ConfigSeal seal
	MoleMole.Config.ConfigPickup pickup
	MoleMole.Config.ConfigWindSeed windSeed
	MoleMole.Config.ConfigCannon cannon
	MoleMole.Config.ConfigGadgetConsole gadgetConsole
	MoleMole.Config.ConfigXmLens xmLens
	MoleMole.Config.ConfigAutoDool autoDoor
	MoleMole.Config.ConfigCustomGadgetNode customGadgetNode
	MoleMole.Config.ConfigCustomGadgetDither customGadgetDither
	MoleMole.Config.ConfigCustomGadgetColliderControl customGadgetColliderControl
	string escapeEffect
	bool guidePoint
	bool isUIPoint
	bool guidePointManagedByIndicator
	MoleMole.Config.TargetIndicatorType guidePointType
	float targetIndicatorYOffset
	MoleMole.Config.ConfigGuidePoint guidePointConfig
	public bool hasAvatarCrashDamage
	bool hasAvatarFallOnGroundRoll
	bool needTurnGrey
	float disableDuration
}
class MoleMole.Config.ConfigXmLens { 
	vuint checkMainNodeId
	MoleMole.Config.Vector cameraOffset
	MoleMole.Config.ConfigXmLensScanEntityInfo blackSmoke
	MoleMole.Config.ConfigXmLensScanEntityInfo aranara
}
class MoleMole.Config.ConfigXmLensScanEntityInfo { 
	vuint checkSubNodeId
	string totalNumGvname
	string finishNumGvname
}
class MoleMole.Config.ConfigCustomGadgetDither { 
	float ditherValueLimit
	float deltaDepthThresholdMin
	float deltaDepthThresholdMax
}
class MoleMole.Config.ConfigCustomGadgetColliderControl { 
}
class MoleMole.Config.ConfigChest {
	bool bornLockedByAbility
	string openEffect
	bool triggerOpenChestVo
}
class MoleMole.Config.ConfigGear {
	MoleMole.Config.GearType gearType
	MoleMole.Config.ElementType startElemType
	vuint startValue
	vuint startLastTime
	MoleMole.Config.ElementType stopElemType
	vuint stopValue
	vuint stopLastTime
}
class MoleMole.Config.ConfigCrystal {
	MoleMole.Config.ElementType elementType
	vuint gainSpeed
	vuint drainSpeed
	vuint[] resonateLevels
	vuint burstResonate
	string burstSkill
	vuint burstTime
	vuint respawnTime
}
class MoleMole.Config.ConfigSeal {
	MoleMole.Config.SealProgressType progressType
	string boardEffect
	float boardEffectStartPosition
	float boardEffectEndPosition
	string startTips
	string title
}
class MoleMole.Config.ConfigPickup {
	MoleMole.Config.PickType pickType
	bool isStatic
	float dropPointMaxYaw
	float dropPointMinSpeed
	float dropPointMaxSpeed
	string bornEffect
	string dropEffect
	MoleMole.Config.Vector dropOffset
	bool enableScan
	bool lockYmove
	float suspendHeight
	float suspendSpeed
	float suspendAmplitude
	float rotateSpeed
	MoleMole.Config.Vector rotateVec
	float attractDelayTime
	MoleMole.Config.ConfigPickupMulti multi
	MoleMole.Config.Vector dirVec
	float gravityRation
	bool disableInitJump
	float initBackSpeed
	float backDecelerate
	float backFanAngle
	float backFanStartAngle
	vint reboundTimes
	float reboundRation
	float attractAccelerate
	float attractMaxDistance
	float heightOffset
	MoleMole.Config.Vector rotateDecelerate
	string attractAudio
	bool isDummyPick
	bool isPickDestroy
}
class MoleMole.Config.ConfigPickupMulti {
	MoleMole.Config.Vector dirMinVec
	MoleMole.Config.Vector dirMaxVec
	vuint maxNum
	vuint minNum
	float attractSpeed
	bool useWorldTrans
	bool isAutoAttract
}
class MoleMole.Config.ConfigWindSeed {
	float athuorityRadius
}
class MoleMole.Config.ConfigCannon {
	bool closeOperationPageAfterFire
	float closePageDelay
	float reminderVanishDelay
	float fireInterval
	float turningBtnPressBlockTime
	string reminderTextMap
	string TurnUpAbilityName
	string TurnDownAbilityName
	string TurnLeftAbilityName
	string TurnRightAbilityName
	string FireAbilityName
	string ReleaseOccupyAbilityName
	string OccupyGVName
	string fireBtnIcon
	vint btnElementColorIndex
}
class MoleMole.Config.ConfigGadgetConsole {
	string inTriggerAbilityName
	string outTriggerAbilityName
	string reminderTextMap
	float reminderVanishDelay
	string cameraAttachPoint
	vuint finishGadgetState
	MoleMole.Config.ConfigGadgetConsoleOperation[] operations
	MoleMole.Config.ConfigGadgetConsoleLimitation[] limitations
	MoleMole.Config.ConfigGadgetConsolePosition[] finishPosition
}
class MoleMole.Config.ConfigGadgetConsoleOperation {
	string operationName
	string transName
	MoleMole.Config.ConfigGadgetConsoleOperationType moveType
	float moveSpeed
	bool hasDisableValue
	float disableValue
}
class MoleMole.Config.ConfigGadgetConsoleLimitation {
	string transName
	MoleMole.Config.ConfigGadgetConsoleOperationType moveType
	bool hasMin
	float min
	bool hasMax
	float max
}
class MoleMole.Config.ConfigGadgetConsolePosition {
	string transName
	MoleMole.Config.Vector rotation
}
class MoleMole.Config.ConfigAutoDool {
	float checkInterval
	float triggerDistance
}
class MoleMole.Config.ConfigCustomGadgetNode {
	MoleMole.Config.CustomGadgetCameraSettings cameraSettings
	map<string,MoleMole.Config.CustomGadgetNodeSlot> slotMap
}
class MoleMole.Config.CustomGadgetCameraSettings {
	float gadgetHeight
	float minCameraRadius
	float minElevation
	float leftrightShift
	float upDownShift
	float fov
}
class MoleMole.Config.CustomGadgetNodeSlot {
	string namedTransform
	vuint slotConfigId
}
class MoleMole.Config.ConfigGuidePoint {
	MoleMole.Config.ConfigTemplateData ui_Indicator
	bool disableQuestArrow
}
class MoleMole.Config.ConfigTemplateData {
	string templateName
	map<string,string> paramDatas
}
class MoleMole.Config.ConfigBaseStateLayer {
	vint layerIndex
	string layerIndexName
}
class MoleMole.Config.ConfigAIBeta {
	bool enable
	vint friendliness
	MoleMole.Config.DecisionArchetype decisionArchetype
	MoleMole.Config.ConfigAIMove moveSetting
	MoleMole.Config.ConfigAIPrecombatSetting precombat
	MoleMole.Config.ConfigAICombatSetting aiCombat
	MoleMole.Config.ConfigAIBuddySetting buddySetting
	MoleMole.Config.ConfigAISensing sensing
	map<string,MoleMole.Config.NeuronName[]> neurons
	MoleMole.Config.ConfigAINeuronExtSettings neuronSetting
	MoleMole.Config.ConfigAIThreatSetting threat
	MoleMole.Config.ConfigAIOrderSetting order
	MoleMole.Config.ConfigAIDefendArea defendArea
	MoleMole.Config.ConfigAIFlySetting fly
	MoleMole.Config.ConfigAIPoseControl poseControl
	MoleMole.Config.ConfigAIUISetting ui
	MoleMole.Config.ConfigAIProfilingSetting profiling
	MoleMole.Config.ConfigAINetworkSetting network
	MoleMole.Config.ConfigAISkillGroupCD[] skillGroupCDConfigs
	MoleMole.Config.ConfigAISkillSetting skillSetting
	map<string,MoleMole.Config.ConfigAISkill> skills
	float skillGCD
	MoleMole.Config.ConfigAITarget target
	MoleMole.Config.ConfigAIReturnToBornPosSetting returnToBornTactic
	MoleMole.Config.ConfigAIWanderSetting wanderTactic
	MoleMole.Config.ConfigAIParallelToSetting parallelToTactic
	MoleMole.Config.ConfigAIFollowScriptedPathSetting followScriptedPathTactic
	MoleMole.Config.ConfigAIFollowServerRouteSetting followServerRouteTactic
	MoleMole.Config.ConfigAIInvestigateSetting investigateTactic
	MoleMole.Config.ConfigAIReactActionPointSetting reactActionPointTactic
	MoleMole.Config.ConfigAIPatrolFollowSetting patrolFollowTactic
	MoleMole.Config.ConfigAICombatFollowMoveSetting combatFollowMoveTactic
	MoleMole.Config.ConfigAIMeleeChargeSetting meleeChargeTactic
	MoleMole.Config.ConfigAIFacingMoveSetting facingMoveTactic
	MoleMole.Config.ConfigAISurroundSetting surroundTactic
	MoleMole.Config.ConfigAIGroupSurroundSetting groupSurroundTactic
	MoleMole.Config.ConfigAIFindBackSetting findBackTactic
	MoleMole.Config.ConfigAICombatFixedMoveSetting combatFixedMoveTactic
	MoleMole.Config.ConfigAICrabMoveSetting crabMoveTactic
	MoleMole.Config.ConfigAIFleeSetting fleeTactic
	MoleMole.Config.ConfigAIFleeOnBlockAvatarLandingSetting fleeOnBlockAvatarLandingTactic
	MoleMole.Config.ConfigAISpacialChaseSetting spacialChaseTactic
	MoleMole.Config.ConfigAISpacialProbeSetting spacialProbeTactic
	MoleMole.Config.ConfigAISpacialAdjustSetting spacialAdjustTactic
	MoleMole.Config.ConfigAISpacialWanderSetting spacialWanderTactic
	MoleMole.Config.ConfigAIBirdCirclingSetting birdCirclingTactic
	MoleMole.Config.ConfigAIScriptedMoveToSetting scriptedMoveToTactic
	MoleMole.Config.ConfigAILandingSetting landingTactic
	MoleMole.Config.ConfigAIExtractionSetting extractionTactic
	MoleMole.Config.ConfigAIBrownianMotionSetting brownianMotionTactic
	MoleMole.Config.ConfigAISpacialFacingMoveSetting spacialFacingMoveTactic
	MoleMole.Config.ConfigAIMoveToSpecialAlertTargetSetting moveToSpecialAlertTargetTactic
	MoleMole.Config.ConfigAIMixinSetting mixin
	MoleMole.Config.ConfigAIFishingBitesBaitSetting fishingBitesBaitTactic
	MoleMole.Config.ConfigAIFishingPretendBitesSetting fishingPretendBitesTactic
	MoleMole.Config.ConfigAIFishingFleeSetting fishingFleeTactic
}
class MoleMole.Config.ConfigAIParallelToSetting : MoleMole.Config.ConfigAITacticBaseSetting {
	MoleMole.Config.ConfigAIParallelToData defaultSetting
	map<vint,MoleMole.Config.ConfigAIParallelToData> specification
}
class MoleMole.Config.ConfigAIParallelToData {
	float angleOffsetMin
	float angleOffsetMax
	float turnSpeedOverride
}
class MoleMole.Config.ConfigAIMove {
	bool enable
	MoleMole.Config.MoveCategoryAI moveCategory
	bool useNavMesh
	bool useToTheMoon
	string navMeshAgentName
	float almostReachedDistanceWalk
	float almostReachedDistanceRun
	MoleMole.Config.ConfigAISnakelikeMove snakelikeMoveSetting
	float length
}
class MoleMole.Config.ConfigAISnakelikeMove {
	float minCurvature
	float maxCurvatrue
	float minSegmentDistance
	float segmentDistance
	vint segmentCount
}
class MoleMole.Config.ConfigAIPrecombatSetting {
	float bioClockSleepFrom
	float bioClockSleepTo
	float satietyTime
	map<MoleMole.Config.ConfigWeatherType,MoleMole.Config.NeuronName[]> overrideWeatherNeuronMapping
	bool needMusicSlient
}
class MoleMole.Config.ConfigAICombatSetting {
	map<MoleMole.Config.ConfigAICombatPhase,vint[]> combatPhases
	MoleMole.Config.ConfigAICombatRole combatRole
	bool broadcastFearOnDeath
}
class MoleMole.Config.ConfigAIBuddySetting {
	bool enable
	vuint[] buddyFeatureTagIDs
}
class MoleMole.Config.ConfigAISensing {
	bool enable
	map<string,MoleMole.Config.ConfigAISensingSetting> settings
	map<string,map<string,string>> templates
}
class MoleMole.Config.ConfigAISensingSetting {
	float sensitivity
	bool enableVision
	float viewRange
	bool viewPanoramic
	float horizontalFov
	float verticalFov
	bool useEyeTransformRotation
	float hearAttractionRange
	float hearFootstepRange
	float feelRange
	float sourcelessHitAttractionRange
}
class MoleMole.Config.ConfigAINeuronExtSettings {
	MoleMole.Config.ConfigAINeuronHitBuddySetting HIT_BUDDY
}
class MoleMole.Config.ConfigAINeuronHitBuddySetting {
	float feelRange
	MoleMole.Config.ConcernType responserConcernType
	MoleMole.Config.TargetType responserCampType
	MoleMole.Config.ConcernType triggerResponserConcernType
	MoleMole.Config.TargetType triggerResponserCampType
	float reserveTime
}
class MoleMole.Config.ConfigAIThreatSetting {
	bool enable
	float clearThreatTargetDistance
	float clearThreatEdgeDistance
	bool clearThreatByLostPath
	bool clearThreatByTargetOutOfZone
	float clearThreatTimerByDistance
	float clearThreatTimerByLostPath
	float clearThreatTimerByTargetOutOfZone
	float viewThreatGrow
	float hearThreatGrow
	float feelThreatGrow
	float threatDecreaseSpeed
	float threatBroadcastRange
	MoleMole.Config.AIPoint[] viewAttenuation
	MoleMole.Config.AIPoint[] hearAttenuation
	float timeDecreaseTemper
	MoleMole.Config.TauntLevel resistTauntLevel
	float auxScoreChangeTargetCD
	MoleMole.Config.ConfigAITSAbilityGlobalValueSetting abilityGlobalValueScoreSystem
	MoleMole.Config.ConfigAITSTargetDistanceSetting targetDistanceScoreSystem
	MoleMole.Config.ConfigAITSTargetBearingSetting targetBearingScoreSystem
}
class MoleMole.Config.AIPoint {
	float x
	float y
}
class MoleMole.Config.ConfigAIOrderSetting {
	MoleMole.Config.ConfigAIOrderMasterSetting master
	MoleMole.Config.ConfigAIOrderServantSetting servant
	MoleMole.Config.ConfigAICommandSetting commandSetting
}
class MoleMole.Config.ConfigAIOrderMasterSetting {
	bool enable
	vint servantSlotAmount
}
class MoleMole.Config.ConfigAIOrderServantSetting {
	bool enable
}
class MoleMole.Config.ConfigAICommandSetting {
	vint[] acceptCommandIDs
}
class MoleMole.Config.ConfigAIDefendArea {
	bool enable
	float defendRange
}
class MoleMole.Config.ConfigAIFlySetting {
	bool enable
	vint[] floatingPoses
}
class MoleMole.Config.ConfigAIPoseControl {
	MoleMole.Config.ConfigAIPoseControlItem[] items
}
class MoleMole.Config.ConfigAIPoseControlItem {
	float minTime
	float maxTime
	vint poseID
	vint[] RandomPose
	bool switchOnlyInCanDoSkillState
}
class MoleMole.Config.ConfigAIUISetting {
	bool hasDirectionIndicator
}
class MoleMole.Config.ConfigAIProfilingSetting {
	MoleMole.Config.AILodStrategyType lodStrategy
	vint[] staticPoses
	vint moveCullingLevel
}
class MoleMole.Config.ConfigAINetworkSetting {
	bool syncSkill
	bool resetHpOnSpawn
}
class MoleMole.Config.ConfigAISkillGroupCD {
	vint skillGroupCDID
	float skillGroupCDTime
}
class MoleMole.Config.ConfigAISkillSetting {
	map<byte,vuint[]> skillEliteSet
	MoleMole.Config.ConfigAISkillDynamicCD dynamicCD
}
class MoleMole.Config.ConfigAISkillDynamicCD {
	bool enable
	float minCd
	float maxCd
	float formulaMaxTargetDisXz
}
class MoleMole.Config.ConfigAISkill {
	string name
	MoleMole.Config.ConfigAISkillType skillType
	MoleMole.Config.ConfigAICombatSkillType combatSkillType
	vint priority
	bool canUseCombatSkillCondition
	bool needLineOfSight
	bool faceTarget
	bool canUseIfTargetInactive
	bool enableSkillPrepare
	float skillPrepareTimeout
	bool skillPrepareGiveUp
	vint skillPrepareSpeedLevel
	MoleMole.Config.AIBasicMoveType skillPrepareMoveType
	MoleMole.Config.ConfigAISkillCastCondition castCondition
	float cd
	float cdUpperRange
	float initialCD
	float initialCDUpperRange
	string publicCDGroup
	bool ignoreGCD
	bool triggerGCD
	bool triggerCDOnStart
	bool triggerCDOnFail
	vint skillGroupCDID
	bool triggerDynamicCD
	bool ignoreDynamicCD
	string[] stateIDs
	float skillQueryingTime
	MoleMole.Config.ConfigAITurningStateSetting skillPrepareTurningState
	vint commandID
	string flagTargetReachable
	string flagSelfOnTemplateCollider
	string flagSelfInZone
	string flagTargetInZone
	MoleMole.Config.ConfigAIBuddySkillCondition buddySkillCondition
	MoleMole.Config.NeuronName[] nerveTrigger
	MoleMole.Config.ConfigAINerveSkill nerveTarget
}
class MoleMole.Config.ConfigAITurningStateSetting {
	string[] turningStates
	float turningStateAngle
}
class MoleMole.Config.ConfigAISkillCastCondition {
	vint[] pose
	bool needReInitCD
	float minTargetAngleXZ
	float maxTargetAngleXZ
	float maxTargetAngleY
	float minTargetAngleY
	float pickRangeMin
	float pickRangeMax
	float pickRangeYMax
	float pickRangeYMin
	MoleMole.Config.ConfigAIRaycastCondition[] pickRangeByRaycast
	float SkillAnchorRangeMin
	float SkillAnchorRangeMax
	MoleMole.Config.ConfigAIAngleXZ_Y skillAnchorAngle
	float TargetSkillAnchorRangeMin
	float TargetSkillAnchorRangeMax
	MoleMole.Config.CondfigAIRangeType castRangeType
	float castRangeMin
	float castRangeMax
	MoleMole.Config.ConfigAICastRangeXZ_Y castRangeXZ_Y
	string[] globalValues
	bool globalValuesLogicAnd
	MoleMole.Config.AISkillTargetType globalValuesTargetType
}
class MoleMole.Config.ConfigAIAngleXZ_Y {
	float xz_min
	float xz_max
	float ymin
	float ymax
}
class MoleMole.Config.ConfigAICastRangeXZ_Y {
	float castRangeXZMin
	float castRangeXZMax
	float castRangeYMin
	float castRangeYMax
}
class MoleMole.Config.ConfigAIBuddySkillCondition {
	float selectRange
	MoleMole.Config.ConfigAIBuddyScoring buddyScoring
}
class MoleMole.Config.ConfigAIBuddyScoring {
	vint hpFactor
	float hpWeight
	float distFactor
	vint distWeight
	float[] roleScores
}
class MoleMole.Config.ConfigAINerveSkill {
	bool enable
	MoleMole.Config.ConfigAINerveTargetType nerveTargetType
	bool changeThreatTarget
}
class MoleMole.Config.ConfigAITarget {
	MoleMole.Config.AITargetSystemType[] defaultTargetPrioritys
	map<vint,MoleMole.Config.AITargetSystemType[]> specificationTargetPrioritys
}
class MoleMole.Config.ConfigAIMixinSetting {
	MoleMole.Config.ConfigAIMixinSetControllerCondition[] setControllerParameterOnBeHitByEntityType
}
class MoleMole.Config.ConfigAIMixinSetControllerCondition {
	vint[] poseIDs
	MoleMole.Config.ConfigAIMixinSetControllerParameter[] settings
}
class MoleMole.Config.ConfigAIMixinSetControllerParameter {
	MoleMole.Config.EntityType[] entityTypes
	MoleMole.Config.ConfigAIMixinActions onSuccess
	MoleMole.Config.ConfigAIMixinActions onFail
}
class MoleMole.Config.ConfigAIMixinActions {
	MoleMole.Config.ConfigAIMixinSetBool[] setPoseBool
	MoleMole.Config.ConfigAIMixinSetInt[] setPoseInt
	MoleMole.Config.ConfigAIMixinSetFloat[] setPoseFloat
	MoleMole.Config.ConfigAIMixinSetAnimatorTrigger[] setAnimatorTrigger
	MoleMole.Config.ConfigAIMixinSetBool[] setAnimatorBool
	MoleMole.Config.ConfigAIMixinSetInt[] setAnimatorInt
	MoleMole.Config.ConfigAIMixinSetFloat[] setAnimatorFloat
}
class MoleMole.Config.ConfigAIMixinSetBool {
	string boolID
	bool value
}
class MoleMole.Config.ConfigAIMixinSetInt {
	string intID
	vint value
}
class MoleMole.Config.ConfigAIMixinSetFloat {
	string floatID
	float value
}
class MoleMole.Config.ConfigAIMixinSetAnimatorTrigger {
	string triggerID
}
class MoleMole.Config.ConfigWeather {
	MoleMole.Config.ConfigElemBall[] dropElemBalls
	string shapeName
	float[] position
	vint priority
	string defaultEnviro
	string[] weatherList
	float[] weatherWeightList
	float refreshTime
}
class MoleMole.Config.ConfigElemBall {
	MoleMole.Config.ElemBallTriggerType type
	MoleMole.Config.ElementType elementType
	vint curMaxNum
	float[] intervalTimes
	vuint[] dropItems
	vuint[] dropCounts
	vint maxNum
	float poissonDisk
	float minRadius
	float maxRadius
}
class MoleMole.Config.ConfigWall {
	string collisionEffectPattern
	float fadeDuration
}
class MoleMole.Config.ConfigFace {
	string characterName
	string baseFaceAnimation
	string intervalFaceAnimation
	float minInterval
	float maxInterval
}
class MoleMole.Config.ConfigPartController {
	MoleMole.Config.ConfigControlPart[] parts
}
class MoleMole.Config.ConfigPaimon {
	MoleMole.Config.Vector followOffSet
	float slowDownRangeXZ
	float slowDownRangeY
	float showRandomCDMin
	float showRandomCDMax
}
class MoleMole.Config.ConfigGadgetAction {
	MoleMole.Config.ConfigGadgetStateAction[] triggerEnterActionList
	MoleMole.Config.ConfigGadgetStateAction[] gadgetStateActionList
	MoleMole.Config.ConfigGadgetStateAction[] platformActionList
	MoleMole.Config.ConfigGadgetStateAction[] interactActionList
	MoleMole.Config.ConfigGadgetStateAction[] postUIInteractActionList
}
class MoleMole.Config.ConfigIntee {
	bool useTrigger
	bool useInteractionTrigger
	bool usePushCollider
	bool useHeadControlTrigger
	float triggerRadius
	float triggerHeight
	float interactionTriggerRadius
	float headCtrlRadius
	MoleMole.Config.Vector triggerOffset
}
class MoleMole.Config.ConfigVehicle {
	MoleMole.Config.VehicleType vehicleType
	MoleMole.Config.PlayModeType playMode
	string cameraMode
	vuint maxSeatCount
	MoleMole.Config.ConfigVehicleSeat[] seats
	vuint defaultLevel
	vuint serverBuffId
	MoleMole.Config.ConfigVehicleStamina stamina
}
class MoleMole.Config.ConfigVehicleSeat {
	string attachTo
	vuint optionID
	MoleMole.Config.Vector rotate
	float offVehicleUpDist
}
class MoleMole.Config.ConfigVehicleStamina {
	float staminaUpperLimit
	float staminaRecoverSpeed
	float staminaRecoverWaitTime
	float extraStaminaUpperLimit
	float sprintStaminaCost
	float dashStaminaCost
}
class MoleMole.Config.ConfigVODIntee {
	vuint excelConfigId
}
class MoleMole.Config.ConfigGadgetCameraBox {
	string configName
	float enterRadius
	float exitRadius
	MoleMole.Config.GadgetCameraBoxUIActionType uiAction
}
class MoleMole.Config.ConfigTransPointEntity : MoleMole.Config.ConfigGadget {
	MoleMole.Config.TransPointUpdateMaterial[] updateMaterialList
}
class MoleMole.Config.TransPointUpdateMaterial {
	vuint level
	string matPath
	string[] transforms
}
class MoleMole.Config.ConfigCharacter : MoleMole.Config.ConfigEntity {
	MoleMole.Config.ConfigCombat combat
	MoleMole.Config.ConfigEquipController equipController
	MoleMole.Config.ConfigSubEquipController[] subEquipControllers
	MoleMole.Config.ConfigEntityAbilityEntry[] abilities
	map<string,MoleMole.Config.ConfigBaseStateLayer> stateLayers
	MoleMole.Config.ConfigFace face
	MoleMole.Config.ConfigPartController partControl
	MoleMole.Config.ConfigBillboard billboard
	string[] bindEmotions
}
class MoleMole.Config.ConfigAvatar : MoleMole.Config.ConfigCharacter {
	MoleMole.Config.ConfigAvatarShoot shootConfig
	MoleMole.Config.ConfigAvatarAudio audio
	MoleMole.Config.ConfigAvatarControllerAssembly controllerAssembly
	MoleMole.Config.ConfigMoveStateEffect moveStateEffect
	MoleMole.Config.ConfigAvatarPerform perform
}
class MoleMole.Config.ConfigAvatarShoot {
	MoleMole.Config.ConfigShoot normalShoot
	MoleMole.Config.ConfigShoot aimingShoot
}
class MoleMole.Config.ConfigShoot {
	string bulletBornAttachPoint
	float detectRangeFromViewport
	float detectRadiusFromViewport
	float autoFocusMinRange
	float autoFocusMaxRange
}
class MoleMole.Config.ConfigAvatarControllerAssembly {
	string controllerPath
	string normalMoveSubs
	string weaponMoveSubs
	MoleMole.Config.ConfigAvatarControllerAssemblySkillSubs skillSubs
}
class MoleMole.Config.ConfigAvatarControllerAssemblySkillSubs {
	string Skill01_SUBS
	string Skill02_SUBS
	string Skill03_SUBS
	string Skill04_SUBS
}
class MoleMole.Config.ConfigMoveStateEffect {
	MoleMole.Config.ConfigFootprint footprint
}
class MoleMole.Config.ConfigFootprint {
	string defaultEffectPatternName
	map<MoleMole.Config.SceneSurfaceType,map<MoleMole.Config.EFootprintPlatform,MoleMole.Config.ConfigFootprintEffect>> specialSurfaces
}
class MoleMole.Config.ConfigAvatarPerform {
	MoleMole.Config.ConfigStandbyPerform standby
}
class MoleMole.Config.ConfigStandbyPerform {
	float minTime
	float maxTime
	vint[] performIDs
}
class MoleMole.Config.ConfigMonster : MoleMole.Config.ConfigCharacter {
	map<string,MoleMole.Config.ConfigMonsterInitialPose> initialPoses
	MoleMole.Config.ConfigAIBeta aibeta
	MoleMole.Config.ConfigKeyInput[] inputKeys
	MoleMole.Config.ConfigMove move
	MoleMole.Config.ConfigMonsterAudio audio
	MoleMole.Config.ConfigEmojiBubble emojiBubble
	MoleMole.Config.ConfigCharacterRendering characterRendering
	MoleMole.Config.ConfigAnimal animal
	MoleMole.Config.ConfigTrigger field
	MoleMole.Config.ConfigCaptureGroup captureGroup
	map<string,MoleMole.Config.ConfigSpecialCamera> cameraAdjustMap
	MoleMole.Config.ConfigClothoid clothoid
	MoleMole.Config.ConfigUISetting uiSetting
}
class MoleMole.Config.ConfigClothoid {
	bool enableExit
	float curMax
	float curMin
	float speedMax
	float speedMin
	float curveLength
}
class MoleMole.Config.ConfigUISetting {
	bool radarHint
}
class MoleMole.Config.ConfigMonsterInitialPose {
	vint initialPoseID
	bool released
	MoleMole.Config.ConfigPoseInitialParam initialPoseParams
}
class MoleMole.Config.ConfigPoseInitialParam {
	map<string,string> intParams
	map<string,string> floatParams
	map<string,string> boolParams
}
class MoleMole.Config.ConfigKeyInput {
	vint keyID
	vint inputKeyCode
	string abilityName
	float abilityCD
}
class MoleMole.Config.ConfigEmojiBubble {
}
class MoleMole.Config.ConfigCharacterRendering {
	bool overrideLightDir
	MoleMole.Config.Vector overrideLightEulerAngle
	vint overrideTickInterval
}
class MoleMole.Config.ConfigAnimal {
	bool hasAbility
	bool tickAbilityElement
	bool simpleCombat
	bool hasCharacterRenderering
	bool canEnvAnimalChangeAnimator
}
class MoleMole.Config.ConfigCaptureGroup {
	MoleMole.Config.ConfigCapture defaultConfig
}
class MoleMole.Config.ConfigCapture {
	string captureEffect
}
class MoleMole.Config.ConfigNpc : MoleMole.Config.ConfigCharacter {
	float defaultDither
	bool useShape
	float disappearDuration
	MoleMole.Config.ConfigAIBeta aibeta
	MoleMole.Config.ConfigMove move
	MoleMole.Config.ConfigIntee intee
	MoleMole.Config.ConfigGadgetAudio audio
	MoleMole.Config.ConfigEmojiBubble emojiBubble
	string elementPendantPoint
}
class MoleMole.Config.ConfigLevelEntity : MoleMole.Config.ConfigEntity {
	MoleMole.Config.DropElemControlType dropElemControlType
	MoleMole.Config.ConfigEntityAbilityEntry[] abilities
	MoleMole.Config.ConfigEntityAbilityEntry[] avatarAbilities
	MoleMole.Config.ConfigEntityAbilityEntry[] teamAbilities
	MoleMole.Config.ConfigEntityAbilityEntry[] monsterAbilities
	map<string,map<string,float>> elemAmplifyDamage
	vuint[] preloadMonsterEntityIDs
}
class MoleMole.Config.ConfigGadgetUIBase {
	string gadgetUIBtnCfgPath
	string uiName
	MoleMole.Config.TouchInteractType onTouch
	string[] touchParams
	MoleMole.Config.LogicType showCombType
	MoleMole.Config.GadgetUIItemShowCondType[] showCondTypes
	float[] postGadgetActionParams
	string icon
	string groupName
	MoleMole.Config.GadgetInteractItemType itemType
	bool needDialogConfirm
	string confirmDialogTitle
	string confirmDialogContent
}
class MoleMole.Config.ConfigGadgetUIExtraItem : MoleMole.Config.ConfigGadgetUIBase {
	vint extraId
}
class MoleMole.Config.ConfigGadgetUI : MoleMole.Config.ConfigGadgetUIBase {
	bool alwaysInteractive
	bool canInteractInCombat
	bool canOnlyInteractInStandStill
	vuint openRewardId
	MoleMole.Config.ConfigGadgetUIExtraItem[] gadgetUIExtraItems
}
class MoleMole.Config.ConfigGadgetPredicate {
}
class MoleMole.Config.ConfigPredicateByTime : MoleMole.Config.ConfigGadgetPredicate {
	bool isNight
}
class MoleMole.Config.ConfigPredicateByPlatform : MoleMole.Config.ConfigGadgetPredicate {
	bool isStart
}
class MoleMole.Config.ConfigPredicateByInteract : MoleMole.Config.ConfigGadgetPredicate {
	bool isEnableInteract
}
class MoleMole.Config.ConfigGadgetStateAction {
	MoleMole.Config.GadgetState gadgetState
	MoleMole.Config.ConfigGadgetPredicate predicate
}
class MoleMole.Config.ConfigGadgetStateFireEffect : MoleMole.Config.ConfigGadgetStateAction {
	string rootName
	string effectPattern
}
class MoleMole.Config.ConfigGadgetStateSetAnimTrigger : MoleMole.Config.ConfigGadgetStateAction {
	string triggerID
}
class MoleMole.Config.ConfigGadgetStateDynamicPickableHint : MoleMole.Config.ConfigGadgetStateAction {
	vuint materialID
}
class MoleMole.Config.ConfigGadgetStateSetAnimInt : MoleMole.Config.ConfigGadgetStateAction {
	string intID
	vint value
	bool syncState
}
class MoleMole.Config.ConfigGadgetStateFireAISound : MoleMole.Config.ConfigGadgetStateAction {
	float volume
}
class MoleMole.Config.ConfigGadgetStateEnableGadgetIntee : MoleMole.Config.ConfigGadgetStateAction {
	bool enable
}
class MoleMole.Config.ConfigGadgetStateEnableAction : MoleMole.Config.ConfigGadgetStateAction {
	bool enable
}
class MoleMole.Config.ConfigGadgetStateSendEffectTrigger : MoleMole.Config.ConfigGadgetStateAction {
	string parameter
	MoleMole.Config.AnimatorParamType type
	vint value
	string effectPattern
}
class MoleMole.Config.ConfigGadgetStateDisableRadarHint : MoleMole.Config.ConfigGadgetStateAction {
}
class MoleMole.Config.ConfigGadgetTurn {
	string movePartAroundX
	string anchorPartAroundX
	string movePartAroundY
	string anchorPartAroundY
	string movePartAroundZ
	string anchorPartAroundZ
	MoleMole.Config.ConfigWwiseString audioBeginTurningEvent
	MoleMole.Config.ConfigWwiseString audioStopTurningEvent
	MoleMole.Config.ConfigWwiseString audioBeginTurningEventAroundX
	MoleMole.Config.ConfigWwiseString audioStopTurningEventAroundX
	MoleMole.Config.ConfigWwiseString audioBeginTurningEventAroundY
	MoleMole.Config.ConfigWwiseString audioStopTurningEventAroundY
	MoleMole.Config.ConfigWwiseString audioBeginTurningEventAroundZ
	MoleMole.Config.ConfigWwiseString audioStopTurningEventAroundZ
	map<vuint,MoleMole.Config.ConfigGadgetTurnState> turnStateMap
}
class MoleMole.Config.ConfigGadgetTurnState {
	float angleAroundX
	float angleAroundY
	float angleAroundZ
	vuint lerpCurveIndex
	float lerpTime
}
class MoleMole.Config.ConfigGlobalValueTurn : MoleMole.Config.ConfigGadgetTurn {
	string globalValueName
	string avatarTargetPosGVKeyName
	map<vuint,MoleMole.Config.Vector> avatarTargetPosMap
}
class MoleMole.Config.ConfigControlPart {
	float angularSpeed
	string partRootName
	MoleMole.Config.ControlPartForwardBy forwardBy
	MoleMole.Config.Vector forwardAxialFix
	MoleMole.Config.ControlPartRotateBy rotateBy
	MoleMole.Config.ControlPartDoOnUnEnabled doOnUnEabled
	string forwardByTransName
	float limitHorizontal
	float limitVertical
	MoleMole.Config.ControlPartTargetType targetType
	bool defaultEnable
}
class MoleMole.Config.ConfigControlPartByIK : MoleMole.Config.ConfigControlPart {
}
class MoleMole.Config.ConfigControlPartByIKCCD : MoleMole.Config.ConfigControlPartByIK {
	string rootName
	MoleMole.Config.Vector finalAxialFix
	float verticalDamping
}
class MoleMole.Config.ConfigEntityAudio {
	MoleMole.Config.ConfigAnimationAudio animAudio
	MoleMole.Config.ConfigWwiseString initEvent
	MoleMole.Config.ConfigWwiseString enableEvent
	MoleMole.Config.ConfigWwiseString disableEvent
	MoleMole.Config.ConfigWwiseString destroyEvent
}
class MoleMole.Config.ConfigAnimationAudio {
	MoleMole.Config.ConfigStateAudioEvent[] onTransitionIn
	MoleMole.Config.ConfigStateAudioEvent[] onTransitionOut
	map<string,MoleMole.Config.ConfigAnimationRecurrentSpeech> recurrentSpeeches
}
class MoleMole.Config.ConfigStateAudioEvent {
	string currentStateName
	MoleMole.Config.ConfigWwiseString audioEvent
	string[] otherStateNames
	MoleMole.Config.StateAudioEventUsage usage
}
class MoleMole.Config.ConfigAnimationRecurrentSpeech {
	MoleMole.Config.ConfigFluctuatedValue start
	MoleMole.Config.ConfigFluctuatedValue interval
	MoleMole.Config.ConfigWwiseString eventName
}
class MoleMole.Config.ConfigFluctuatedValue {
	float upper
	float lower
}
class MoleMole.Config.ConfigGadgetAudio : MoleMole.Config.ConfigEntityAudio {
	bool triggersSpeech
}
class MoleMole.Config.ConfigVehicleAudio : MoleMole.Config.ConfigGadgetAudio {
	MoleMole.Config.ConfigWwiseString collisionEvent
	float maxVelocity
	vuint collisionAudioTriggerCooldown
	float collisionAudioTriggerThreshold
}
class MoleMole.Config.ConfigCharacterAudio : MoleMole.Config.ConfigEntityAudio {
}
class MoleMole.Config.ConfigAvatarAudio : MoleMole.Config.ConfigCharacterAudio {
	MoleMole.Config.ConfigMoveStateAudio moveStateAudio
	MoleMole.Config.ConfigCombatSpeech combatSpeech
	MoleMole.Config.ConfigWwiseString voiceSwitch
	MoleMole.Config.ConfigWwiseString bodyTypeSwitch
	float listenerLiftup
	float surfaceProberLiftup
}
class MoleMole.Config.ConfigMoveStateAudio {
	MoleMole.Config.ConfigStateAudioEvent[] onStateBegin
	MoleMole.Config.ConfigStateAudioEvent[] onStateEnd
}
class MoleMole.Config.ConfigCombatSpeech {
	MoleMole.Config.ConfigWwiseString headShotSpeechEvent
}
class MoleMole.Config.ConfigMonsterAudio : MoleMole.Config.ConfigCharacterAudio {
	MoleMole.Config.ConfigWwiseString randomVariantSwitchGroup
	MoleMole.Config.ConfigWwiseString[] randomVariantSwitchValues
}
class MoleMole.Config.ConfigBaseEquipController {
	string sheathPoint
	float dissolveSheathFadeDelay
	float dissolveSheathFadeTime
	float dissolveTakeFadeTime
	MoleMole.Config.TriggerToStates[] triggerToStates
}
class MoleMole.Config.TriggerToStates {
	string trigger
	float playTime
	string[] states
	MoleMole.Config.BowDrawTime[] bowDrawTimes
	string floatID
	float floatValue
}
class MoleMole.Config.BowDrawTime {
	float bowDrawStartNormTime
	float bowDrawEndNormTime
	string bowStringOverridePoint
}
class MoleMole.Config.ConfigEquipController : MoleMole.Config.ConfigBaseEquipController {
	map<string,string> attachPoints
	MoleMole.Config.WeaponAwayFromHandState[] weaponAwayFromHandStates
}
class MoleMole.Config.WeaponAwayFromHandState {
	string state
	float startNormTime
	float endNormTime
	float delayAppearTime
	float dissolveShowTime
	float dissolveHideTime
}
class MoleMole.Config.ConfigSubEquipController : MoleMole.Config.ConfigBaseEquipController {
	string name
	string attachPoint
	vuint configID
	bool muteAbilityState
}
class MoleMole.Config.ConfigBaseGadgetTriggerAction {
}
class MoleMole.Config.ConfigGadgetDoAttackEvent : MoleMole.Config.ConfigBaseGadgetTriggerAction {
	string attackEvent
}
class MoleMole.Config.ConfigGadgetTriggerAbility : MoleMole.Config.ConfigBaseGadgetTriggerAction {
	string abilityName
}
class MoleMole.Config.ConfigGadgetDamageByAttackValue : MoleMole.Config.ConfigBaseGadgetTriggerAction {
	MoleMole.Config.ConfigBornType born
	MoleMole.Config.ConfigAttackInfo attackInfo
}
class MoleMole.Config.ConfigGadgetPattern {
	MoleMole.Config.ConfigCollision collision
	bool colliderCheckOnInit
}
class MoleMole.Config.ConfigGadgetCollidedPattern : MoleMole.Config.ConfigGadgetPattern {
	MoleMole.Config.ConfigBaseGadgetTriggerAction[] collisionActions
	string thisColliderName
	string targetColliderName
}
class MoleMole.Config.ConfigBulletPattern : MoleMole.Config.ConfigGadgetPattern {
	MoleMole.Config.ConfigBaseGadgetTriggerAction[] triggerActions
	MoleMole.Config.ConfigBaseGadgetTriggerAction[] triggerLifeOverActions
	bool killByOther
	float dieDelayTime
	bool fireAISoundEvent
	float maxAutoKillDist
	float enableCollisionDelay
	bool reset_last_pos_on_delay_end
	bool re_trigger_on_delay_end
}
class MoleMole.Config.ConfigMultiBulletPattern : MoleMole.Config.ConfigBulletPattern {
	MoleMole.Config.ConfigMultiBullet multiBulletConfig
}
class MoleMole.Config.ConfigMultiBullet {
	MoleMole.Config.SelectTargetDefaultType selectTargetDefaultType
}
class MoleMole.Config.ConfigEffectItanoCircusBullet : MoleMole.Config.ConfigMultiBullet {
	string effectPattern
}
class MoleMole.Config.ConfigBaseGuide {
}
class MoleMole.Config.ConfigGuideAction : MoleMole.Config.ConfigBaseGuide {
}
class MoleMole.Config.ConfigGuideUIMaskAction : MoleMole.Config.ConfigGuideAction {
	MoleMole.Config.ConfigGuideWidgetContent[] widgetList
	string topInfo
	string[] prefabList
	bool clickToClose
	bool needSave
	MoleMole.Config.ConfigGuideContextListType contextListType
	string pageShowPrefabAndGlobalHint
}
class MoleMole.Config.ConfigGuideWidgetContent {
	string path
	string contextName
	string hintInfo
	string widghtInfo
	string warningInfo
	string[] whiteContextList
	MoleMole.Config.InputActionType[] actionInfoList
	MoleMole.Config.ConfigInputHint[] inputHintList
	MoleMole.Config.WidgetInfoPos widghtInfoPos
	MoleMole.Config.MaskGuideType maskType
	bool maskPassEasyTouch
	MoleMole.Config.ButtonGuideType type
	float xOffset
	float yOffset
	float hintOffset
	MoleMole.Config.GuideWidgetSpecialType special
	float value
	string valueStr
	MoleMole.Config.GuidePageType pageType
	vint maskIndex
	bool keepScale
	MoleMole.Config.GuideGeneralConditionType generalConditionType
	bool generalConditionVal
	vint saveIndex
}
class MoleMole.Config.ConfigInputHint {
	string hintInfo
	MoleMole.Config.InputActionType[] actionInfoList
}
class MoleMole.Config.ConfigGuideShowPage : MoleMole.Config.ConfigGuideAction {
	string contextName
	bool enable
}
class MoleMole.Config.ConfigGuideInfoDialogAction : MoleMole.Config.ConfigGuideAction {
	string title
	string content
	MoleMole.Config.ConfigGuideAction[] onOKActions
	MoleMole.Config.ConfigGuideAction[] onCancelActions
}
class MoleMole.Config.ConfigGuideSetOpenStateAction : MoleMole.Config.ConfigGuideAction {
	MoleMole.Config.GuideOpenStateType openState
	bool value
}
class MoleMole.Config.ConfigGuideAddTaskAction : MoleMole.Config.ConfigGuideAction {
	string taskName
}
class MoleMole.Config.ConfigGuideEndTaskAction : MoleMole.Config.ConfigGuideAction {
	string taskName
}
class MoleMole.Config.ConfigGuidePauseAction : MoleMole.Config.ConfigGuideAction {
}
class MoleMole.Config.ConfigGuideForceAvatarMoveAction : MoleMole.Config.ConfigGuideAction {
	float angle
	float mold
}
class MoleMole.Config.ConfigGuideCameraControlAction : MoleMole.Config.ConfigGuideAction {
}
class MoleMole.Config.ConfigGuideBanUIAction : MoleMole.Config.ConfigGuideAction {
	vint uiBanType
	bool value
}
class MoleMole.Config.ConfigGuideAddCmd : MoleMole.Config.ConfigGuideAction {
	MoleMole.Config.GuideCmdType cmdType
	float paraValue
}
class MoleMole.Config.ConfigGuideDelayDoAction : MoleMole.Config.ConfigGuideAction {
	float delayTime
	MoleMole.Config.ConfigGuideAction[] actions
}
class MoleMole.Config.ConfigGuideDoActionByPredicate : MoleMole.Config.ConfigGuideAction {
	MoleMole.Config.ConfigGuideCondition[][] predicates
	MoleMole.Config.ConfigGuideAction[] actions
}
class MoleMole.Config.ConfigGuideShowTutorialAction : MoleMole.Config.ConfigGuideAction {
	vuint tutorialID
}
class MoleMole.Config.ConfigGuideShowPanelAction : MoleMole.Config.ConfigGuideAction {
	bool enable
}
class MoleMole.Config.ConfigGuideSwitchInputContextAction : MoleMole.Config.ConfigGuideAction {
	string[] inputEventList
	string[] contextEventList
	vint[] inputPriorityList
}
class MoleMole.Config.ConfigGuideFinishQuestAction : MoleMole.Config.ConfigGuideAction {
	vuint questID
}
class MoleMole.Config.ConfigGuideProjectionGameFinishAction : MoleMole.Config.ConfigGuideAction {
	MoleMole.Config.ProjectionGameGuideType guideType
	MoleMole.Config.ProjectionGameGuideInputMode inputMode
}
class MoleMole.Config.ConfigGuideCondition : MoleMole.Config.ConfigBaseGuide {
	MoleMole.Config.GuideGeneralConditionType generalConditionType
	bool generalConditionVal
}
class MoleMole.Config.ConfigGuideGeneralCondition : MoleMole.Config.ConfigGuideCondition {
}
class MoleMole.Config.ConfigAvatarEquipChangedCondition : MoleMole.Config.ConfigGuideCondition {
	vuint configID
}
class MoleMole.Config.ConfigGuideOpenStateCondition : MoleMole.Config.ConfigGuideCondition {
	MoleMole.Config.GuideOpenStateType openState
	bool value
}
class MoleMole.Config.ConfigGuideLevelCondition : MoleMole.Config.ConfigGuideCondition {
	vuint limitLevel
	bool IsLess
}
class MoleMole.Config.ConfigGuideOpenUICondition : MoleMole.Config.ConfigGuideCondition {
	string contextName
	bool enable
	string[] activeList
	MoleMole.Config.GuidePageType pageType
}
class MoleMole.Config.ConfigGuideAvatarChangeCondition : MoleMole.Config.ConfigGuideCondition {
	vuint configID
}
class MoleMole.Config.ConfigGuideCanGetPersonalLineKeyCondition : MoleMole.Config.ConfigGuideCondition {
	bool value
}
class MoleMole.Config.ConfigGuideClimateTypeCondition : MoleMole.Config.ConfigGuideCondition {
	MoleMole.Config.JsonClimateType climateType
	bool isEqual
}
class MoleMole.Config.ConfigGuideTeamMemberCondition : MoleMole.Config.ConfigGuideCondition {
	vuint configID
	bool hasMember
}
class MoleMole.Config.ConfigGuideAvatarStateCondition : MoleMole.Config.ConfigGuideCondition {
	MoleMole.Config.GuideAvatarState state
}
class MoleMole.Config.ConfigGuideButtonClickCondition : MoleMole.Config.ConfigGuideCondition {
	string buttonPath
	string contextName
	MoleMole.Config.GuidePageType pageType
	MoleMole.Config.GuideButtonClick type
	float value
	MoleMole.Config.GuideWidgetSpecialType special
	vint specialIndex
	MoleMole.Config.GuideLongPressType longPressType
	bool forceLastClick
}
class MoleMole.Config.ConfigGuideTabItemCondition : MoleMole.Config.ConfigGuideCondition {
	string path
	string contextName
	vint value
	MoleMole.Config.GuidePageType pageType
	bool isSelect
}
class MoleMole.Config.ConfigGuideTheatreMechanicusBuildingSelectCondition : MoleMole.Config.ConfigGuideCondition {
	vint value
	bool isRebuild
	bool isSelect
}
class MoleMole.Config.ConfigGuideTheatreMechanicusInfoSelectCondition : MoleMole.Config.ConfigGuideCondition {
	vint value
	bool isSelect
}
class MoleMole.Config.ConfigGuideHasItemCondition : MoleMole.Config.ConfigGuideCondition {
	vuint[][] itemIDLists
	vint[] materialTypeList
	MoleMole.Config.GuideItemType type
	bool notHave
	float value
}
class MoleMole.Config.ConfigGuideCameraCondition : MoleMole.Config.ConfigGuideCondition {
	MoleMole.Config.GuideCameraAction action
	float param
}
class MoleMole.Config.ConfigGuideAvatarActionCondition : MoleMole.Config.ConfigGuideCondition {
	MoleMole.Config.GuideAvatarAction action
}
class MoleMole.Config.ConfigGuideDelayFinishCondition : MoleMole.Config.ConfigGuideCondition {
	float delayTime
}
class MoleMole.Config.ConfigGuideMultiSinglePlayerCondition : MoleMole.Config.ConfigGuideCondition {
	bool isIn
}
class MoleMole.Config.ConfigGuideMultiPlayerCondition : MoleMole.Config.ConfigGuideCondition {
	bool isIn
	vint playerNum
	MoleMole.Config.GuideOperator opt
	MoleMole.Config.GuideMultiPlayerMode mode
}
class MoleMole.Config.ConfigGuideTeamAvatarNumCondition : MoleMole.Config.ConfigGuideCondition {
	vuint avatarNum
	MoleMole.Config.GuideOperator opt
}
class MoleMole.Config.ConfigGuideHasAvatarCondition : MoleMole.Config.ConfigGuideCondition {
	MoleMole.Config.GuideHasAvatarType type
	MoleMole.Config.GuideHasAvatarConType conType
	float value
}
class MoleMole.Config.ConfigGuideKillMonsterCondition : MoleMole.Config.ConfigGuideCondition {
	bool spawnNew
	vuint monsterID
	vuint monsterLevel
	MoleMole.Config.Vector monsterPos
	float monsterYaw
}
class MoleMole.Config.ConfigGuideCheckTaskFinishCondition : MoleMole.Config.ConfigGuideCondition {
	vuint taskId
}
class MoleMole.Config.ConfigGuideCheckQuestStateCondition : MoleMole.Config.ConfigGuideCondition {
	vuint questId
	vuint questState
	bool isEqual
}
class MoleMole.Config.ConfigGuideNavigationCondition : MoleMole.Config.ConfigGuideCondition {
	vuint navigationId
	MoleMole.Config.GuideNavigationType navigationType
	MoleMole.Config.GuideNavigationCheckType checkType
	bool onlyCheckChange
}
class MoleMole.Config.ConfigGuideOpenPaimonNavigationCondition : MoleMole.Config.ConfigGuideCondition {
}
class MoleMole.Config.ConfigGuideVirtualDialActionCondition : MoleMole.Config.ConfigGuideCondition {
	vint virtualDialAction
}
class MoleMole.Config.ConfigGuideCenterVirtualDialActionCondition : MoleMole.Config.ConfigGuideCondition {
	vint paimonEntryType
}
class MoleMole.Config.ConfigGuideCheckPlatformCondition : MoleMole.Config.ConfigGuideCondition {
	MoleMole.Config.GuidePlatform platform
	bool value
}
class MoleMole.Config.ConfigGuideCheckAimCondition : MoleMole.Config.ConfigGuideCondition {
	bool value
}
class MoleMole.Config.ConfigGuideLevelTypeCondition : MoleMole.Config.ConfigGuideCondition {
	MoleMole.Config.GuideLevelType type
}
class MoleMole.Config.ConfigGuidePressKeyCondition : MoleMole.Config.ConfigGuideCondition {
	MoleMole.Config.InputEventType eventID
	MoleMole.Config.InputEventType endEventID
	MoleMole.Config.GuideKeyClick type
	float value
}
class MoleMole.Config.ConfigGuideMapClickCondition : MoleMole.Config.ConfigGuideCondition {
	vuint markID
	bool onlySingleClick
}
class MoleMole.Config.ConfigGuideSceneIdCondition : MoleMole.Config.ConfigGuideCondition {
	vuint sceneId
	vuint[] sceneIdList
	bool isScene
}
class MoleMole.Config.ConfigGuideDungeonIdCondition : MoleMole.Config.ConfigGuideCondition {
	vuint dungeonId
	vuint[] dungeonIdList
	bool isDungeon
}
class MoleMole.Config.ConfigGuideHomeSceneCondition : MoleMole.Config.ConfigGuideCondition {
	bool isInHomeBigWorld
	bool isInHomeRoom
}
class MoleMole.Config.ConfigGuideFoundationBuildCondition : MoleMole.Config.ConfigGuideCondition {
	vint num
	MoleMole.Config.GuideOperator opt
	bool isBuild
}
class MoleMole.Config.ConfigGuideMechanicusPickCardCondition : MoleMole.Config.ConfigGuideCondition {
	vint value
	bool isSelect
}
class MoleMole.Config.ConfigGuideMechanicusCurseCardCondition : MoleMole.Config.ConfigGuideCondition {
	bool hasCurse
}
class MoleMole.Config.ConfigGuidePageCheckBaseCondition : MoleMole.Config.ConfigGuideCondition {
}
class MoleMole.Config.ConfigGuideHideandSeekSkillCategoryCondition : MoleMole.Config.ConfigGuidePageCheckBaseCondition {
	vint index
	bool isSelect
}
class MoleMole.Config.ConfigGuideAnchorUnlockCondition : MoleMole.Config.ConfigGuideCondition {
	vuint pointId
	bool unlock
}
class MoleMole.Config.ConfigGuideFlyStartCondition : MoleMole.Config.ConfigGuideCondition {
	float height
}
class MoleMole.Config.ConfigGuideFlyFinishCondition : MoleMole.Config.ConfigGuideCondition {
	float time
}
class MoleMole.Config.ConfigGuideFlyFailCondition : MoleMole.Config.ConfigGuideCondition {
}
class MoleMole.Config.ConfigGuideProjectionGameStartCondition : MoleMole.Config.ConfigGuideCondition {
	MoleMole.Config.ProjectionGameGuideType guideType
	MoleMole.Config.ProjectionGameGuideInputMode inputMode
}
class MoleMole.Config.ConfigGuideProjectionGameFinishCondition : MoleMole.Config.ConfigGuideCondition {
	MoleMole.Config.ProjectionGameGuideFinishType finishType
	float param
}
class MoleMole.Config.ConfigGuideActivityGachaCondition : MoleMole.Config.ConfigGuideCondition {
	vuint percent
	MoleMole.Config.GuideOperator opt
}
class MoleMole.Config.ConfigBaseInterAction {
	MoleMole.Config.InteractionType type
	float delayTime
	float duration
	string[] aliasList
	bool checkNextImmediately
	vuint actionId
	vuint preActionId
	bool haveNextAction
}
class MoleMole.Config.AreaUnlockInterAction : MoleMole.Config.ConfigBaseInterAction {
}
class MoleMole.Config.ConfigBodyLangInterAction : MoleMole.Config.ConfigBaseInterAction {
	bool isContinue
	vint bodyLangParam
	vint loopState
	bool forceInterrupt
	vint[] randomParamList
	bool forceDoFreeStyle
	bool canDoRepeatFreeStyle
	bool dontClearPreFreeStyle
	bool cant_back_to_idle_when_sit_loop
}
class MoleMole.Config.ConfigEmoSyncInterAction : MoleMole.Config.ConfigBaseInterAction {
	string dataPath
	string phonemePath
	string emotionPath
	string mateDataPath
	string matePhonemePath
	string mateEmotionPath
	MoleMole.Config.EmoBackType backType
	bool enableBlink
	vuint[] dataPathHashList
	vuint[] phonemePathHashList
	vuint[] emotionPathHashList
	vuint[] mateDataPathHashList
	vuint[] matePhonemePathHashList
	vuint[] mateEmotionPathHashList
}
class MoleMole.Config.ConfigEmotionInterAction : MoleMole.Config.ConfigBaseInterAction {
	string emotionName
	float emotionTransitionTime
	MoleMole.Config.Vector lookAtOffset
	bool blinkEnabled
	float blinkMinGap
	float blinkMaxGap
	float blinkDuration
}
class MoleMole.Config.ConfigSteerInterAction : MoleMole.Config.ConfigBaseInterAction {
	MoleMole.Config.DialogSteerType steerType
	bool useAngle
	MoleMole.Config.Vector steerDir
	float steerAngle
	bool useSteerAnim
	bool interruptFreestyle
	bool forceSteer
	string targetNpcAlias
}
class MoleMole.Config.ConfigUITriggerInterAction : MoleMole.Config.ConfigBaseInterAction {
	string contextName
	string param
}
class MoleMole.Config.ConfigBlackScreenAction : MoleMole.Config.ConfigBaseInterAction {
	MoleMole.Config.BlackScreenType blackScreenType
	float durationToBlack
	float durationKeepBlack
	float durationFromBlack
	bool changeToInteePos
	string inteePos
	string textMapID
	bool textShake
	bool useWhiteScreen
	bool useTextFade
	vuint dialogID
	bool needWaitClick
	float showClickBtnDelayTime
}
class MoleMole.Config.ConfigLuaAction : MoleMole.Config.ConfigBaseInterAction {
	bool invoke
	string invokeAlias
	vuint invokeParam
}
class MoleMole.Config.ConfigDialogInterAction : MoleMole.Config.ConfigBaseInterAction {
	MoleMole.Config.DialogType dialogType
	vuint dialogID
	float protectTime
	bool playAudio
	bool autoTalkUseNewProtectTime
	float autoTalkProtectTime
}
class MoleMole.Config.ConfigDialogNextAction : MoleMole.Config.ConfigBaseInterAction {
	vuint talkID
}
class MoleMole.Config.ConfigDialogSelectAction : MoleMole.Config.ConfigBaseInterAction {
	vuint[] talkIDList
	vuint[] dialogIDList
	vuint[] grpIDList
	bool useGrpId
}
class MoleMole.Config.ConfigLookAtInterAction : MoleMole.Config.ConfigBaseInterAction {
	bool enableHead
	bool useTargetPos
	bool enableAbsolute
	MoleMole.Config.Vector targetOffset
	MoleMole.Config.Vector targetPosition
	MoleMole.Config.Vector headRotateVec
	bool enableBody
	float bodyAngle
	float headTurnTime
	float bodyTurnTime
	string targetNpcAlias
	MoleMole.Config.LookAtTargetType lookAtTargetType
	MoleMole.Config.Vector targetNpcRotateVecPlus
	bool openBackProtect
	float backProtectAngle
}
class MoleMole.Config.ConfigLookAtEyeCtrlInterAction : MoleMole.Config.ConfigBaseInterAction {
	bool clearAll
	bool useTargetPos
	MoleMole.Config.Vector targetPosition
	MoleMole.Config.Vector eyeRotateVecLeft
	MoleMole.Config.Vector eyeRotateVecRight
	float eyeScaleX
	float eyeScaleZ
	float turnTime
	string targetNpcAlias
	string targetPoint
}
class MoleMole.Config.ConfigCameraMoveInterAction : MoleMole.Config.ConfigBaseInterAction {
	MoleMole.Config.StoryCameraPosType cameraPosType
	MoleMole.Config.Vector camPosOffset
	float nearLength
	MoleMole.Config.StoryCameraTargetType camTargetType
	MoleMole.Config.Vector camForwardTargetOffset
	bool needElev
	float camFov
	float camDutch
	float lerpRatio
	vint lerpPattern
	MoleMole.Config.TweenEaseType cameraBlendType
	bool storyDither
	MoleMole.Config.ConfigFrameTransition cutFrameTrans
	bool needZAxisRotate
	float rotateAngle
	bool openCameraDither
	string targetNpcAlias
	bool keepCameraPos
	bool useDurationWhenExitFocus
	bool closeTreeLeafDither
	string[] multiTargetNpcAliasArray
	bool closeCameraDisplacement
	MoleMole.Config.VegetationInteractType vegInteractType
}
class MoleMole.Config.ConfigFrameTransition {
	bool enable
	float duration
}
class MoleMole.Config.ConfigCameraSplineInterAction : MoleMole.Config.ConfigBaseInterAction {
	MoleMole.Config.ConfigCameraSplineCameraPath cameraPath
	MoleMole.Config.ConfigCameraSplineTargetPath targetPath
	float targetDuration
	bool use_dissolve
	float dissolve_time
}
class MoleMole.Config.ConfigCutsceneInterAction : MoleMole.Config.ConfigBaseInterAction {
	MoleMole.Config.ConfigBaseCutscene cutsceneCfg
	vuint cutsceneIndex
	bool syncLoad
}
class MoleMole.Config.ConfigVisibleInterAction : MoleMole.Config.ConfigBaseInterAction {
	bool isVisible
	bool useDither
	MoleMole.Config.InterActionTargetType target
}
class MoleMole.Config.ConfigAudioStateInterAction : MoleMole.Config.ConfigBaseInterAction {
	string stateGroup
	string state
}
class MoleMole.Config.ConfigShopExchangeInterAction : MoleMole.Config.ConfigBaseInterAction {
	string shopType
}
class MoleMole.Config.ConfigGadgetTouchAction : MoleMole.Config.ConfigBaseInterAction {
}
class MoleMole.Config.ConfigCameraShakeAction : MoleMole.Config.ConfigBaseInterAction {
	float shakeRange
	float shakeTime
	float shakeDinstance
	MoleMole.Config.Vector shakeDir
}
class MoleMole.Config.ConfigShowMessageAction : MoleMole.Config.ConfigBaseInterAction {
	string txtMapStr
}
class MoleMole.Config.ConfigAudioPlayAction : MoleMole.Config.ConfigBaseInterAction {
	string audioEventStr
}
class MoleMole.Config.ConfigVideoPlayAction : MoleMole.Config.ConfigBaseInterAction {
	string videoName
	vuint subtitleId
	bool canSkip
	MoleMole.Config.ColorVector bgColor
	float fadeInTime
	float fadeOutTime
}
class MoleMole.Config.ConfigFirstSightAction : MoleMole.Config.ConfigBaseInterAction {
}
class MoleMole.Config.ConfigCameraDOFAction : MoleMole.Config.ConfigBaseInterAction {
	bool enabled
	float focusDistance
	float focusRange
	float nearFocalDistance
	float nearFocalTransDistance
	float dofBlurAmount
	vuint quality
}
class MoleMole.Config.ConfigMoveToAction : MoleMole.Config.ConfigBaseInterAction {
	MoleMole.Config.MoveToType moveType
	MoleMole.Config.Vector[] routeList
	bool exactlyMove
	MoleMole.Config.MoveToDirectionType moveDirType
	bool closeNavMesh
	float directMoveSpeed
}
class MoleMole.Config.ConfigRequestMsgAction : MoleMole.Config.ConfigBaseInterAction {
	string msgName
}
class MoleMole.Config.ConfigEmojiBubbleAction : MoleMole.Config.ConfigBaseInterAction {
	string pattarnName
	bool tryStop
}
class MoleMole.Config.ConfigTimeProtectAction : MoleMole.Config.ConfigBaseInterAction {
}
class MoleMole.Config.ConfigSimpleBlackScreenAction : MoleMole.Config.ConfigBaseInterAction {
	float durationToBlack
	float durationKeepBlack
	float durationFromBlack
	string textMapID
	bool useWhiteScreen
	bool useTextFade
	vuint dialogID
	bool disableResAsyncLoad
}
class MoleMole.Config.ConfigSimpleUIShowInterAction : MoleMole.Config.ConfigBaseInterAction {
	string contextName
	bool isClose
	string param
	string[] multiParam
}
class MoleMole.Config.ConfigOpenBlossomMarkInterAction : MoleMole.Config.ConfigBaseInterAction {
	bool openAll
}
class MoleMole.Config.ConfigSpeechBubbleAction : MoleMole.Config.ConfigBaseInterAction {
	vuint dialogID
	vuint priority
	bool holdOn
	bool tryStop
}
class MoleMole.Config.ConfigEmotionTemplateAction : MoleMole.Config.ConfigBaseInterAction {
	vuint emoTemplateID
}
class MoleMole.Config.ConfigSitOrStandAction : MoleMole.Config.ConfigBaseInterAction {
	bool isSit
	MoleMole.Config.StandDirection standDirection
}
class MoleMole.Config.ConfigPlayEffectAction : MoleMole.Config.ConfigBaseInterAction {
	string effectIndex
	string patternName
	MoleMole.Config.Vector pos
	MoleMole.Config.Vector euler
	MoleMole.Config.Vector scale
	bool isLoop
	bool attachToEntity
	bool isRemove
	vuint attachGadgetId
	vuint attachGadgetSubKey
}
class MoleMole.Config.ConfigTeleportToAction : MoleMole.Config.ConfigBaseInterAction {
	MoleMole.Config.Vector position
	MoleMole.Config.Vector forward
	bool openLongDisTeleport
	bool syncForward
}
class MoleMole.Config.ConfigSetAnimatorAction : MoleMole.Config.ConfigBaseInterAction {
	MoleMole.Config.AnimatorParamType2 paramType
	string paramName
	vint intValue
	float floatValue
	bool boolValue
}
class MoleMole.Config.ConfigPlayPostEffectAction : MoleMole.Config.ConfigBaseInterAction {
	string assetName
	bool isRemove
}
class MoleMole.Config.ConfigPlayFrameFaceAnimationAction : MoleMole.Config.ConfigBaseInterAction {
	string animation
	MoleMole.Config.FrameFaceAnimationPlayType mode
}
class MoleMole.Config.ConfigHideWidgetPet : MoleMole.Config.ConfigBaseInterAction {
	bool isHide
}
class MoleMole.Config.ConfigLocalGadgetOP : MoleMole.Config.ConfigBaseInterAction {
	vuint gadgetId
	vuint subKey
	vint oprCode
	MoleMole.Config.Vector position
	MoleMole.Config.Vector euler
	string gvKey
	float gvValue
	MoleMole.Config.ConfigLocalGadgetMoveOp[] moveDatas
	MoleMole.Config.ConfigLocalGadgetCmd[] cmdList
}
class MoleMole.Config.ConfigLocalGadgetMoveOp {
	MoleMole.Config.Vector targetPos
	float time
	MoleMole.Config.TweenEaseType blendType
}
class MoleMole.Config.ConfigPlayUIEffectAction : MoleMole.Config.ConfigBaseInterAction {
	string uiCameraEffectPath
	string mainCameraEffectPath
	bool isRemove
}
class MoleMole.Config.ConfigChangeNPCMatAction : MoleMole.Config.ConfigBaseInterAction {
	string rendererName
	vint matIndex
	string matPath
}
class MoleMole.Config.ConfigPlayerNPCEnergyTypeAction : MoleMole.Config.ConfigBaseInterAction {
	bool setHeroEngergyType
}
class MoleMole.Config.ConfigBanSelfGlobalValue : MoleMole.Config.ConfigBaseInterAction {
	bool isBan
}
class MoleMole.Config.ConfigSetModelTransform : MoleMole.Config.ConfigBaseInterAction {
	bool isReset
	float groudHight
}
class MoleMole.Config.ConfigSpecialElementViewAction : MoleMole.Config.ConfigBaseInterAction {
	bool isOpen
	MoleMole.Config.ColorVector effectColor
	float effectRange
	string[] noEffectAliasList
}
class MoleMole.Config.ConfigChangeTimeInterAction : MoleMole.Config.ConfigBaseInterAction {
	float toTime
	vuint extraDay
	bool force
	bool useFade
	float fadeSpeed
}
class MoleMole.Config.ConfigSpawnAttachInterAction : MoleMole.Config.ConfigBaseInterAction {
	bool isRemove
	string attachName
}
class MoleMole.Config.ConfigCloseGPUCullingInterAction : MoleMole.Config.ConfigBaseInterAction {
}
class MoleMole.Config.ConfigCameraSplineBasePoint {
	MoleMole.Config.Vector position
	MoleMole.Config.Vector eulerAngle
	float dutch
	float lengthRatio
	float[] sList
	float[] tList
}
class MoleMole.Config.ConfigCameraSplineCatmullPoint : MoleMole.Config.ConfigCameraSplineBasePoint {
}
class MoleMole.Config.ConfigCameraSplineBezierPoint : MoleMole.Config.ConfigCameraSplineBasePoint {
	MoleMole.Config.Vector inControlPoint
	MoleMole.Config.Vector outControlPoint
}
class MoleMole.Config.ConfigCameraSplineBaseTarget {
	MoleMole.Config.Vector position
	float lengthRatio
	float[] sList
	float[] tList
}
class MoleMole.Config.ConfigCameraSplineCatmullTarget : MoleMole.Config.ConfigCameraSplineBaseTarget {
}
class MoleMole.Config.ConfigCameraSplineBezierTarget : MoleMole.Config.ConfigCameraSplineBaseTarget {
	MoleMole.Config.Vector inControlPoint
	MoleMole.Config.Vector outControlPoint
}
class MoleMole.Config.ConfigCameraSplineBasePath {
	MoleMole.Config.ConfigAnimationCurve posCurve
	float totalLength
}
class MoleMole.Config.ConfigAnimationCurve {
	MoleMole.Config.ConfigKeyframe[] keyframes
}
class MoleMole.Config.ConfigKeyframe {
	float time
	float value
	float inTangent
	float outTangent
}
class MoleMole.Config.ConfigCameraSplineCameraPath : MoleMole.Config.ConfigCameraSplineBasePath {
	MoleMole.Config.ConfigCameraSplineBasePoint[] pathPoints
	MoleMole.Config.ConfigAnimationCurve fovCurve
}
class MoleMole.Config.ConfigCameraSplineTargetPath : MoleMole.Config.ConfigCameraSplineBasePath {
	MoleMole.Config.ConfigCameraSplineBaseTarget[] targets
}
class MoleMole.Config.ConfigLocalGadgetCmd {
	MoleMole.Config.LocalGadgetCmdExeType cmdExeType
}
class MoleMole.Config.ConfigLocalGadgetSetMaterialCmd : MoleMole.Config.ConfigLocalGadgetCmd {
	string rendererName
	string propName
	string propValue
	vint propType
}
class MoleMole.Config.ConfigLCBaseIntee {
	string triggerShapeIn
	float triggerShapeInHeight
	string triggerShapeOut
	float triggerShapeOutHeight
	MoleMole.Config.Vector triggerShapeInOffset
	MoleMole.Config.Vector triggerShapeOutOffset
	string triggerShapeFreeInteraction
	float triggerShapeFreeInteractionHeight
	MoleMole.Config.Vector triggerShapeFreeInteractionOffset
}
class MoleMole.Config.ConfigLCGadgetIntee : MoleMole.Config.ConfigLCBaseIntee {
}
class MoleMole.Config.IndicatorCondition {
}
class MoleMole.Config.IndicatorConditionGadgetState : MoleMole.Config.IndicatorCondition {
	vint fromState
	vint toState
}
class MoleMole.Config.IndicatorConditionAllowInteract : MoleMole.Config.IndicatorCondition {
	bool allowInteract
}
class MoleMole.Config.IndicatorConditionDummyPointDistance : MoleMole.Config.IndicatorCondition {
	MoleMole.Config.TemplateParamString key
	MoleMole.Config.TemplateParamFloat distance
}
class MoleMole.Config.IndicatorConditionAvatarDistance : MoleMole.Config.IndicatorCondition {
	MoleMole.Config.TemplateParamFloat distance
}
class MoleMole.Config.IndicatorConditionKilled : MoleMole.Config.IndicatorCondition {
}
class MoleMole.Config.IndicatorConditionPlayerLevel : MoleMole.Config.IndicatorCondition {
	vuint level
}
class MoleMole.Config.IndicatorConditionSceneTransPointLockState : MoleMole.Config.IndicatorCondition {
	bool unlocked
}
class MoleMole.Config.ConfigLBaseMark {
	vint priority
	MoleMole.Config.ConfigVBaseMark[] views
}
class MoleMole.Config.ConfigLMapMark : MoleMole.Config.ConfigLBaseMark {
}
class MoleMole.Config.ConfigVBaseMark {
	MoleMole.Config.MarkViewType type
	string resPath
}
class MoleMole.Config.ConfigVMapMark : MoleMole.Config.ConfigVBaseMark {
	MoleMole.Config.MarkVisibleType visibleTypeMiniMap
	MoleMole.Config.MarkVisibleType visibleTypeLevelMap
	MoleMole.Config.MarkLayerType layerType
}
class MoleMole.Config.ConfigVCustomMapMark : MoleMole.Config.ConfigVMapMark {
	MoleMole.Config.MarkCustomType customType
}
class MoleMole.Config.ConfigMist {
	vuint id
	vuint[] hideScenePointList
	vuint sortID
	string prefabPath
	MoleMole.Config.Point2D[] mapPosList
	bool needAnim
	bool showUnlockScenePoint
}
class MoleMole.Config.Point2D {
	float x
	float y
}
class MoleMole.Config.ConfigErosionArea : MoleMole.Config.ConfigMist {
	bool isBack
	vuint index
}
class MoleMole.Config.ConfigLevelTagArea : MoleMole.Config.ConfigMist {
}
class MoleMole.Config.ConfigMove {
	MoleMole.Config.ConfigMoveVelocityForce velocityForce
	bool handleCombatTaskImmediately
}
class MoleMole.Config.ConfigMixinDriveMove : MoleMole.Config.ConfigMove {
	bool enable_close_to_ground
	bool follow_reference_system
}
class MoleMole.Config.ConfigMoveVelocityForce {
	bool muteAll
	bool useAll
	MoleMole.Config.VelocityForceType[] includeForces
	MoleMole.Config.VelocityForceType[] excludeForces
}
class MoleMole.Config.ConfigSimpleMove : MoleMole.Config.ConfigMove {
	float constSpeedRatio
	bool followReferenceSystem
}
class MoleMole.Config.ConfigRigidbodyMove : MoleMole.Config.ConfigMove {
	float constSpeedRatio
	bool startCloseToGround
	bool enableCloseToGroundWhenTick
	bool followReferenceSystem
	bool useAniamtorVelocity
	bool enableSyncTransToServer
	bool ignoreEnableRigidbodyDist
}
class MoleMole.Config.ConfigFormulaicMove : MoleMole.Config.ConfigMove {
	MoleMole.Config.UGCTimeControlType timeControl
	MoleMole.Config.UGCFormulaType formulaType
	MoleMole.Config.UGCMoveType moveMode
	float[] offTime
	bool automaticMove
	MoleMole.Config.UGCAxialType polar
	float[] angleSection
	float angleStep
	bool isClockWise
	float angleSpeed
	float[] period
	MoleMole.Config.Vector[] route
}
class MoleMole.Config.ConfigVehicleMove : MoleMole.Config.ConfigMove {
}
class MoleMole.Config.ConfigBoatMove : MoleMole.Config.ConfigVehicleMove {
}
class MoleMole.Config.ConfigSkiffMove : MoleMole.Config.ConfigVehicleMove {
}
class MoleMole.Config.ConfigAnimatorMove : MoleMole.Config.ConfigMove {
	bool initWithGroundHitCheck
	MoleMole.Config.ConfigMoveSmoothedSpeed smoothedSpeed
	bool moveOnGround
	bool moveOnWater
	float moveOnWaterDepth
	MoleMole.Config.ConfigRaycast[] raycasts
	float deepWaterLevel
	MoleMole.Config.FacingMoveType facingMove
	MoleMole.Config.FacingMoveType airFacingMove
	MoleMole.Config.MonsterSizeType monsterSizeType
	MoleMole.Config.PositionModifyState positionModifyState
	map<vuint,MoleMole.Config.PositionModifyState> positionModifyStateMap
	bool destroyRockWhenInit
	float yawSpeedRatio
	float velocityRatio
	string[] launchStates
	string[] landStates
	bool positionModifyExtra
}
class MoleMole.Config.ConfigMoveSmoothedSpeed {
	float maxSpeed
	float accelerationXZ
	float accelerationY
	float zeroingSpeedXZ
	float zeroingSpeedY
}
class MoleMole.Config.ConfigRaycast {
	float raycastLength
	MoleMole.Config.RaycastType raycastType
	string startPoint
}
class MoleMole.Config.ConfigNPCMove : MoleMole.Config.ConfigAnimatorMove {
	bool waterCheck
}
class MoleMole.Config.ConfigPlatformMove : MoleMole.Config.ConfigMove {
	float AvatarTriggerEventDistance
	bool IsMovingWater
	bool calcMoveStateInTick
	MoleMole.Config.ConfigRoute route
	MoleMole.Config.MovePlatformDelayType delayType
}
class MoleMole.Config.ConfigRoute {
	vuint localId
	string name
	MoleMole.Config.RouteType type
	bool isForward
	MoleMole.Config.ConfigWaypoint[] points
	MoleMole.Config.RotType rotType
	MoleMole.Config.RotAngleType rotAngleType
	float arriveRange
}
class MoleMole.Config.ConfigWaypoint {
	MoleMole.Config.Vector pos
	float waitTime
	float moveAngularSpeed
	float waitAngularSpeed
	float moveRotateRound
	float waitRotateRound
	bool stopWaitRotate
	vint speedLevel
	float targetVelocity
	bool hasReachEvent
	float rotAngleMoveSpeed
	float rotAngleWaitSpeed
	bool rotAngleSameStop
	MoleMole.Config.Vector rotRoundReachDir
	vint rotRoundReachRounds
	MoleMole.Config.Vector rotRoundLeaveDir
	vint rotRoundWaitRounds
	bool reachStop
}
class MoleMole.Config.ConfigScenePropAnimatorMove : MoleMole.Config.ConfigMove {
}
class MoleMole.Config.ConfigWindmillMove : MoleMole.Config.ConfigMove {
}
class MoleMole.Config.ConfigBulletMove : MoleMole.Config.ConfigMove {
	float speed
	float maxSpeed
	float minSpeed
	float anglerVelocity
	float acceleration
	float accelerationTime
	bool canBornInWater
	MoleMole.Config.ConfigBulletMoveAngle updateAngle
	float delay
	MoleMole.Config.ConfigMoveStickToGround stickToGround
	bool syncToRemote
	float blockedByMonsterRadius
	bool useDefaultDirWhenOpposite
}
class MoleMole.Config.ConfigMoveStickToGround {
	float maxStepHeight
	float maxSlopeAngle
	float heightToGround
	float flexibleRange
	bool isStickToWater
	bool ignoreBarrier
	MoleMole.Config.UnstickAction unstickWhenDownSlide
	MoleMole.Config.UnstickAction unstickWhenUpSlide
}
class MoleMole.Config.ConfigLinerBulletMove : MoleMole.Config.ConfigBulletMove {
}
class MoleMole.Config.ConfigLinerParabolaBulletMove : MoleMole.Config.ConfigLinerBulletMove {
	float straightRange
	float gravityOfAcceleration
	float airResistance
}
class MoleMole.Config.ConfigAnimationBulletMove : MoleMole.Config.ConfigBulletMove {
}
class MoleMole.Config.ConfigSurroundBulletMove : MoleMole.Config.ConfigBulletMove {
	bool clockwise
	float radius
	bool traceOnYAxis
	bool destroyWhenTargetDie
}
class MoleMole.Config.ConfigPinballBulletMove : MoleMole.Config.ConfigBulletMove {
	float radius
	bool traceOnYAxis
	bool destroyWhenTargetDie
	float randomBackAngleAdded
	float reboundInterval
	float outOfRangeFixCD
}
class MoleMole.Config.ConfigParabolaBulletMove : MoleMole.Config.ConfigBulletMove {
	float angleOffHor
	float gravityOfAcceleration
	MoleMole.Config.ConfigMoveCorrection correction
}
class MoleMole.Config.ConfigFishingAimParabolaBulletMove : MoleMole.Config.ConfigBulletMove {
	float gravity
	float initSpeed
	string globalValueKey
}
class MoleMole.Config.ConfigTrackBulletMove : MoleMole.Config.ConfigBulletMove {
	bool destroyWhenTargetDie
	bool traceOnYAxis
	MoleMole.Config.ConfigWhenNoTarget whenNoTarget
}
class MoleMole.Config.ConfigBoomerangBulletMove : MoleMole.Config.ConfigTrackBulletMove {
	bool initClockwise
	float stickToGroundDuration
}
class MoleMole.Config.ConfigWhenNoTarget {
	MoleMole.Config.ConfigBornType defaultTarget
}
class MoleMole.Config.ConfigDestroyAfterTime : MoleMole.Config.ConfigWhenNoTarget {
	float time
}
class MoleMole.Config.ConfigDestroyByTargetSphere : MoleMole.Config.ConfigWhenNoTarget {
	float radius
	float detectDelay
}
class MoleMole.Config.ConfigItanoCircusBulletMove : MoleMole.Config.ConfigBulletMove {
	float itanoCircusStartAngler
	bool destroyWhenTargetDie
	float guidanceDelay
	bool guidanceSpeedChange
	float guidanceMinAnglerVelocity
	float guidanceDuration
}
class MoleMole.Config.ConfigMultiBulletMove : MoleMole.Config.ConfigBulletMove {
}
class MoleMole.Config.ConfigFollowMove : MoleMole.Config.ConfigMove {
	MoleMole.Config.FollowTarget target
	vuint groupTargetInstanceId
	MoleMole.Config.ConfigMoveFollowTarget followTargetEx
	string attachPoint
	bool followRotation
	MoleMole.Config.Vector offset
	MoleMole.Config.Vector forward
	bool followOwnerInvisible
	float fixedY
	MoleMole.Config.ConfigIgnoreCollision ignoreCollision
	MoleMole.Config.ConfigMoveDisableCollision moveDisableCollision
	MoleMole.Config.ConfigMoveAudio moveAudio
	bool syncTransToServer
	float syncInterval
	bool handleInLateTick
	float followPositionSmoothedDampTime
	float followRotationSmoothedDampTime
	bool followInFixedUpdate
	float fixedFollowPosMaxSpeed
	float fixedFollowRotMaxSpeed
}
class MoleMole.Config.ConfigIgnoreCollision {
	MoleMole.Config.ConfigEntityCollider[] selfColliders
	MoleMole.Config.ConfigEntityCollider[] targetColliders
}
class MoleMole.Config.ConfigEntityCollider {
	MoleMole.Config.EntityColliderType type
}
class MoleMole.Config.ConfigMoveDisableCollision {
	MoleMole.Config.ConfigEntityCollider[] selfColliders
	float delayEnableTime
}
class MoleMole.Config.ConfigMoveAudio {
	MoleMole.Config.ConfigWwiseString startEvent
	MoleMole.Config.ConfigWwiseString stopEvent
	MoleMole.Config.ConfigWwiseString moveStateParam
	MoleMole.Config.ConfigWwiseString fallOnGroundEvent
}
class MoleMole.Config.ConfigMoveCorrection {
}
class MoleMole.Config.ConfigParabolaBulletMoveCorrection : MoleMole.Config.ConfigMoveCorrection {
	float deviation
	float fixAngleOfVer
	float minSpeed
	float maxSpeed
}
class MoleMole.Config.ConfigBulletMoveAngle {
}
class MoleMole.Config.ConfigBulletMoveAngleByVelocity : MoleMole.Config.ConfigBulletMoveAngle {
	float traceLerpCoef
	bool isSmoothRotation
}
class MoleMole.Config.ConfigBulletMoveAngleRotating : MoleMole.Config.ConfigBulletMoveAngle {
	MoleMole.Config.Vector angularVelocity
}
class MoleMole.Config.ConfigMoveFollowTarget {
}
class MoleMole.Config.ConfigMoveFollowNpc : MoleMole.Config.ConfigMoveFollowTarget {
	vuint configId
	vuint questId
}
class MoleMole.Config.ConfigMusicCondition {
	vint id
}
class MoleMole.Config.ConfigMusicTrueCondition : MoleMole.Config.ConfigMusicCondition {
}
class MoleMole.Config.ConfigMusicNegativeCondition : MoleMole.Config.ConfigMusicCondition {
	vint innerId
}
class MoleMole.Config.ConfigMusicBinaryCondition : MoleMole.Config.ConfigMusicCondition {
	vint lhsId
	vint rhsId
}
class MoleMole.Config.ConfigMusicConjunctiveCondition : MoleMole.Config.ConfigMusicBinaryCondition {
}
class MoleMole.Config.ConfigMusicDisjunctiveCondition : MoleMole.Config.ConfigMusicBinaryCondition {
}
class MoleMole.Config.ConfigMusicParameterCondition : MoleMole.Config.ConfigMusicCondition {
	MoleMole.Config.MusicGameParam gameParam
}
class MoleMole.Config.ConfigMusicInt32Condition : MoleMole.Config.ConfigMusicParameterCondition {
	vint value
}
class MoleMole.Config.ConfigMusicInt32EqualityCondition : MoleMole.Config.ConfigMusicInt32Condition {
}
class MoleMole.Config.ConfigMusicInt32InequalityCondition : MoleMole.Config.ConfigMusicInt32Condition {
}
class MoleMole.Config.ConfigMusicInt32GreaterThanCondition : MoleMole.Config.ConfigMusicInt32Condition {
}
class MoleMole.Config.ConfigMusicInt32LessThanCondition : MoleMole.Config.ConfigMusicInt32Condition {
}
class MoleMole.Config.ConfigMusicInt32NoGreaterThanCondition : MoleMole.Config.ConfigMusicInt32Condition {
}
class MoleMole.Config.ConfigMusicInt32NoLessThanCondition : MoleMole.Config.ConfigMusicInt32Condition {
}
class MoleMole.Config.ConfigMusicUInt32Condition : MoleMole.Config.ConfigMusicParameterCondition {
	vuint value
}
class MoleMole.Config.ConfigMusicUInt32EqualityCondition : MoleMole.Config.ConfigMusicUInt32Condition {
}
class MoleMole.Config.ConfigMusicUInt32InequalityCondition : MoleMole.Config.ConfigMusicUInt32Condition {
}
class MoleMole.Config.ConfigMusicUInt32GreaterThanCondition : MoleMole.Config.ConfigMusicUInt32Condition {
}
class MoleMole.Config.ConfigMusicUInt32LessThanCondition : MoleMole.Config.ConfigMusicUInt32Condition {
}
class MoleMole.Config.ConfigMusicUInt32NoGreaterThanCondition : MoleMole.Config.ConfigMusicUInt32Condition {
}
class MoleMole.Config.ConfigMusicUInt32NoLessThanCondition : MoleMole.Config.ConfigMusicUInt32Condition {
}
class MoleMole.Config.ConfigMusicUInt32MultiCondition : MoleMole.Config.ConfigMusicParameterCondition {
	vuint[] values
}
class MoleMole.Config.ConfigMusicSingleCondition : MoleMole.Config.ConfigMusicParameterCondition {
	float value
}
class MoleMole.Config.ConfigMusicSingleEqualityCondition : MoleMole.Config.ConfigMusicSingleCondition {
}
class MoleMole.Config.ConfigMusicSingleInequalityCondition : MoleMole.Config.ConfigMusicSingleCondition {
}
class MoleMole.Config.ConfigMusicSingleGreaterThanCondition : MoleMole.Config.ConfigMusicSingleCondition {
}
class MoleMole.Config.ConfigMusicSingleLessThanCondition : MoleMole.Config.ConfigMusicSingleCondition {
}
class MoleMole.Config.ConfigMusicSingleNoGreaterThanCondition : MoleMole.Config.ConfigMusicSingleCondition {
}
class MoleMole.Config.ConfigMusicSingleNoLessThanCondition : MoleMole.Config.ConfigMusicSingleCondition {
}
class MoleMole.Config.ConfigMusicDoubleCondition : MoleMole.Config.ConfigMusicParameterCondition {
	double value
}
class MoleMole.Config.ConfigMusicDoubleEqualityCondition : MoleMole.Config.ConfigMusicDoubleCondition {
}
class MoleMole.Config.ConfigMusicDoubleInequalityCondition : MoleMole.Config.ConfigMusicDoubleCondition {
}
class MoleMole.Config.ConfigMusicDoubleGreaterThanCondition : MoleMole.Config.ConfigMusicDoubleCondition {
}
class MoleMole.Config.ConfigMusicDoubleLessThanCondition : MoleMole.Config.ConfigMusicDoubleCondition {
}
class MoleMole.Config.ConfigMusicDoubleNoGreaterThanCondition : MoleMole.Config.ConfigMusicDoubleCondition {
}
class MoleMole.Config.ConfigMusicDoubleNoLessThanCondition : MoleMole.Config.ConfigMusicDoubleCondition {
}
class MoleMole.Config.ConfigMusicBooleanCondition : MoleMole.Config.ConfigMusicParameterCondition {
	bool value
}
class MoleMole.Config.ConfigMusicStringCondition : MoleMole.Config.ConfigMusicParameterCondition {
	string value
}
class MoleMole.Config.ConfigMusicStringEqualityCondition : MoleMole.Config.ConfigMusicStringCondition {
}
class MoleMole.Config.ConfigMusicStringContainmentCondition : MoleMole.Config.ConfigMusicStringCondition {
}
class MoleMole.Config.ConfigMusicUInt32ListCondition : MoleMole.Config.ConfigMusicParameterCondition {
}
class MoleMole.Config.ConfigMusicUInt32ListEmptinessCondition : MoleMole.Config.ConfigMusicUInt32ListCondition {
	bool value
}
class MoleMole.Config.ConfigMusicUInt32ListMemberCondition : MoleMole.Config.ConfigMusicUInt32ListCondition {
	vuint value
}
class MoleMole.Config.ConfigMusicUInt32ListPresenceCondition : MoleMole.Config.ConfigMusicUInt32ListMemberCondition {
}
class MoleMole.Config.ConfigMusicUInt32ListAbsenceCondition : MoleMole.Config.ConfigMusicUInt32ListMemberCondition {
}
class MoleMole.Config.ConfigMusicUInt32ListMultiMemberCondition : MoleMole.Config.ConfigMusicUInt32ListCondition {
	vuint[] values
}
class MoleMole.Config.ConfigMusicUInt32ListAllPresenceCondition : MoleMole.Config.ConfigMusicUInt32ListMultiMemberCondition {
}
class MoleMole.Config.ConfigMusicUInt32ListNonePresenceCondition : MoleMole.Config.ConfigMusicUInt32ListMultiMemberCondition {
}
class MoleMole.Config.ConfigMusicUInt32ListPartialPresenceCondition : MoleMole.Config.ConfigMusicUInt32ListMultiMemberCondition {
}
class MoleMole.Config.ConfigMusicStimulusHandler {
	MoleMole.Config.MusicStimulus stimulus
	MoleMole.Config.ConfigMusicTransitions transitions
}
class MoleMole.Config.ConfigMusicTransitions {
	MoleMole.Config.ConfigMusicShifter[] shifters
}
class MoleMole.Config.ConfigMusicShifter {
	vint targetSongId
	vint rootConditionId
}
class MoleMole.Config.ConfigMusicParameterizedStimulusHandler : MoleMole.Config.ConfigMusicStimulusHandler {
}
class MoleMole.Config.ConfigMusicIntStimulusHandler : MoleMole.Config.ConfigMusicParameterizedStimulusHandler {
	vint intParam
}
class MoleMole.Config.ConfigMusicUIntStimulusHandler : MoleMole.Config.ConfigMusicParameterizedStimulusHandler {
	vuint uintParam
}
class MoleMole.Config.ConfigMusicFloatStimulusHandler : MoleMole.Config.ConfigMusicParameterizedStimulusHandler {
	float floatParam
}
class MoleMole.Config.ConfigMusicStringStimulusHandler : MoleMole.Config.ConfigMusicParameterizedStimulusHandler {
	string stringParam
}
class MoleMole.Config.ConfigMusicMultiValueParameterizedStimulusHandler : MoleMole.Config.ConfigMusicParameterizedStimulusHandler {
}
class MoleMole.Config.ConfigMusicUIntMultiValueStimulusHandler : MoleMole.Config.ConfigMusicMultiValueParameterizedStimulusHandler {
	vuint[] uintParams
}
class MoleMole.Config.ConfigMusicUIntPresenceStimulusHandler : MoleMole.Config.ConfigMusicUIntMultiValueStimulusHandler {
}
class MoleMole.Config.ConfigMusicUIntAbsenceStimulusHandler : MoleMole.Config.ConfigMusicUIntMultiValueStimulusHandler {
}
class MoleMole.Config.ConfigMusicStringMultiValueStimulusHandler : MoleMole.Config.ConfigMusicMultiValueParameterizedStimulusHandler {
	string[] stringParams
}
class MoleMole.Config.ConfigMusicStringPresenceStimulusHandler : MoleMole.Config.ConfigMusicStringMultiValueStimulusHandler {
}
class MoleMole.Config.ConfigMusicStringAbsenceStimulusHandler : MoleMole.Config.ConfigMusicStringMultiValueStimulusHandler {
}
class MoleMole.Config.ConfigLevelNpcBornPos {
	vuint sceneId
	MoleMole.Config.ConfigNpcBornPos[] bornPosList
}
class MoleMole.Config.ConfigNpcBornPos {
	vuint id
	vuint configId
	vuint roomId
	MoleMole.Config.Vector pos
	MoleMole.Config.Vector rot
	vuint groupId
	vuint suiteId
	vuint[] suiteIdList
	MoleMole.Config.NpcCommonCond[][] preConditions
}
class MoleMole.Config.ConfigLevelNpcBornPosNoGroup : MoleMole.Config.ConfigLevelNpcBornPos {
}
class MoleMole.Config.ConfigJudgeNodeBase {
	vuint nodeID
}
class MoleMole.Config.ConfigJudgeActivityPhotoAvatarInCameraView : MoleMole.Config.ConfigJudgeNodeBase {
}
class MoleMole.Config.ConfigJudgeGroupEntityInView : MoleMole.Config.ConfigJudgeNodeBase {
	MoleMole.Config.ConfigJudgeGroupEntity[] groupEntityList
}
class MoleMole.Config.ConfigJudgeGroupEntity {
	MoleMole.Config.GroupEntityType groupEntityType
	vuint groupID
	vuint configID
}
class MoleMole.Config.ConfigJudgeCurrentTime : MoleMole.Config.ConfigJudgeNodeBase {
	float startTime
	float endTime
}
class MoleMole.Config.ConfigJudgeCrowdInViewByCrowdTypeID : MoleMole.Config.ConfigJudgeNodeBase {
	vuint[] scanCrowdTypeList
	float targetYoffset
	MoleMole.Config.ScanAreaType scanAreaType
	float widthRatio
	float heightRatio
	float scanRangeNearZ
	float scanRangeFarZ
	bool scanEnableRayCast
}
class MoleMole.Config.ConfigJudgeMoonOrSunInCamera : MoleMole.Config.ConfigJudgeNodeBase {
}
class MoleMole.Config.ConfigJudgeEntityInViewByEntityConfigID : MoleMole.Config.ConfigJudgeNodeBase {
	MoleMole.Config.ConfigJudgeEntityInViewData[] scanEntityList
	MoleMole.Config.ScanAreaType scanAreaType
	float widthRatio
	float heightRatio
	float scanRangeNearZ
	float scanRangeFarZ
	bool scanEnableRayCast
	bool checkEntityActive
}
class MoleMole.Config.ConfigJudgeAnimState : MoleMole.Config.ConfigJudgeEntityInViewByEntityConfigID {
	string[] animState
}
class MoleMole.Config.ConfigJudgeGrassState : MoleMole.Config.ConfigJudgeEntityInViewByEntityConfigID {
	MoleMole.Config.EGrassState grassState
}
class MoleMole.Config.ConfigJudgeEntityInViewData {
	vuint entityConfigID
	vuint[] scannableStates
}
class MoleMole.Config.ConfigJudgeAvatarElementType : MoleMole.Config.ConfigJudgeNodeBase {
	MoleMole.Config.ElementType elementType
}
class MoleMole.Config.ConfigJudgeAvatarWeaponType : MoleMole.Config.ConfigJudgeNodeBase {
	string weaponType
}
class MoleMole.Config.ConfigJudgeAvatarFaceCamera : MoleMole.Config.ConfigJudgeNodeBase {
	vuint faceDegree
}
class MoleMole.Config.ConfigJudgeAvatarFaceTarget2D : MoleMole.Config.ConfigJudgeNodeBase {
	MoleMole.Config.ConfigJudgeGroupEntity[] groupEntityList
	MoleMole.Config.Vector customDirection
}
class MoleMole.Config.ConfigJudgeAvatarAnimatorState : MoleMole.Config.ConfigJudgeNodeBase {
	vuint[] configIDs
}
class MoleMole.Config.ConfigJudgeGroupEntityDirectionHasBlock : MoleMole.Config.ConfigJudgeNodeBase {
	MoleMole.Config.ConfigJudgeGroupEntity[] groupEntityList
	float detectDistance
}
class MoleMole.Config.ConfigJudgeAvatarConfigID : MoleMole.Config.ConfigJudgeNodeBase {
	vuint[] configIDs
}
class MoleMole.Config.ConfigJudgeNodeContainer : MoleMole.Config.ConfigJudgeNodeBase {
	MoleMole.Config.ConfigJudgeNodeBase[] subNodes
	MoleMole.Config.LogicType subNodeLogicComb
}
class MoleMole.Config.ConfigJudgeNodeContainerWithGroupEntityInfo : MoleMole.Config.ConfigJudgeNodeContainer {
	MoleMole.Config.ConfigJudgeGroupEntity groupEntity
}
class MoleMole.Config.ConfigQTEStepBaseCond {
	MoleMole.Config.QTEStepCondType condType
}
class MoleMole.Config.ConfigQTEStepPowerBarCond : MoleMole.Config.ConfigQTEStepBaseCond {
	MoleMole.Config.OrderingType orderType
	vuint value
}
class MoleMole.Config.ConfigQTEButtonCountDownValueCond : MoleMole.Config.ConfigQTEStepBaseCond {
	MoleMole.Config.OrderingType orderType
	float value
}
class MoleMole.Config.ConfigQTEStepBaseAction {
	MoleMole.Config.QTEStepActionType actionType
	float duration
}
class MoleMole.Config.ConfigQTEStepPowerBarAction : MoleMole.Config.ConfigQTEStepBaseAction {
	vint changeValue
}
class MoleMole.Config.ConfigQTEStepPlayAudioAction : MoleMole.Config.ConfigQTEStepBaseAction {
	string audioName
}
class MoleMole.Config.ConfigQTEStepCutsceneFailedBlackScreenAction : MoleMole.Config.ConfigQTEStepBaseAction {
	vint restartSavePointId
	vuint failedSubQuestId
	string textmapId
	bool showImmediately
}
class MoleMole.Config.ConfigQTEStepCutsceneJumpPointAction : MoleMole.Config.ConfigQTEStepBaseAction {
	vint pointId
}
class MoleMole.Config.ConfigQTEStepBaseInterAction : MoleMole.Config.ConfigQTEStepBaseAction {
	MoleMole.Config.ConfigBaseInterAction interAction
}
class MoleMole.Config.ConfigQTEStepCameraMoveAction : MoleMole.Config.ConfigQTEStepBaseInterAction {
	bool exitReturnBack
}
class MoleMole.Config.ConfigQTEStepBaseComponent {
}
class MoleMole.Config.ConfigQTEStepButtonComponent : MoleMole.Config.ConfigQTEStepBaseComponent {
	vuint positionId
	MoleMole.Config.QTEStepButtonInputType inputEvent
	MoleMole.Config.ConfigQTEStepCondActionGroup[] clickTrigger
	MoleMole.Config.QTEStepButtonStyleType style
	float countDownTime
	MoleMole.Config.ConfigQTEStepCondActionGroup[] countDownChangeTrigger
	MoleMole.Config.ConfigQTEStepCondActionGroup[] slideDirTrigger
	MoleMole.Config.QTEStepButtonSlideDirectType slideDir
	float slideAngle
	float slideTouchDis
	float slideJoypadDis
}
class MoleMole.Config.ConfigQTEStepCondActionGroup {
	MoleMole.Config.ConfigQTEStepCondGroup condGroup
	MoleMole.Config.ConfigQTEStepBaseAction[] actions
}
class MoleMole.Config.ConfigQTEStepCondGroup {
	MoleMole.Config.LogicType condCombType
	MoleMole.Config.ConfigQTEStepBaseCond[] stepCondList
}
class MoleMole.Config.ConfigQTEStepPowerBarComponent : MoleMole.Config.ConfigQTEStepBaseComponent {
	vuint initValue
	vuint maxValue
	float autoChangeValuePerSecond
	float noInputAutoChangeInterval
	MoleMole.Config.ConfigQTEStepCondActionGroup[] valueChangeTrigger
}
class MoleMole.Config.ConfigRecordActorBase {
	MoleMole.Config.Vector pos
	MoleMole.Config.Vector rot
	MoleMole.Config.Vector scale
	vuint serialID
}
class MoleMole.Config.ConfigRecordEntity : MoleMole.Config.ConfigRecordActorBase {
	MoleMole.Config.ConfigRecordAnimatorInfo animatorInfo
	MoleMole.Config.ConfigRecordRendererParameters rendererParams
	MoleMole.Config.ConfigRecordMaterialParameters materialParams
	MoleMole.Config.ConfigRecordRagdollParameters ragdollParams
	MoleMole.Config.ConfigRecordEmoParameters emoParams
}
class MoleMole.Config.ConfigRecordAnimatorInfo {
	MoleMole.Config.AnimatorParameters animatorParameter
	MoleMole.Config.AnimatorRecordState currentState
	MoleMole.Config.AnimatorRecordState nextState
	MoleMole.Config.AnimatorRecordTransitionInfo transitionInfo
}
class MoleMole.Config.AnimatorParameters {
	MoleMole.Config.AnimatorFloat[] floats
	MoleMole.Config.AnimatorInt[] ints
	MoleMole.Config.AnimatorBool[] bools
	MoleMole.Config.AnimatorTrigger[] triggers
}
class MoleMole.Config.AnimatorFloat {
	string name
	float value
}
class MoleMole.Config.AnimatorInt {
	string name
	vuint value
}
class MoleMole.Config.AnimatorBool {
	string name
	bool value
}
class MoleMole.Config.AnimatorTrigger {
	vuint id
	bool isSet
}
class MoleMole.Config.AnimatorRecordState {
	vuint shortNameHash
	float stateLength
	float normalizedTime
}
class MoleMole.Config.AnimatorRecordTransitionInfo {
	float transitionDuration
	float normalizedTransitionTime
	vuint durationUnit
}
class MoleMole.Config.ConfigRecordRendererParameters {
	MoleMole.Config.RecordRendererGlobalParameters globalParameter
	MoleMole.Config.RecordOverrideTexture[] textures
}
class MoleMole.Config.RecordRendererGlobalParameters {
	MoleMole.Config.RendererFloat[] floats
}
class MoleMole.Config.RendererFloat {
	string name
	float value
}
class MoleMole.Config.RecordOverrideTexture {
	string name
	string value
}
class MoleMole.Config.ConfigRecordMaterialParameters {
	vuint materialType
	string[] textureNames
	MoleMole.Config.MaterialFloat[] floats
}
class MoleMole.Config.MaterialFloat {
	string name
	float value
}
class MoleMole.Config.ConfigRecordRagdollParameters {
	vuint prefabHash
	MoleMole.Config.Vector velocityOnRoot
	MoleMole.Config.Vector explosionForce
}
class MoleMole.Config.ConfigRecordEmoParameters {
	MoleMole.Config.Vector[] eyeInfo
	MoleMole.Config.ConfigRecordEmoFunc[] emoFuncs
}
class MoleMole.Config.ConfigRecordEmoFunc {
	MoleMole.Config.EmoRecordTypeEnum type
	bool recordBool
	float recordFloat
	string[] stringArrays
	vuint[] ulongs
}
class MoleMole.Config.ConfigRecordEffect : MoleMole.Config.ConfigRecordActorBase {
	MoleMole.Config.ConfigRecordAnimatorInfo animatorInfo
	MoleMole.Config.ConfigRecordRendererParameters rendererParams
	MoleMole.Config.ConfigRecordMaterialParameters materialParams
}
class MoleMole.Config.ConfigRegionalPlayBase {
	MoleMole.Config.RegionalPlayType playType
	vuint bindScene
	string[] abilityGroupNameList
	bool isTeam
	MoleMole.Config.ConfigRegionalPlayVarData[] varList
}
class MoleMole.Config.ConfigRegionalPlayVarData {
	MoleMole.Config.RegionalPlayVarType varType
	float initValue
}
class MoleMole.Config.ConfigRegionalPlayMichiaeMatsuri : MoleMole.Config.ConfigRegionalPlayBase {
	string darkPressureSGV
	string crystalEnergySGV
	vuint offeringID
	string crystalLevelSGV
}
class MoleMole.Config.ConfigRegionalPlayLightStone : MoleMole.Config.ConfigRegionalPlayBase {
	string energySGV
	string levelSGV
}
class MoleMole.Config.ConfigScenePoint {
	MoleMole.Config.ScenePointType type
	vuint gadgetId
	vuint areaId
	MoleMole.Config.Vector pos
	MoleMole.Config.Vector rot
	MoleMole.Config.Vector tranPos
	MoleMole.Config.Vector tranRot
	bool unlocked
	string alias
	bool groupLimit
	bool isModelHidden
}
class MoleMole.Config.SceneTransPoint : MoleMole.Config.ConfigScenePoint {
	vuint maxSpringVolume
	vuint[] cutsceneList
	vuint npcId
	bool isForbidAvatarRevive
	bool isForbidAvatarAutoUseSpring
	MoleMole.Config.PointMapVisibility mapVisibility
	bool showOnLockedArea
	bool disableInteraction
	vuint exploreRatio
}
class MoleMole.Config.DungeonEntry : MoleMole.Config.SceneTransPoint {
	vuint[] dungeonIds
	MoleMole.Config.DungeonQuestCondition dungeonQuestConditionList
	MoleMole.Config.Vector size
	vuint worktopGroupId
	string titleTextID
	vint showLevel
	vuint[] dungeonRandomList
	MoleMole.Config.DungeonEntryType dungeonEntryType
	bool forbidSimpleUnlock
	bool fireFieldEvent
	vuint[] dungeonRosterList
	bool removeEntityIfLocked
}
class MoleMole.Config.DungeonQuestCondition {
	vuint dungeonId
	vuint[] mainQuestIdList
}
class MoleMole.Config.VirtualTransPoint : MoleMole.Config.SceneTransPoint {
	string markIconTypeName
}
class MoleMole.Config.DungeonExit : MoleMole.Config.ConfigScenePoint {
	vuint entryPointId
}
class MoleMole.Config.DungeonWayPoint : MoleMole.Config.ConfigScenePoint {
	MoleMole.Config.Vector size
	bool isBoss
	bool isActive
	vuint[] groupIds
	bool disableClientTrigger
}
class MoleMole.Config.DungeonQuitPoint : MoleMole.Config.ConfigScenePoint {
	MoleMole.Config.Vector size
}
class MoleMole.Config.DungeonRewardPoint : MoleMole.Config.ConfigScenePoint {
	bool isActive
	MoleMole.Config.Vector[] dropPointList
}
class MoleMole.Config.PersonalSceneJumpPoint : MoleMole.Config.ConfigScenePoint {
	vuint tranSceneId
	string titleTextID
	MoleMole.Config.Vector triggerSize
	float open_time
	float close_time
	bool isHomeworldDoor
}
class MoleMole.Config.SceneBuildingPoint : MoleMole.Config.ConfigScenePoint {
	MoleMole.Config.SceneBuildingType buildingType
	vuint fogId
	bool showOnLockedArea
	bool needSpecificTransPoint
	vuint specificTransPointId
}
class MoleMole.Config.DungeonSlipRevivePoint : MoleMole.Config.ConfigScenePoint {
	MoleMole.Config.Vector size
	bool isActive
	vuint[] groupIds
	bool disableClientTrigger
}
class MoleMole.Config.SceneVehicleSummonPoint : MoleMole.Config.ConfigScenePoint {
	MoleMole.Config.VehicleType vehicleType
	vuint vehicleGadgetId
	MoleMole.Config.Vector[] bornPointList
	MoleMole.Config.Vector[] bornRotateList
	float vehicleRadius
	string titleTextID
	MoleMole.Config.SceneVehicleSummonPointMapMarkType mapMarkType
}
class MoleMole.Config.ConfigForceField : MoleMole.Config.ConfigScenePoint {
	string[] colliderWhiteList
	string[] colliderBlackList
}
class MoleMole.Config.ConfigConstForceField : MoleMole.Config.ConfigForceField {
	float velocity
}
class MoleMole.Config.ConfigAirflowField : MoleMole.Config.ConfigConstForceField {
	float scale
	string stayEffect
	string enterEffect
	bool autoFly
	bool forceHor
}
class MoleMole.Config.ConfigFireGrassAirflowField : MoleMole.Config.ConfigAirflowField {
	bool enable
	vuint triggerNum
	float height
	float heightSpeed
}
class MoleMole.Config.ConfigSpeedupField : MoleMole.Config.ConfigConstForceField {
	float attenuation
	bool singleDir
	bool triggerVehicle
	float stopVelocity
	float vehicleTargetFOV
	float vehicleTargetFOVDuration
	vuint vehicleTargetFOVPriority
	float vehicleFOVEnterSpeed
	float vehicleFOVExitSpeed
}
class MoleMole.Config.ConfigCannonField : MoleMole.Config.ConfigSpeedupField {
}
class MoleMole.Config.ConfigDirectedForceField : MoleMole.Config.ConfigConstForceField {
}
class MoleMole.Config.ConfigLightCore : MoleMole.Config.ConfigConstForceField {
	string triggerName
	string coreTriggerName
	float maxAbsorbTime
	float attenuation
	float cd
}
class MoleMole.Config.ConfigRiseField : MoleMole.Config.ConfigForceField {
	float cdmin
	float cdmax
	float vmin
	float vmax
	float hmin
	float hmax
	float attenuation
	MoleMole.Config.Vector box
	MoleMole.Config.ConfigBaseShape shape
}
class MoleMole.Config.ConfigLocalEntity : MoleMole.Config.ConfigScenePoint {
	float checkDist
	bool withGO
}
class MoleMole.Config.ConfigLocalTrigger : MoleMole.Config.ConfigLocalEntity {
	MoleMole.Config.TriggerFlag triggerFlag
	MoleMole.Config.ConfigBaseShape shape
	vint checkCount
	float triggerInterval
	MoleMole.Config.Vector vectorParam
	float floatParam
	string stringParam
}
class MoleMole.Config.ConfigWindmill : MoleMole.Config.ConfigLocalEntity {
}
class MoleMole.Config.ConfigLocalInteractEntity : MoleMole.Config.ConfigLocalEntity {
}
class MoleMole.Config.ConfigFishpondScenePoint : MoleMole.Config.ConfigLocalEntity {
	vuint maxFishCount
	MoleMole.Config.ConfigHomeCommonPos[] fishBornPosList
}
class MoleMole.Config.ConfigLoadingDoor : MoleMole.Config.ConfigScenePoint {
	vuint room1
	vuint room2
}
class MoleMole.Config.ConfigBaseShape {
	bool useHeight
	float height
	MoleMole.Config.HeightPosType heightType
}
class MoleMole.Config.ConfigShapeCircle : MoleMole.Config.ConfigBaseShape {
	float radius
}
class MoleMole.Config.ConfigShapeRect : MoleMole.Config.ConfigBaseShape {
	MoleMole.Config.CenterPosType centerType
	float width
	float length
}
class MoleMole.Config.ConfigShapeSector : MoleMole.Config.ConfigBaseShape {
	float radius
	float fullDegree
}
class MoleMole.Config.ConfigShapePolygon : MoleMole.Config.ConfigBaseShape {
	string polygonConfigPath
}
class MoleMole.Config.ConfigShapeSphere : MoleMole.Config.ConfigBaseShape {
	float radius
}
class MoleMole.Config.ConfigShapeCube : MoleMole.Config.ConfigBaseShape {
	float width
	float length
}
class MoleMole.Config.TemplateParam {
	string param
}
class MoleMole.Config.TemplateParamFloat : MoleMole.Config.TemplateParam {
	float originValue
}
class MoleMole.Config.TemplateParamInt32 : MoleMole.Config.TemplateParam {
	vint originValue
}
class MoleMole.Config.TemplateParamString : MoleMole.Config.TemplateParam {
	string originValue
}
class MoleMole.Config.ConfigSkin {
}
class MoleMole.Config.ConfigMonsterSkin : MoleMole.Config.ConfigSkin {
	MoleMole.Config.SkinColor[] skinColors
}
class MoleMole.Config.SkinColor {
	string renderer
	vint index
	vint channel
	string color
}
class MoleMole.Config.ConfigBaseStateIDInfo {
	vint priority
}
class MoleMole.Config.ConfigNormalStateIDInfo : MoleMole.Config.ConfigBaseStateIDInfo {
	map<string,string[]> animatorStates
	MoleMole.Config.MoveType moveType
	bool combatMoveOnWater
	bool canDoSkill
	float canDoSkillStart
	float canDoSkillEnd
	bool canSyncMove
	bool cullingModelAlwaysAnimate
	float addEndure
	float massRatio
	string[] resetAnimatorTriggerOnEnter
	string[] resetAnimatorTriggerOnExit
	MoleMole.Config.ConfigAnimatorBoolean[] setAnimatorBoolean
	MoleMole.Config.ConfigAnimatorFloat[] setAnimatorFloat
	bool enableRagDoll
	bool needFaceToAnimParam
	bool enableCCD
	bool handleAnimatorStateImmediately
}
class MoleMole.Config.ConfigAnimatorBoolean {
	string name
	float normalizeStart
	float normalizeEnd
}
class MoleMole.Config.ConfigAnimatorFloat {
	string name
	float normalizeStart
	float normalizeEnd
	float value
}
class MoleMole.Config.ConfigAvatarStateIDInfo : MoleMole.Config.ConfigNormalStateIDInfo {
	MoleMole.Config.StateCameraType cameraType
	MoleMole.Config.ConfigStateCameraParam cameraParam
	MoleMole.Config.ConfigCanChangeAvatar[] canChangeAvatar
	bool canSupportChange
	MoleMole.Config.ActionPanelState actionPanelState
	MoleMole.Config.ConfigEquipReattach[] equipReattach
	float jumpCancelStart
	float jumpCancelEnd
	float sprintCancelStart
	float sprintCancelEnd
	float flyCancelStart
	float flyCancelEnd
	string animatorTriggerOnLanded
	bool battouOnStart
	float battouOnStartNormalizedTime
	bool sheatheOnStart
	bool sheatheOnEnd
	bool ignorePreSheath
	MoleMole.Config.ConfigStateSubEquip subEquipConfig
}
class MoleMole.Config.ConfigCanChangeAvatar {
	float normalizeStart
	float normalizeEnd
}
class MoleMole.Config.ConfigEquipReattach {
	string equip
	string targetPoint
	float normalizeStart
	float normalizeEnd
}
class MoleMole.Config.ConfigStateSubEquip {
	bool battouAllSubOnStart
	bool sheatheAllSubOnStart
	bool sheatheAllSubOnEnd
	string[] battouSubOnStart
	string[] sheatheSubOnStart
	string[] sheatheSubOnEnd
	MoleMole.Config.ConfigEquipReattach[] subEquipReattach
}
class MoleMole.Config.ConfigMonsterStateIDInfo : MoleMole.Config.ConfigNormalStateIDInfo {
	bool enableBoneFollowMove
	bool canSteer
	bool autoSteer
	bool followAnimRotation
	float gravityAdjustScale
	bool forceSetAirMove
	bool remoteForceCloseAirMove
	bool remoteForceUseAnimatorVel
	MoleMole.Config.BlendMoveType blendMove
	float blendSmoothSpeed
	bool airMoveFollowAnimation
}
class MoleMole.Config.ConfigNpcStateIDInfo : MoleMole.Config.ConfigNormalStateIDInfo {
	bool canBeInter
}
class MoleMole.Config.ConfigNormalStateLayer : MoleMole.Config.ConfigBaseStateLayer {
	map<string,MoleMole.Config.ConfigNormalStateIDInfo> stateIDs
}
class MoleMole.Config.ConfigTalentMixin {
}
class MoleMole.Config.AddAbility : MoleMole.Config.ConfigTalentMixin {
	string abilityName
}
class MoleMole.Config.ModifyAbility : MoleMole.Config.ConfigTalentMixin {
	string abilityName
	string paramSpecial
	MoleMole.Config.DynamicArgument paramDelta
	MoleMole.Config.DynamicArgument paramRatio
}
class MoleMole.Config.UnlockTalentParam : MoleMole.Config.ConfigTalentMixin {
	string abilityName
	string talentParam
}
class MoleMole.Config.UnlockControllerConditions : MoleMole.Config.ConfigTalentMixin {
	string conditionName
}
class MoleMole.Config.ModifySkillCD : MoleMole.Config.ConfigTalentMixin {
	vuint skillID
	float cdDelta
	float cdRatio
}
class MoleMole.Config.ModifySkillCost : MoleMole.Config.ConfigTalentMixin {
	vuint skillID
	float costDelta
	float costRatio
}
class MoleMole.Config.ModifySkillPoint : MoleMole.Config.ConfigTalentMixin {
	vuint skillID
	vint pointDelta
}
class MoleMole.Config.AddTalentExtraLevel : MoleMole.Config.ConfigTalentMixin {
	MoleMole.Config.TalentType talentType
	vuint talentIndex
	vuint extraLevel
}
class MoleMole.Config.ConfigDialogGroup {
	vuint talkId
	MoleMole.Config.DialogGroupSchemeType type
	MoleMole.Config.ConfigDialogScheme[] dialogList
}
class MoleMole.Config.ConfigDialogScheme {
	vuint id
	vuint[] nextDialogs
	MoleMole.Config.TalkShowType talkShowType
	MoleMole.Config.TalkRoleEx talkRole
	vuint talkContentTextMapHash
	vuint talkTitleTextMapHash
	vuint talkRoleNameTextMapHash
	string talkAssetPath
	string talkAssetPath_Alter
	string talkAudioName
	string actionBefore
	string actionWhile
	string actionAfter
	float showDuration
	string optionIcon
}
class MoleMole.Config.TalkRoleEx {
	MoleMole.Config.TalkRoleType type
	string id
}
class MoleMole.Config.ConfigFreeDialogGroup : MoleMole.Config.ConfigDialogGroup {
}
class MoleMole.Config.ConfigNarratorDialogGroup : MoleMole.Config.ConfigDialogGroup {
}
class MoleMole.Config.ConfigBlossomDialogGroup : MoleMole.Config.ConfigDialogGroup {
}
class MoleMole.Config.ConfigActivityDialogGroup : MoleMole.Config.ConfigDialogGroup {
}
class MoleMole.Config.ConfigCoopDialogGroup : MoleMole.Config.ConfigDialogGroup {
}
class MoleMole.Config.ConfigGadgetDialogGroup : MoleMole.Config.ConfigDialogGroup {
}
class MoleMole.Config.ConfigNpcOtherDialogGroup : MoleMole.Config.ConfigDialogGroup {
}
class MoleMole.Config.ConfigCutsceneDialogGroup : MoleMole.Config.ConfigDialogGroup {
}
class MoleMole.Config.ConfigLocalTriggerMeta {
	MoleMole.Config.Vector vectorParam
	float floatParam
	string stringParam
}
class MoleMole.Config.ConfigLocalTriggerMetaTeleportV2 : MoleMole.Config.ConfigLocalTriggerMeta {
	MoleMole.Config.CurtainType curtainType
}
class MoleMole.Config.ConfigBaseInputAction {
	MoleMole.Config.InputValueType valueType
	string descriptionTextID
}
class MoleMole.Config.ConfigCompoundInputAction : MoleMole.Config.ConfigBaseInputAction {
	MoleMole.Config.InputActionType action1
	MoleMole.Config.InputActionType action2
	MoleMole.Config.ActionCompoundType compoundType
}
class MoleMole.Config.ContextCondition {
}
class MoleMole.Config.ContextConditionAnd : MoleMole.Config.ContextCondition {
	MoleMole.Config.ContextCondition[] conditions
}
class MoleMole.Config.ContextConditionOr : MoleMole.Config.ContextCondition {
	MoleMole.Config.ContextCondition[] conditions
}
class MoleMole.Config.ContextConditionNot : MoleMole.Config.ContextCondition {
	MoleMole.Config.ContextCondition condition
}
class MoleMole.Config.ContextConditionQuestState : MoleMole.Config.ContextCondition {
	vuint questId
	MoleMole.Config.QuestState state
}
class MoleMole.Config.ContextConditionMainQuestState : MoleMole.Config.ContextCondition {
	vuint mainQuestId
	MoleMole.Config.QuestState state
}
class MoleMole.Config.ContextConditionMainQuestVisible : MoleMole.Config.ContextCondition {
	vuint mainQuestId
	bool visible
}
class MoleMole.Config.ContextConditionChapterQuestState : MoleMole.Config.ContextCondition {
	vuint chapterId
	MoleMole.Config.QuestState state
	bool startOrEndQuest
}
class MoleMole.Config.ContextConditionChapterQuestVisible : MoleMole.Config.ContextCondition {
	vuint chapterId
	bool visible
}
class MoleMole.Config.ContextConditionQuestGlobalVar : MoleMole.Config.ContextCondition {
	vuint questGlobalVarId
	vint value
}
class MoleMole.Config.ContextAction {
}
class MoleMole.Config.ContextActionExecuteAll : MoleMole.Config.ContextAction {
	MoleMole.Config.ContextAction[] actions
}
class MoleMole.Config.ContextActionSelectMonsterMark : MoleMole.Config.ContextAction {
	vuint monsterId
	bool needTrack
}
class MoleMole.Config.ContextActionSelectMainQuest : MoleMole.Config.ContextAction {
	vuint mainQuestId
}
class MoleMole.Config.ContextActionSelectSceneMark : MoleMole.Config.ContextAction {
	MoleMole.Config.MarkIconType iconType
	vuint cityId
	vuint[] sceneIds
}
class MoleMole.Config.ContextActionSelectTransPoint : MoleMole.Config.ContextAction {
	vuint pointId
	vuint sceneId
}
class MoleMole.Config.ContextActionCreateQuestAcceptionMark : MoleMole.Config.ContextAction {
	vuint configId
}
class MoleMole.Config.ContextActionSelectLegendQuest : MoleMole.Config.ContextAction {
	vuint legendQuestId
}
class MoleMole.Config.ContextActionSelectChapterOngoingMainQuest : MoleMole.Config.ContextAction {
	vuint chapterId
}
class MoleMole.Config.ContextActionSetText : MoleMole.Config.ContextAction {
	MoleMole.Config.ActivityBannerUIElementType uiElement
	string textMap
}
class MoleMole.Config.ContextActionSetTextWithMainQuestName : MoleMole.Config.ContextAction {
	MoleMole.Config.ActivityBannerUIElementType uiElement
	string textMap
	vuint mainQuestId
}
class MoleMole.Config.ContextActionSetActive : MoleMole.Config.ContextAction {
	MoleMole.Config.ActivityBannerUIElementType uiElement
	bool active
	bool setParent
}
class MoleMole.Config.ContextActionSetAnimatorTrigger : MoleMole.Config.ContextAction {
	MoleMole.Config.ActivityBannerUIElementType uiElement
	string triggerName
	bool setOrReset
}
class MoleMole.Config.ContextActionReportActivityBuriedPoint : MoleMole.Config.ContextAction {
	vuint activityId
	vuint buttonId
	vuint scheduleId
	string additionalInfo
}
class MoleMole.Config.ContextActionSetIcon : MoleMole.Config.ContextAction {
	MoleMole.Config.ActivityBannerUIElementType uiElement
	string iconAliasName
	string iconFullPath
}
class MoleMole.Config.ConfigPerfItemOverrideInfoBase {
	MoleMole.Config.ConfigGraphicsRequirement[] requirementArray
	MoleMole.Config.PerfOptionOverrideRule deviceOverrideRule
	MoleMole.Config.PerfOptionOverrideRule combineOverrideRule
}
class MoleMole.Config.ConfigGraphicsRequirement {
	string Info
	string[] Values
}
class MoleMole.Config.PlayerCustomOptionConfig : MoleMole.Config.ConfigPerfItemOverrideInfoBase {
	string[] optionTextName
	float[] perfCostRatio
}
class MoleMole.Config.ConfigPerfNumberItemOverrideInfo : MoleMole.Config.ConfigPerfItemOverrideInfoBase {
	float overrideValue
}
class MoleMole.Config.ConfigPerfNumberArrayItemOverrideInfo : MoleMole.Config.ConfigPerfItemOverrideInfoBase {
	float[] overrideValue
}
class MoleMole.Config.ConfigPerfStringKeyItemOverrideInfo : MoleMole.Config.ConfigPerfItemOverrideInfoBase {
	string overrideValue
}
class MoleMole.Config.ConfigPerfGradeItemOverrideInfo : MoleMole.Config.ConfigPerfItemOverrideInfoBase {
	vint overrideValue
}
class MoleMole.Config.ConfigPerfBoolItemOverrideInfo : MoleMole.Config.ConfigPerfItemOverrideInfoBase {
	bool overrideValue
}
class MoleMole.Config.ConfigPerfItemBase {
	map<MoleMole.Config.PerfRatingCategory,vint[]> categoryRatingMap
	MoleMole.Config.PlayerCustomOptionSetting playerCustomOption
}
class MoleMole.Config.PlayerCustomOptionSetting {
	MoleMole.Config.GraphicsSettingEntryType settingEntry
	map<string,MoleMole.Config.PlayerCustomOptionConfig> customConfigMap
	MoleMole.Config.PerfOptionTextType optionNameType
	MoleMole.Config.ConfigGraphicSettingEntrySortType sortType
}
class MoleMole.Config.ConfigPerfNumberItem : MoleMole.Config.ConfigPerfItemBase {
	map<string,float> deviceSpecItem
	map<string,MoleMole.Config.ConfigPerfNumberItemOptionArrayInfo> itemOptionMap
	map<string,MoleMole.Config.ConfigPerfNumberItemOverrideInfo> overrideMap
}
class MoleMole.Config.ConfigPerfNumberItemOptionArrayInfo : MoleMole.Config.ConfigPerfItemOptionArrayInfoBase {
	float[] itemOptionArray
}
class MoleMole.Config.ConfigPerfNumberArrayItem : MoleMole.Config.ConfigPerfItemBase {
	map<string,float[]> deviceSpecItem
	map<string,MoleMole.Config.ConfigPerfNumberArrayItemOptionArrayInfo> itemOptionMap
	map<string,MoleMole.Config.ConfigPerfNumberArrayItemOverrideInfo> overrideMap
}
class MoleMole.Config.ConfigPerfNumberArrayItemOptionArrayInfo : MoleMole.Config.ConfigPerfItemOptionArrayInfoBase {
	float[][] itemOptionArray
}
class MoleMole.Config.ConfigPerfStringKeyItem : MoleMole.Config.ConfigPerfItemBase {
	map<string,string> deviceSpecItem
	map<string,MoleMole.Config.ConfigPerfStringKeyItemOptionArrayInfo> itemOptionMap
	map<string,MoleMole.Config.ConfigPerfStringKeyItemOverrideInfo> overrideMap
}
class MoleMole.Config.ConfigPerfStringKeyItemOptionArrayInfo : MoleMole.Config.ConfigPerfItemOptionArrayInfoBase {
	string[] itemOptionArray
}
class MoleMole.Config.ConfigPerfGradeItem : MoleMole.Config.ConfigPerfItemBase {
	map<string,vint> deviceSpecItem
	map<string,MoleMole.Config.ConfigPerfGradeItemOptionArrayInfo> itemOptionMap
	map<string,MoleMole.Config.ConfigPerfGradeItemOverrideInfo> overrideMap
}
class MoleMole.Config.ConfigPerfGradeItemOptionArrayInfo : MoleMole.Config.ConfigPerfItemOptionArrayInfoBase {
	vint[] itemOptionArray
}
class MoleMole.Config.ConfigPerfBoolItem : MoleMole.Config.ConfigPerfItemBase {
	map<string,bool> deviceSpecItem
	map<string,MoleMole.Config.ConfigPerfBoolItemOptionArrayInfo> itemOptionMap
	map<string,MoleMole.Config.ConfigPerfBoolItemOverrideInfo> overrideMap
}
class MoleMole.Config.ConfigPerfBoolItemOptionArrayInfo : MoleMole.Config.ConfigPerfItemOptionArrayInfoBase {
	bool[] itemOptionArray
}
class MoleMole.Config.ConfigPerfCombinedItem : MoleMole.Config.ConfigPerfItemBase {
	map<string,MoleMole.Config.ConfigPerfCombineItemOptionArrayInfo> itemOptionMap
}
class MoleMole.Config.ConfigPerfCombineItemOptionArrayInfo : MoleMole.Config.ConfigPerfItemOptionArrayInfoBase {
	string[] includedOptions
	vuint[][] itemOptionArray
}
class MoleMole.Config.ConfigPerfItemOptionArrayInfoBase {
	MoleMole.Config.ConfigGraphicsRequirement[] requirementArray
}
class MoleMole.Config.ConfigVODPlayer {
	MoleMole.Config.VODPlayerType vodPlayerType
}
class MoleMole.Config.ConfigLivePlayer : MoleMole.Config.ConfigVODPlayer {
	vuint liveID
	float turnOnRadius
	float turnOffRadius
	map<vuint,string> cuePointAbilityMap
}
class MoleMole.Config.ConfigBaseWidget {
	vuint materialId
	bool isConsumeMaterial
	bool isEquipable
	vuint coolDown
	vuint coolDownOnFail
	vuint coolDownGroup
	bool isCdUnderTimeScale
	bool isAllowedInDungeon
	bool isAllowedInRoom
	MoleMole.Config.OrnamentsType ornamentsType
}
class MoleMole.Config.ConfigWidgetAnchorPoint : MoleMole.Config.ConfigBaseWidget {
	vuint lastingTime
	vuint maxCountInScene
	vuint gadgetId
	vuint[] invalidSceneIds
}
class MoleMole.Config.ConfigWidgetBonfire : MoleMole.Config.ConfigBaseWidget {
	vuint lastingTime
	vuint maxCountInScene
	vuint maxCountByPlayer
	vuint gadgetId
	float distanceToAvatar
	float radius
	float combatDestroyDistance
}
class MoleMole.Config.ConfigWidgetCondenseResin : MoleMole.Config.ConfigBaseWidget {
	vuint replaceResinCount
}
class MoleMole.Config.ConfigWidgetLunchBox : MoleMole.Config.ConfigBaseWidget {
	vuint[] reviveMaterials
	MoleMole.Config.ConfigWidgetLunchBoxHealMaterial healMaterials
}
class MoleMole.Config.ConfigWidgetLunchBoxHealMaterial {
	vuint[] noticeAddHpMaterials
	vuint[] otherAddHpMaterials
}
class MoleMole.Config.ConfigWidgetOneoffGatherPointDetector : MoleMole.Config.ConfigBaseWidget {
	vuint hintRadius
	vuint nearbyRadius
	vuint gridSearchRange
	vuint successGadgetId
	vuint failedGadgetId
	vuint gatherPointType
	vuint hintGroup
	vuint effectLastTime
	float distanceToAvatar
	float height
}
class MoleMole.Config.ConfigWidgetClientDetector : MoleMole.Config.ConfigBaseWidget {
	vuint gadgetId
	vuint allowCityId
	vuint hintGroup
	float distanceToAvatar
	float height
}
class MoleMole.Config.ConfigWidgetClientCollector : MoleMole.Config.ConfigBaseWidget {
	MoleMole.Config.CollectorType targetType
	MoleMole.Config.ElementType elementType
	vuint rechargePoints
	vuint maxPoints
	vuint effectGadgetId
	vuint useGadgetId
	bool allowOtherWorld
}
class MoleMole.Config.ConfigWidgetAttachAvatar : MoleMole.Config.ConfigBaseWidget {
	vuint useGadgetId
}
class MoleMole.Config.ConfigWidgetTreasureMapDetector : MoleMole.Config.ConfigBaseWidget {
	vuint gadgetId
	vuint radiusSucc
	vuint detectRange
	vuint gadgetDuration
}
class MoleMole.Config.ConfigWidgetGadgetBuilder : MoleMole.Config.ConfigBaseWidget {
	vuint lastingTime
	vuint maxCountInScene
	vuint maxCountByPlayer
	vuint gadgetId
	float distanceToAvatar
	float heightToAvatar
	float radius
	bool checkCollision
}
class MoleMole.Config.ConfigWidgetTakePhoto : MoleMole.Config.ConfigBaseWidget {
	bool hasCameraEffect
	string cameraUIEffect
	string cameraScreenEffect
	string mainCameraEffect
}
class MoleMole.Config.ConfigWidgetBlessingCamera : MoleMole.Config.ConfigBaseWidget {
	bool isFixed
}
class MoleMole.Config.ConfigWidgetMiracleRing : MoleMole.Config.ConfigBaseWidget {
	vuint maxCountInScene
	vuint maxCountByPlayer
	vuint gadgetId
	float distanceToAvatar
	float radius
	float combatDestroyDistance
}
class MoleMole.Config.ConfigWidgetWaterSprite : MoleMole.Config.ConfigBaseWidget {
	string abilityGroupName
	string abilityTriggerName
	string abilityTriggerNameSecond
}
class MoleMole.Config.ConfigWidgetWaterSpriteToy : MoleMole.Config.ConfigBaseWidget {
	string abilityGroupName
}
class MoleMole.Config.ConfigWidgetAbilityGroupGenerator : MoleMole.Config.ConfigBaseWidget {
	string abilityGroupName
}
class MoleMole.Config.ConfigWidgetOpenPage : MoleMole.Config.ConfigBaseWidget {
	string pageName
}
class MoleMole.Config.ConfigWidgetUseAttachAbilityGroupToy : MoleMole.Config.ConfigBaseWidget {
	string abilityGroupName
	string abilityGroupNameSecond
	string abilityName
	bool isUpdateCDAfterAbilityTrigger
}
class MoleMole.Config.ConfigWidgetUseItemToy : MoleMole.Config.ConfigBaseWidget {
}
class MoleMole.Config.ConfigWidgetAddBuffToy : MoleMole.Config.ConfigBaseWidget {
	vuint buffId
}
class MoleMole.Config.ConfigBaseWidgetToy {
	bool isConsumeMaterial
	vuint cdGroup
	MoleMole.Config.WidgetOccupyTag[] tags
	MoleMole.Config.WidgetBusinessType businessType
}
class MoleMole.Config.ConfigWidgetToyAnchorPoint : MoleMole.Config.ConfigBaseWidgetToy {
	vuint coolDown
	vuint lastingTime
	vuint maxCountInScene
	vuint gadgetId
	vuint[] invalidSceneIds
}
class MoleMole.Config.ConfigWidgetToyBonfire : MoleMole.Config.ConfigBaseWidgetToy {
	vuint coolDown
	vuint lastingTime
	vuint maxCountInScene
	vuint maxCountByPlayer
	vuint gadgetId
	float distanceToAvatar
	float radius
	float combatDestroyDistance
}
class MoleMole.Config.ConfigWidgetToyLunchBox : MoleMole.Config.ConfigBaseWidgetToy {
	vuint[] reviveMaterials
	MoleMole.Config.ConfigWidgetToyLunchBoxHealMaterial healMaterials
}
class MoleMole.Config.ConfigWidgetToyLunchBoxHealMaterial {
	vuint[] noticeAddHpMaterials
	vuint[] otherAddHpMaterials
}
class MoleMole.Config.ConfigWidgetToyClintDetector : MoleMole.Config.ConfigBaseWidgetToy {
	vuint gadgetId
	vuint allowCityId
	vuint hintGroup
	float distanceToAvatar
	float height
}
class MoleMole.Config.ConfigWidgetToyOneoffGatherPointDetector : MoleMole.Config.ConfigBaseWidgetToy {
	vuint hintRadius
	vuint nearbyRadius
	vuint gridSearchRange
	vuint successGadgetId
	vuint failedGadgetId
	vuint gatherPointType
	vuint hintGroup
	vuint effectLastTime
	float distanceToAvatar
	float height
}
class MoleMole.Config.ConfigWidgetToyClintCollector : MoleMole.Config.ConfigBaseWidgetToy {
	MoleMole.Config.CollectorType targetType
	MoleMole.Config.ElementType elementType
	vuint rechargePoints
	vuint maxPoints
	vuint effectGadgetId
	vuint useGadgetId
	bool allowOtherWorld
}
class MoleMole.Config.ConfigWidgetToyTreasureMapDetector : MoleMole.Config.ConfigBaseWidgetToy {
	vuint gadgetId
	vuint radiusSucc
	vuint detectRange
	vuint gadgetDuration
}
class MoleMole.Config.ConfigWidgetToyBlessingCamera : MoleMole.Config.ConfigBaseWidgetToy {
	bool isFixed
}
class MoleMole.Config.ConfigWidgetToyGadgetBuilder : MoleMole.Config.ConfigBaseWidgetToy {
	vuint lastingTime
	vuint maxCountInScene
	vuint maxCountByPlayer
	vuint gadgetId
	float distanceToAvatar
	float heightToAvatar
	float radius
	bool checkCollision
}
class MoleMole.Config.ConfigWidgetToyMiracleRing : MoleMole.Config.ConfigBaseWidgetToy {
	bool isAllowedInDungeon
	bool isAllowedInRoom
	vuint maxCountInScene
	vuint maxCountByPlayer
	vuint createGadgetId
	float distanceToAvatar
	float radius
	float combatDestroyDistance
}
class MoleMole.Config.ConfigWidgetToyOpenPage : MoleMole.Config.ConfigBaseWidgetToy {
	string pageName
}
class MoleMole.Config.ConfigWidgetToyInstrument : MoleMole.Config.ConfigWidgetToyOpenPage {
}
class MoleMole.Config.ConfigWidgetToyWaterSprite : MoleMole.Config.ConfigBaseWidgetToy {
	string abilityGroupName
	string abilityTriggerName
	string abilityTriggerNameSecond
}
class MoleMole.Config.ConfigWidgetToyTakePhoto : MoleMole.Config.ConfigBaseWidgetToy {
	bool hasCameraEffect
	string cameraUIEffect
	string cameraScreenEffect
	string mainCameraEffect
}
class MoleMole.Config.ConfigWidgetToyFeather : MoleMole.Config.ConfigBaseWidgetToy {
	bool showOnRadar
	string uiCameraEffect
	string mainCameraEffect
	bool showHint
	float showHintDistance
	vuint[] showHintEntityIDList
	string abilityName
	vuint excludeSuiteIndex
	string abilityGroupName
	bool isTeam
}
class MoleMole.Config.ConfigWidgetToyCreateGadgetBase : MoleMole.Config.ConfigBaseWidgetToy {
	vuint gadgetId
	bool isSetCamera
	float setCameraAngle
	MoleMole.Config.CreateSeverGadgetOpType doBagType
}
class MoleMole.Config.ConfigWidgetToyAdeptiAbode : MoleMole.Config.ConfigWidgetToyCreateGadgetBase {
	string abilityName
	float effectLastTime
}
class MoleMole.Config.ConfigWidgetDigScanner : MoleMole.Config.ConfigWidgetToyCreateGadgetBase {
}
class MoleMole.Config.ConfigWidgetRockBoardDetector : MoleMole.Config.ConfigWidgetToyCreateGadgetBase {
}
class MoleMole.Config.ConfigWidgetFireworksLauncher : MoleMole.Config.ConfigWidgetToyCreateGadgetBase {
}
class MoleMole.Config.ConfigWidgetAddBuff : MoleMole.Config.ConfigBaseWidgetToy {
	vuint buffId
}
class MoleMole.Config.ConfigWidgetToyCamera : MoleMole.Config.ConfigBaseWidgetToy {
	vuint cameraID
}
class MoleMole.Config.ConfigWidgetToyAbilityGroupGenerator : MoleMole.Config.ConfigBaseWidgetToy {
	string abilityGroupName
	bool isTeam
}
class MoleMole.Config.ConfigWidgetUseAttachAbilityGroup : MoleMole.Config.ConfigBaseWidgetToy {
	string abilityGroupName
	string abilityGroupNameSecond
	vuint sharedCdGroup
	MoleMole.Config.WidgetSkillReplaceType[] replaceSkillHintList
	bool isUpdateCDAfterAbilityTrigger
	bool isSkipTakeOffAbilityGroupWhenChangeAvatar
}
class MoleMole.Config.ConfigWidgetCaptureAnimal : MoleMole.Config.ConfigWidgetUseAttachAbilityGroup {
	vuint[] captureTagArray
	bool isEnterCodex
	bool isShowCodexEntry
}
class MoleMole.Config.ConfigWidgetUseAttachAbilityTrigger : MoleMole.Config.ConfigBaseWidgetToy {
	string abilityGroupName
	string triggerAbilityName
	bool isTeam
}
class MoleMole.Config.ConfigWidgetBackground : MoleMole.Config.ConfigBaseWidgetToy {
	bool defaultActiveState
	string activeNameKey
	string deactiveNameKey
}
class MoleMole.Config.ConfigWidgetFishing : MoleMole.Config.ConfigWidgetBackground {
}
class MoleMole.Config.ConfigWidgetScanCamera : MoleMole.Config.ConfigBaseWidgetToy {
	MoleMole.Config.ScanCameraType scanType
}
class MoleMole.Config.ConfigWidgetToyCrystal : MoleMole.Config.ConfigWidgetUseAttachAbilityTrigger {
	float energyCost
	MoleMole.Config.RegionalPlayVarType meterType
}
class MoleMole.Config.ConfigWidgetActivityGacha : MoleMole.Config.ConfigWidgetUseAttachAbilityTrigger {
}
class MoleMole.Config.ConfigWidgetAranaraController : MoleMole.Config.ConfigWidgetUseAttachAbilityTrigger {
	MoleMole.Config.ConfigWidgetIconChange iconChange
}
class MoleMole.Config.ConfigWidgetIconChange {
	vuint questID
	string iconPath
}
class MoleMole.Config.ConfigWidgetToyHitTree : MoleMole.Config.ConfigWidgetUseAttachAbilityTrigger {
	float hitRadius
	vuint hitNumLimit
	float hitRadiusTolerance
}
class MoleMole.Config.ConfigWidgetLightStone : MoleMole.Config.ConfigBaseWidgetToy {
	vuint[] levelEnergyLimitArray
	vuint[] levelCdGroupIdArray
	vuint quickUseOpenLevel
	vuint skyCrystalDetectorOpenLevel
	MoleMole.Config.RegionalPlayVarType energyType
	vuint gadgetChainId
	vuint quickUseCostEnergy
	string abilityGroupName
	string triggerAbilityName
	bool isTeam
	vuint hintRadius
	vuint nearbyRadius
	vuint gridSearchRange
	vuint successGadgetId
	vuint failedGadgetId
	vuint gatherPointType
	vuint hintGroup
	vuint effectLastTime
	float distanceToAvatar
	float height
}
class MoleMole.Config.ConfigPlatformActionTokenChannel {
	MoleMole.Config.EntityType[] highEntityTypes
	MoleMole.Config.EntityType[] lowEntityTypes
	map<MoleMole.Config.EntityTokenActionType,MoleMole.Config.ConfigEntityActionTokenGroup> entityTypeToken
	MoleMole.Config.ConfigActionTokenChannelGroupInfo defaultCfg
	map<string,MoleMole.Config.ConfigActionTokenChannelGroupInfo> platformCfg
	map<MoleMole.Config.EntityTokenActionType,vint> actionConsumeTokenLimit
}
class MoleMole.Config.ConfigEntityActionTokenGroup {
	MoleMole.Config.ConfigAbilityActionToken lowEntityToken
	MoleMole.Config.ConfigAbilityActionToken otherEntityToken
	bool useHighEntityTypes
}
class MoleMole.Config.ConfigActionTokenChannelGroupInfo {
	float lowLevelDist
	map<MoleMole.Config.EntityTokenActionType,MoleMole.Config.ConfigEntityActionTokenGroup> lowLevelDistToken
	map<MoleMole.Config.ActionTokenSourceType,map<MoleMole.Config.EntityTokenActionType,MoleMole.Config.ConfigEntityActionTokenGroup>> actionSourceToken
	map<vint,MoleMole.Config.ConfigActionTokenChannel> cfg
}
class MoleMole.Config.ConfigActionTokenChannel {
	vint maxNum
}
class MoleMole.Config.ConfigAbilityGroup {
	MoleMole.Config.AbilityGroupSourceType abilityGroupSourceType
	MoleMole.Config.AbilityGroupTargetType abilityGroupTargetType
	vuint[] abilityGroupTargetIDList
	MoleMole.Config.ConfigEntityAbilityEntry[] targetAbilities
	MoleMole.Config.ConfigDynamicTalent[] targetTalents
}
class MoleMole.Config.ConfigDynamicTalent {
	string talentName
}
class MoleMole.Config.ConfigAbilityPath {
	map<string,string[]> abilityPaths
}
class MoleMole.Config.ConfigAbilitySystem {
	bool shouldPreActive
	MoleMole.Config.ConfigAbilityTask[] tasks
}
class MoleMole.Config.ConfigAnimator {
	map<vint,string[]> freeStyleStateMap
	map<string,vuint> stateAnimeMap
	map<MoleMole.Config.AnimeGroupType,MoleMole.Config.ConfigAnimGroup> logicStateMap
}
class MoleMole.Config.ConfigAnimGroup {
	map<string,vuint> dynamicAnimeMap
}
class MoleMole.Config.ConfigAnimPatternPath {
	map<string,string[]> animPatternPaths
}
class MoleMole.Config.ConfigAttachmentData {
	map<string,MoleMole.Config.ConfigAttachment> attachMap
}
class MoleMole.Config.ConfigAttachment {
	string slotName
	string attachPath
	string effectPath
	MoleMole.Config.Vector attachPos
	MoleMole.Config.Vector attachRot
	MoleMole.Config.Vector attachScale
}
class MoleMole.Config.ConfigAudioEmitter {
	float emitterLifetime
	float emitInterval
	float instLifetime
	float endingDuration
	MoleMole.Config.ConfigWwiseString emitEventName
	MoleMole.Config.ConfigWwiseString endEventName
	MoleMole.Config.AudioEmitterMultiPositionType multiPositionType
}
class MoleMole.Config.ConfigBoundary {
	string name
	vint priority
	string shape
	MoleMole.Config.Vector offset
	MoleMole.Config.Vector euler
	float height
}
class MoleMole.Config.DynamicFloatVector {
	MoleMole.Config.DynamicFloat x
	MoleMole.Config.DynamicFloat y
	MoleMole.Config.DynamicFloat z
}
class MoleMole.Config.ConfigFootprintEffect {
	string effect
	string deformation
}
class MoleMole.Config.ConfigClimate {
	MoleMole.Config.ConfigClimateCommon common
	map<string,MoleMole.Config.ConfigClimateInfoBase> templates
}
class MoleMole.Config.ConfigClimateCommon {
	float length
	float thresholdRatio
	map<MoleMole.Config.JsonClimateType,vuint[]> debuffs
	map<MoleMole.Config.JsonClimateType,vuint[]> areaBuffs
	MoleMole.Config.ConfigClimateMisc miscs
	MoleMole.Config.ConfigClimatePerform perform
	float uiWarningRatio
	float uiLenWeakIntensity
	float uiLenLerpSpeed
}
class MoleMole.Config.ConfigClimateMisc {
	float dampingTime
	float fadeSpeed
}
class MoleMole.Config.ConfigClimatePerform {
	float chance
	map<MoleMole.Config.JsonClimateType,string> performTriggers
}
class MoleMole.Config.ConfigCodexQuest {
	vuint mainQuestId
	MoleMole.Config.QuestType questType
	MoleMole.Config.ConfigCodexQuestText mainQuestTitle
	MoleMole.Config.ConfigCodexQuestText mainQuestDesp
	MoleMole.Config.ConfigCodexQuestText chapterTitle
	MoleMole.Config.ConfigCodexQuestText chapterNum
	MoleMole.Config.ConfigCodexQuestSubQuest[] subQuests
}
class MoleMole.Config.ConfigCodexQuestText {
	vuint textId
	MoleMole.Config.CodexQuestTextType textType
}
class MoleMole.Config.ConfigCodexQuestSubQuest {
	MoleMole.Config.ConfigCodexQuestText subQuestTitle
	MoleMole.Config.ConfigCodexQuestItem[] items
}
class MoleMole.Config.ConfigCodexQuestItem {
	vuint itemId
	MoleMole.Config.TODO_HJELIAACEII CEHHGDHGJLE
	MoleMole.Config.CodexQuestItemType itemType
	vuint nextItemId
	vuint[] EGMPKDIOLLG
	MoleMole.Config.ConfigCodexQuestText speakerText
	MoleMole.Config.ConfigCodexQuestText speakerText2
	MoleMole.Config.ConfigCodexQuestText[] texts
	MoleMole.Config.ConfigCodexQuestDialogSingle[] dialogs
	MoleMole.Config.ConfigCodexQuestDialogSingle[] dialogs2
}
class MoleMole.Config.TODO_HJELIAACEII {
	MoleMole.Config.TODO_AMFGAOBEIML type
	vuint param1
}
class MoleMole.Config.ConfigCodexQuestDialogSingle {
	MoleMole.Config.ConfigCodexQuestText text
	MoleMole.Config.TODO_LJCCKICBGHB soundType
	vuint soundId
	vuint nextItemId
	vuint[] EGMPKDIOLLG
}
class MoleMole.Config.ConfigGlobalCombat {
	MoleMole.Config.ConfigGlobalHit hitData
	MoleMole.Config.ConfigGlobalCollision collisionData
	MoleMole.Config.ConfigGlobalAI aiData
	MoleMole.Config.ConfigGlobalMove moveData
	MoleMole.Config.ConfigAvatarHitBucketSetting defaultAvatarHitBucketSetting
	map<string,MoleMole.Config.ConfigBladeElementFx> elementBladeData
	MoleMole.Config.ConfigFireGrassAirflowField fireGrassAirflowData
	MoleMole.Config.ConfigGloablMiscs miscs
	MoleMole.Config.ConfigDefaultAbilities defaultAbilities
	map<string,map<string,float>> elemReactDamage
	map<string,map<string,float>> elemAmplifyDamage
	MoleMole.Config.ElementType[] elemPrority
	MoleMole.Config.ConfigGlobalShakeOff shakeOff
	MoleMole.Config.ConfigElementShield elementShield
	MoleMole.Config.ConfigEliteShield eliteShield
	MoleMole.Config.ConfigGlobalSwitch globalSwitch
	MoleMole.Config.ConfigGlobalLockTarget lockTarget
	MoleMole.Config.ConfigElementUI elemUI
	map<MoleMole.Config.AbilityState,MoleMole.Config.ElementReactionType[]> rejectElementReaction
	MoleMole.Config.ConfigLogSetting logSetting
	map<string,MoleMole.Config.ConfigAttackAttenuation> attackAttenuation
	MoleMole.Config.ConfigGadgetCreationLimit[] gadgetCreationLimits
	MoleMole.Config.ConfigLuaSafetyCheckSwitch luaSafetySwitch
	map<vint,float> tempComponentBudget
	MoleMole.Config.ConfigGlobalInteraction globalInteraction
	MoleMole.Config.Vector[] lampOffset
	map<MoleMole.Config.AbilityState,string> abilityStateTriggerAbilities
	MoleMole.Config.ConfigGlobalDither dither
	map<string,MoleMole.Config.ConfigElementDecrate[]> elementDecrateGroup
	MoleMole.Config.ConfigSliceFrameWatch sliceFrameWatch
	MoleMole.Config.ConfigIK ik
	map<vint,MoleMole.Config.EquipSizeData[]> avatarEquipSizeDatas
	map<vint,MoleMole.Config.EquipSizeData[]> manekinEquipSizeDatas
	MoleMole.Config.ConfigBigWorldEnvironmentDamageClamp bigWorldEnvironmentDamageClamp
	MoleMole.Config.ConfigTDPlay tdPlay
	MoleMole.Config.ConfigSafeTypeReportData gameAnimSafeType
	map<string,MoleMole.Config.ElementConvertToChargeBarValueMixinItem[]> elementConvertToChargeBarValueMixinItemGroup
	string chargeBarMixinGlobalValueKey
	MoleMole.Config.ConfigElementReactionCoefficients elementReactionCoefficients
	MoleMole.Config.ConfigBattleFervorFormula battleFervorFormula
	map<string,MoleMole.Config.ConfigCombat> combatTemplate
	string[] combatAntiCheatAttackTagWhiteList
	MoleMole.Config.ConfigMixinCheckModifierWhiteList mixinCheckModifierWhiteList
	map<MoleMole.Config.FootprintZoneType,MoleMole.Config.ConfigFootprintZoneEffect[]> footprintZones
	vuint[] mushroomConfigIdlist
	MoleMole.Config.ConfigOvergrowEnvironmentLimit overgrowEnvironmentLimit
	MoleMole.Config.GlobalValueRegister[] globalValueList
	map<string,MoleMole.Config.ElementReactionType> attacktagToElementreactionDictionary
}
class MoleMole.Config.ConfigOvergrowEnvironmentLimit {
	string[] modifierList
	float cd
}
class MoleMole.Config.GlobalValueRegister {
	string key
	bool isVector
}
class MoleMole.Config.ConfigFootprintZoneEffect {
	MoleMole.Config.SceneSurfaceType surfaceType
	float maxWaterHeight
	map<MoleMole.Config.EFootprintPlatform,MoleMole.Config.ConfigFootprintEffect> defaultConfig
	map<string,map<MoleMole.Config.EFootprintPlatform,MoleMole.Config.ConfigFootprintEffect>> specialBodyTypes
}
class MoleMole.Config.ConfigGlobalHit {
	float minHitVX
	float maxHitVX
	float minHitVY
	float maxHitVY
	float gravity
	float hitRetreatFriction
	float airFrictionX
	float airFrictionY
	float dieRetreatRatio
	float dieRetreatLightRatio
	float dieRetreatHeavyRatio
	float dieRetreatAdd
	float dieRetreatHeavyAdd
	float dieRetreatAirXAdd
	float dieRetreatAirYAdd
}
class MoleMole.Config.ConfigGlobalCollision {
	float highSpdThreshold
}
class MoleMole.Config.ConfigGlobalAI {
	float avatarMeleeSlotRadius
	float avoidanceRadius
	float avoidanceForce
	float lod0
	float lod1
	float lod2
	vuint[] sensingIgnoreCampIDs
	map<string,MoleMole.Config.ConfigPublicAISkillCD> publicCDs
	map<MoleMole.Config.ConfigWeatherType,MoleMole.Config.NeuronName[]> defaultWeatherNeuronMapping
	bool useServerPathfinding
}
class MoleMole.Config.ConfigPublicAISkillCD {
	string name
	float minInterval
}
class MoleMole.Config.ConfigGlobalMove {
	MoleMole.Config.ConfigMoveSyncInterval syncInterval
	bool noGroundStayInPlace
}
class MoleMole.Config.ConfigMoveSyncInterval {
	MoleMole.Config.ConfigSpecificFloatValue lod0
	MoleMole.Config.ConfigSpecificFloatValue lod1
	MoleMole.Config.ConfigSpecificFloatValue lod2
}
class MoleMole.Config.ConfigSpecificFloatValue {
	float defaultValue
	map<string,float> specificValue
}
class MoleMole.Config.ConfigGloablMiscs {
	float airFlowAcc
	vuint paimonGadgetID
	string cureEffect
	MoleMole.Config.ConfigAvatarFocusGroup avatarFocus
	string gadgetUICutSenceCfgPath
	string gadgetUICameraLookCfgPath
	string weaponAnimCurvePath
}
class MoleMole.Config.ConfigAvatarFocusGroup {
	MoleMole.Config.ConfigAvatarFocus ps4
	MoleMole.Config.ConfigAvatarFocus ps5
	MoleMole.Config.ConfigAvatarFocus pc
	MoleMole.Config.ConfigAvatarFocus other
}
class MoleMole.Config.ConfigAvatarFocus {
	float cameraHorMoveSpeed
	float cameraVerMoveSpeed
	float cameraHorStickyRatio
	float cameraVerStickyRatio
	float autoFocusHorSpeed
	float autoFocusVerSpeed
	float autoFocusRangeCoef
	float gyroHorMoveSpeed
	float gyroVerMoveSpeed
}
class MoleMole.Config.ConfigDefaultAbilities {
	string monterEliteAbilityName
	string[] nonHumanoidMoveAbilities
	string[] levelDefaultAbilities
	string[] levelElementAbilities
	string[] evaluateGlobalValueAbilities
	string[] levelItemAbilities
	string[] levelSBuffAbilities
	string[] dungeonAbilities
	string[] defaultTeamAbilities
	string[] defaultMPLevelAbilities
	string[] defaultAvatarAbilities
}
class MoleMole.Config.ConfigGlobalShakeOff {
	float reduceDurability
	float interval
	float shakeLifeTime
	float shakeValue
	float shakePeriod
	float shakeSmoothRatio
	float shakeAlongAngle
	float shakeRotAngle
	float shakeNoiseRatio
	float shakeDirRatio
	float shakeZRatio
}
class MoleMole.Config.ConfigElementShield {
	MoleMole.Config.ElementType[] row
	map<MoleMole.Config.ElementType,MoleMole.Config.ConfigElementShieldResistance> shieldDamageRatiosMap
}
class MoleMole.Config.ConfigElementShieldResistance {
	MoleMole.Config.ElementType elementType
	float[] damageRatio
	vint[] restraint
}
class MoleMole.Config.ConfigEliteShield {
	MoleMole.Config.ElementType[] row
	map<string,MoleMole.Config.ConfigEliteShieldResistance> shieldDamageRatiosMap
}
class MoleMole.Config.ConfigEliteShieldResistance {
	string type
	float[] damageRatio
	float[] damageSufferRatio
}
class MoleMole.Config.ConfigGlobalSwitch {
	bool enableMultiPlayer
	bool enableAnimatorInterleave
	bool enableMixinModifierDetachCallback
	bool enablePacketProcessTimeLimit
	bool enableUITempFix
	bool enableEquipDataItemFix
	bool cacheEntityLightDeActive
	bool enablemaxDelayPacketMs
	vuint maxDelayPacketMs
	bool enableForceSyncPostion
	float maxForceDistance
	bool enableAbilityInvokeAfterReady
}
class MoleMole.Config.ConfigGlobalLockTarget {
	float lockWeightOutCameraParam
	float lockWeightRelockParam
	float clearLockTargetOutCombat
	float clearLockTargetInCombat
	float forceLockTargetInCombat
}
class MoleMole.Config.ConfigElementUI {
	MoleMole.Config.EntityType[] showIconEntityTypes
	MoleMole.Config.EntityType[] showReactionEntityTypes
	float iconRecoverTime
	float iconDisappearTime
	vuint iconDisappearRound
	float iconShowDistance
	map<string,string> overrideElemPath
	map<MoleMole.Config.ElementReactionType,string> reactionElemPath
}
class MoleMole.Config.ConfigLogSetting {
	bool sendEngineLogToServer
}
class MoleMole.Config.ConfigAttackAttenuation {
	float resetCycle
	float[] durabilitySequence
	float[] enbreakSequence
	float[] damageSequence
}
class MoleMole.Config.ConfigGadgetCreationLimit {
	string tag
	vuint[] gadgetIDs
	vuint maxValue
}
class MoleMole.Config.ConfigLuaSafetyCheckSwitch {
	bool tickWorld
	vuint tickWorldCD
	bool tickChest
	bool tickMonster
}
class MoleMole.Config.ConfigGlobalInteraction {
	float talkEnableAngle
	float headCtrlEnableAngle
	float headCtrlDisableAngle
}
class MoleMole.Config.ConfigGlobalDither {
	float ditherMinRange
	float ditherMaxRange
	float defaultDetectHeight
	vuint detectHeightCheckStep
}
class MoleMole.Config.ConfigElementDecrate {
	MoleMole.Config.ElementType elem1
	MoleMole.Config.ElementType elem2
	float ratio
}
class MoleMole.Config.ConfigSliceFrameWatch {
	float amortizedTickMassiveEntityBudget
	float sharedSliceFrameGameSystemTime
	float resourcesManagerAssetJobMinTime
	float resourcesManagerAssetJobMaxTime
	float resourcesManagerInstantiateMinTime
	float resourcesManagerInstantiateMaxTime
	float resourcesManagerUnloadMinTime
	float resourcesManagerUnloadMaxTime
	float resourcesManagerInstantiateJobTime
	float levelAppearDisappearTimeMSDefault
	vint levelAppearDisappearWRRWeight
	float InitComponentCommonSlicingTimeDefault
	float removeEntityTimeMSDefault
	vint removeEnityWRRWeight
	vint sectrWRRWeightDefault
	float timerManagerTimeMS
	bool UseLegacyGenericObjectPool
	vint significanceTaskThreadLOD
	bool loadingUseSyncLoad
}
class MoleMole.Config.ConfigIK {
	MoleMole.Config.ConfigBoolForPlatforms remoteMoveIK
	MoleMole.Config.ConfigBoolForPlatforms remoteClimbIK
}
class MoleMole.Config.ConfigBoolForPlatforms {
	bool ps4
	bool android
	bool ios
	bool pc
	bool editor
}
class MoleMole.Config.EquipSizeData {
	MoleMole.Config.EquipEntityType equipType
	float putAwaySize
	float takeOutSize
}
class MoleMole.Config.ConfigBigWorldEnvironmentDamageClamp {
	vint reduceLevel
	vint worldLevelCutThreshhold
}
class MoleMole.Config.ConfigTDPlay {
	float attackSpeed_C
	map<MoleMole.Config.TDPlayTowerType,MoleMole.Config.ConfigTDPlayTowerData> towerDatas
}
class MoleMole.Config.ConfigTDPlayTowerData {
	MoleMole.Config.TDPlayTowerType towerType
	float damagePerLevel
	float elemMasteryPerLevel
	float elemMasteryPerPerStack
	float damage_A_PerStack
	float damage_B_PerStack
	float attackSpeed_A
	float attackSpeed_B
	float attackRange_A
	float attackRange_B
}
class MoleMole.Config.ConfigSafeTypeReportData {
	vint maxCount
}
class MoleMole.Config.ElementConvertToChargeBarValueMixinItem {
	MoleMole.Config.ElementType elementType
	float ratio
}
class MoleMole.Config.ConfigElementReactionCoefficients {
	float coefficientOverdoseGrass
	float coefficientOverdoseElectric
}
class MoleMole.Config.ConfigBattleFervorFormula {
	MoleMole.Config.ConfigBattleFervorGroup[] groups
	float battleFervorMinValue
	float battleFervorMaxValue
	float battleFervorBaseValue
	float lerpInterval
	float lerpCoefficient
}
class MoleMole.Config.ConfigBattleFervorGroup {
	float weight
	MoleMole.Config.ConfigBattleFervorFactor[] factors
}
class MoleMole.Config.ConfigMixinCheckModifierWhiteList {
	string[] abilityList
	string[] modifierList
}
class MoleMole.Config.ConfigMainCoopGroup {
	map<vuint,MoleMole.Config.ConfigCoopInteractionGroup> coopInteractionMap
	map<vuint,MoleMole.Config.CoopSubStartPoint> subStartPointMap
	map<vuint,MoleMole.Config.CoopSavePoint> savePointMap
	vuint confidenceValue
	vuint maxConfidenceValue
	map<MoleMole.Config.CoopTemperamentType,MoleMole.Config.CoopTemperament> temperamentMap
	bool useConfidence
	bool useTemperament
	map<vuint,MoleMole.Config.CoopTempValue> coopTempValueMap
}
class MoleMole.Config.ConfigCoopInteractionGroup {
	vuint id
	map<vuint,MoleMole.Config.ConfigCoopBaseNode> coopMap
	vuint startNodeId
	vuint failNodeId
}
class MoleMole.Config.CoopSubStartPoint {
	vuint id
	vuint coopInteractionId
}
class MoleMole.Config.CoopSavePoint {
	vuint id
	bool isEnd
}
class MoleMole.Config.CoopTemperament {
	vuint value
	float ratio
}
class MoleMole.Config.CoopTempValue {
	vuint id
	vuint value
	bool isCoopVar
}
class MoleMole.Config.ConfigCrowdGroupInfo {
	vint crowdGroupID
	MoleMole.Config.Vector boundCenter
	MoleMole.Config.Vector boundSize
	bool spawnByDefault
	MoleMole.Config.ConfigCrowdRestrictionGroup[] crowdRestrictionGroups
	MoleMole.Config.CrowdItemsRestrictionGroup[] crowdItemsRestrictionGroups
	vint cutsceneID
	bool ignoreLowPerfMode
	vuint[] jointBlocks
	bool canBeOptimized
}
class MoleMole.Config.CrowdItemsRestrictionGroup {
	string itemName
	MoleMole.Config.CrowdItemConditionType itemShowCondition
	MoleMole.Config.ConfigCrowdQuestRestriction[] questRes
	MoleMole.Config.ConfigCrowdActivityRestriction[] activityRes
	MoleMole.Config.ConfigCrowdTimeRestriction[] timeRes
	MoleMole.Config.ConfigCrowdSceneTagRestriction[] sceneTags
}
class MoleMole.Config.ConfigCrowdRestrictionGroup {
	MoleMole.Config.CrowdSpawnConditionType spawnCondition
	MoleMole.Config.ConfigCrowdQuestRestriction[] questRes
	MoleMole.Config.ConfigCrowdActivityRestriction[] activityRes
	MoleMole.Config.ConfigCrowdTimeRestriction[] timeRes
	MoleMole.Config.ConfigCrowdSceneTagRestriction[] sceneTags
}
class MoleMole.Config.ConfigCrowdQuestRestriction {
	vuint questID
	bool questAccepted
	MoleMole.Config.QuestState[] questStates
}
class MoleMole.Config.ConfigCrowdActivityRestriction {
	vuint activityType
	bool isActive
	vuint[] activityPhase
	vuint condID
}
class MoleMole.Config.ConfigCrowdTimeRestriction {
	float startTimeOfDay
	float endTimeOfDay
	bool showCrowd
}
class MoleMole.Config.ConfigCrowdSceneTagRestriction {
	string[] sceneTags
	bool isActive
}
class MoleMole.Config.ConfigCrowdSpawnInfos {
	MoleMole.Config.ConfigCrowdSpawnInfo[] crowdSpawnInfos
	MoleMole.Config.ConfigCrowdGroupColliderInfo[] crowdGroupColliderInfos
}
class MoleMole.Config.ConfigCrowdSpawnInfo {
	vint crowdTypeID
	vint animConfigID
	MoleMole.Config.Vector spawnPosition
	MoleMole.Config.Vector spawnFaceFwd
	bool hasCollider
	bool sitOnChair
	MoleMole.Config.ColorVector hairColor
	MoleMole.Config.ColorVector[] bodyColors
	MoleMole.Config.ColorVector[] hatColors
	MoleMole.Config.ColorVector[] screwColors
	vint instanceId
	MoleMole.Config.ConfigCrowdInstSpawnGradeEnum spawnGrade
}
class MoleMole.Config.ConfigCrowdGroupColliderInfo {
	MoleMole.Config.Vector spawnPosition
	MoleMole.Config.Vector spawnFaceFwd
	float height
	float radius
}
class MoleMole.Config.ConfigNpcTalkScheme {
	vuint npcId
	MoleMole.Config.ConfigTalkScheme[] talks
}
class MoleMole.Config.ConfigUI {
	map<MoleMole.Config.InputEventType,MoleMole.Config.ConfigBaseInputEvent> inputEvents
	map<string,MoleMole.Config.InputActionEvent[]> actionGroups
	map<string,MoleMole.Config.ConfigBaseContext> context
}
class MoleMole.Config.ConfigBaseInputEvent {
	MoleMole.Config.InputActionType actionType
	MoleMole.Config.ActionEventType actionEvent
}
class MoleMole.Config.InputActionEvent {
	vint priority
	MoleMole.Config.InputEventType eventType
	MoleMole.Config.ContextEventType nextToHandle
	MoleMole.Config.ConfigBaseInputEvent eventConfig
	MoleMole.Config.InputEventType proxyEventType
	MoleMole.Config.ContextEventType contextEvent
}
class MoleMole.Config.ConfigBaseContext {
	map<string,MoleMole.Config.InputActionEvent[]> actionGroups
	map<vint,MoleMole.Config.DeviceAction> stateActions
	bool enableInputPenetrate
	bool enableJoypadVirtualCursor
}
class MoleMole.Config.DeviceAction {
	string keyboardTouch
	string keyboardMouse
	string joypad
}
class MoleMole.Config.ConfigExternalVoiceLookupItem {
	vuint fileID
	MoleMole.Config.AudioVoiceTrigger gameTrigger
	vuint gameTriggerArgs
}
class MoleMole.Config.ConfigExternalVoiceItem {
	string guid
	float playRate
	float initialDelay
	vint cooldown
	MoleMole.Config.ConfigExternalVoiceInferiorItem[] interruptedGuids
	MoleMole.Config.ConfigExternalVoiceInferiorItem[] excludedGuids
	vint queueUpConfig
	string gameTrigger
	vuint gameTriggerArgs
	vint personalConfig
	vint viewConfig
	bool clearAll
	bool isGlobalStop
	bool isPlayOnTeam
	vint avoidRepeat
	string parentID
	MoleMole.Config.ConfigExternalVoiceSound[] sourceNames
}
class MoleMole.Config.ConfigExternalVoiceInferiorItem {
	string guid
	bool include
}
class MoleMole.Config.ConfigExternalVoiceSound {
	string sourceFileName
	float rate
	string avatarName
	string emotion
	vint gender
}
class MoleMole.Config.ConfigTextMapLevel {
	map<vint,MoleMole.Config.TextMapLevelStruct> levelMap
	map<MoleMole.Config.TextMapPlatformType,vint> platformMap
}
class MoleMole.Config.TextMapLevelStruct {
	vint minFileNum
	vint maxFileNum
	vint autoChangeStep
}
class MoleMole.Config.ConfigUIGlobal {
	map<MoleMole.Config.InputActionType,MoleMole.Config.ConfigBaseInputAction> inputActions
	map<MoleMole.Config.InputEventType,MoleMole.Config.ConfigBaseInputEvent> inputEvents
	map<string,MoleMole.Config.InputActionEvent[]> actionGroups
	map<string,MoleMole.Config.ConfigBaseContext> inputModes
	MoleMole.Config.Point2D joypadChangeViewScale
	float joypadLongPressDuration
	float[] joypadSenseScales
	float[] joypadFocusSenseScales
	float[] mouseSenseScales
	float[] mouseFocusSenseScales
	float[] touchpadSenseScales
	float[] touchpadFocusSenseScales
	float[] touchpadFocusAccelerationScales
	MoleMole.Config.TouchpadFocusAccelerationSigmoidPara touchpadFocusAccelerationPara
	MoleMole.Config.ConfigUIPhotograph configUIPhotograph
	MoleMole.Config.ConfigInputCheck configInputCheck
}
class MoleMole.Config.TouchpadFocusAccelerationSigmoidPara {
	float phase
	float slope
	float amplitude
	float clip
}
class MoleMole.Config.ConfigUIPhotograph {
	float fovMax
	float fovMin
	float cameraShiftUp
	float cameraShiftDown
	float cameraShiftLeft
	float cameraShiftRight
	float blurDistance
	float blurRange
	float blurAmount
}
class MoleMole.Config.ConfigInputCheck {
	MoleMole.Config.ConfigInputEventCheckWhiteList configInputEventCheckWhiteList
}
class MoleMole.Config.ConfigInputEventCheckWhiteList {
	MoleMole.Config.InputEventType[] globalWhiteList
	map<MoleMole.Config.InputEventType,string[]> configContextInputEventWhiteListMap
}
class MoleMole.Config.ConfigInterContainer {
	vuint talkVersion
	string luaDataPath
	bool isSimpleTalk
	bool dontUseDefaultFinish
	bool attackModeRecover
	bool pauseActor
	bool hidePickableEntity
	float startBlackKeepTime
	string entityBan
	bool isKeyInteraction
	bool disableNpcLod
	bool isAutoBanNpc
	bool isBanWidgetPet
	vint[] BanCrowdGroupIDs
	bool protectNpcMobileLod
	MoleMole.Config.ConfigInterFade startFade
	MoleMole.Config.ConfigInterFade endFade
	MoleMole.Config.ConfigInterActor[] actors
	MoleMole.Config.ConfigBaseInterAction[][] group
	MoleMole.Config.ConfigInterGrpId[] groupId
	map<vuint,vint[]> freeStyleDic
}
class MoleMole.Config.ConfigInterFade {
	float startFadeInDuration
	float startFadeOutDuration
}
class MoleMole.Config.ConfigInterActor {
	vuint configID
	string alias
	bool visible
	string bornPointName
	bool useRelativePos
	MoleMole.Config.Vector relativePos
	MoleMole.Config.Vector relativeRot
	vuint questID
	MoleMole.Config.RemoveActorType removeActorType
	bool forceCreateDaily
	MoleMole.Config.ActorBornRelativePosType relativePosType
	string relativePosNpcAlias
}
class MoleMole.Config.ConfigInterGrpId {
	vuint index
	vuint grpId
	vuint nextGrpId
}
class MoleMole.Config.ConfigPolygonArea {
	MoleMole.Config.PolygonAreaType polygonAreaType
	MoleMole.Config.Vector minArea
	MoleMole.Config.Vector maxArea
	MoleMole.Config.Vector[] roadPoints
}
class MoleMole.Config.ConfigCustomLevelDungeon {
	vuint dungeonID
	vuint startRoomId
	MoleMole.Config.ConfigCustomLevelRoomSetting[] roomList
}
class MoleMole.Config.ConfigCustomLevelRoomSetting {
	vuint roomID
	vuint componentLimitConfig
	MoleMole.Config.Vector playerInitPos
	MoleMole.Config.Vector playerInitRot
	MoleMole.Config.ConfigCustomLevelRoomBasic basicData
	MoleMole.Config.ConfigCustomLevelRoomExtraData[] extraData
}
class MoleMole.Config.ConfigCustomLevelRoomBasic {
	MoleMole.Config.Vector deployStartPos
	MoleMole.Config.Vector deployBound
	vuint totalCost
	vuint[] preRooms
	vuint[] nextRooms
	MoleMole.Config.Vector bornPos
	MoleMole.Config.Vector bornRot
}
class MoleMole.Config.ConfigCustomLevelRoomExtraData {
	vuint index
	MoleMole.Config.Vector occupyPos
	MoleMole.Config.Vector occupyBound
	MoleMole.Config.PileTag[] pileTags
	bool isGadget
	vuint configID
	MoleMole.Config.Vector gadgetRot
}
class MoleMole.Config.ConfigCutsceneIndex {
	MoleMole.Config.ConfigCutsceneContext normal
	map<vint,MoleMole.Config.ConfigCutsceneContext> platform
}
class MoleMole.Config.ConfigCutsceneContext {
	MoleMole.Config.CutsceneIndexType type
	bool enableForceStreaming
	MoleMole.Config.ConfigTimeline cutsceneConfig
	MoleMole.Config.ConfigVideo videoConfig
}
class MoleMole.Config.ConfigVideo {
	bool heroDiff
	string videoName
	string videoNameOther
	vuint subtitleId
	vuint subtitleIdOther
	bool canSkip
	MoleMole.Config.ColorVector bgColor
	float fadeInDuration
	float fadeOutDuration
	vuint videoScreenAdaptation
}
class MoleMole.Config.ConfigDynamicAbilityPreload {
	string[] preloadEffect
	string[] preloadGadget
	string[] preloadCamera
	string[] preloadSkillIcon
}
class MoleMole.Config.ConfigEffectData {
	MoleMole.Config.ConfigElementView elementView
	MoleMole.Config.ConfigBeHitEffect beHit
	MoleMole.Config.ConfigRecoverEnergyEffect[] recoverEnergy
	MoleMole.Config.ConfigEffectPool effectPool
	map<string,string> scenePropShakeAnim
	MoleMole.Config.ConfigEffectLOD effectLOD
	map<string,MoleMole.Config.ConfigSkipUnindexedEffectCreation> skipUnindexedEffectCreation
	map<string,MoleMole.Config.TokenForceEnqueueReason> tokenForceEnqueueMap
	string[] tokenForceHandleThisFrameArray
	string[] tokenIgnoreTickLod
	string[] logicEffect
}
class MoleMole.Config.ConfigElementView {
	map<string,vint> elementColorIndex
	vuint terrainGrassColor
}
class MoleMole.Config.ConfigBeHitEffect {
	MoleMole.Config.EntityBeHitEffect entity
	MoleMole.Config.SceneBeHitEffect scene
}
class MoleMole.Config.EntityBeHitEffect {
	string overrideByFrozenState
	string overrideByPetrifactionState
	string overrideByRockState
	string overrideByRockResistState
}
class MoleMole.Config.SceneBeHitEffect {
	map<string,map<string,string>> hitSceneEffect
}
class MoleMole.Config.ConfigDevice {
	map<string,map<string,string>> cpuNamePatterns
}
class MoleMole.Config.ConfigHDMesh {
	MoleMole.Config.SceneSurfaceType surfaceType
	MoleMole.Config.ConfigHDMeshArea[] area
}
class MoleMole.Config.ConfigHDMeshArea {
	vuint sceneId
	vuint[] worldAreaIds
}
class MoleMole.Config.ConfigRecoverEnergyEffect {
	MoleMole.Config.ElementType elementType
	MoleMole.Config.ConfigEffectWithThreshold[] effects
}
class MoleMole.Config.ConfigEffectWithThreshold {
	float threshold
	string effectName
}
class MoleMole.Config.ConfigEffectPool {
	vuint particleSystemBudgetSize
	vuint particleSystemBudgetSizeLowMemory
	vuint particleSystemBudgetSizeMidMemory
	vuint effectpoolBudgetSize
	float releaseForBudgetTimeThreshold
	float releaseForBudgetTimeThresholdLowMemory
	float releaseForBudgetTimeThresholdMidMemory
	float releaseBudgetTimeThresholdPerFrame
	map<string,MoleMole.Config.ConfigEffectPoolItem> poolItems
}
class MoleMole.Config.ConfigEffectPoolItem {
	vuint preinstantiateNumWhenPreload
	vuint maxUsedSize
}
class MoleMole.Config.ConfigEffectLOD {
	MoleMole.Config.EntityType[] useDistanceLODEntityTypes
}
class MoleMole.Config.ConfigSkipUnindexedEffectCreation {
	MoleMole.Config.ConfigSkipUnindexedEffectCreationByDistance skipUnindexedEffectCreationByDistance
}
class MoleMole.Config.ConfigSkipUnindexedEffectCreationByDistance {
	float distance
}
class MoleMole.Config.ConfigEmojiBubbleData {
	string name
	string[] effects
}
class MoleMole.Config.ConfigEntityBanData {
	map<string,MoleMole.Config.ConfigEntityBlackGrp[]> entityBanMap
}
class MoleMole.Config.ConfigEntityBlackGrp {
	bool isBlack
	MoleMole.Config.EntityType entityType
	vuint[] entityIds
}
class MoleMole.Config.ConfigEntityReuse {
	vuint configId
	float destroyTime
	vuint maxEntityCount
}
class MoleMole.Config.ConfigGadgetPath {
	map<string,string[]> gadgetPaths
}
class MoleMole.Config.ConfigResonanceCutSceneMap {
	map<MoleMole.Config.ElementType,MoleMole.Config.ConfigResonanceCutScene> cutsceneMap
}
class MoleMole.Config.ConfigResonanceCutScene {
	vuint cutsceneIndex
	string vfxAbility
}
class MoleMole.Config.ConfigPlatformGrahpicsSetting {
	map<MoleMole.Config.VolatileType,MoleMole.Config.ConfigGraphicsVolatileSetting> volatileSettings
	map<string,MoleMole.Config.ConfigGraphicsRecommendSetting> deviceSettings
	vuint targetFrameRate
	MoleMole.Config.AntialiasingMethod antialiasingMethod
	MoleMole.Config.TAAQuality taaQuality
	MoleMole.Config.SMAAQuality smaaQuality
	MoleMole.Config.VolatileType[] candidateVolatile
	map<MoleMole.Config.OptionType,MoleMole.Config.ConfigPostprocessEffectSetting> postprocessEffectOptions
	map<MoleMole.Config.OptionType,MoleMole.Config.ConfigParticleEffectSetting> particleEffectOptions
	map<MoleMole.Config.OptionType,MoleMole.Config.ConfigComprehensiveQualitySetting> comprehensiveQualityOptions
	MoleMole.Config.ConfigGraphicsSettingEntry[] settingEntry
	map<string,MoleMole.Config.ConfigPerformanceSetting> performanceSettings
	MoleMole.Config.ConfigGlobalToken globalTokenSettings
	map<MoleMole.Config.ShadowQuality,MoleMole.Config.ConfigShadowQualitySetting> shadowQualitySettings
	map<MoleMole.Config.PerfCostRatioGrade,float> costRatioGrade
	map<string,vint> levelStreamingCostMap
	map<MoleMole.Config.FadeTintQualityLevel,MoleMole.Config.ConfigTintFadeSetting> fadeDistanceQualitySettings
	string[] deviceModelUseWidthMatchMode
}
class MoleMole.Config.ConfigGraphicsVolatileSetting {
	vuint frameRateGrade
	vuint renderResolutionGrade
	vuint shadowQualityGrade
	vuint postprocessEffectGrade
	vuint particleEffectGrade
	vuint comprehensiveQualityGrade
	vuint vSync
	vuint AntiAliasing
	vuint VolumetricFog
	vuint Reflection
	vuint MotionBlur
	vuint Bloom
	vuint CrowdDensity
	vuint ObsoleteOnlineEffect
	vuint ScreenSubsurfaceScattering
	vuint OnlineEffect
}
class MoleMole.Config.ConfigGraphicsRecommendSetting {
	string performanceQuality
	float virtualJoystickRadius
	string levelStreamingConfig
	string uiCacheConfig
	MoleMole.Config.LightLevel lightOnLevel
	MoleMole.Config.ConfigGraphicsRequirement[] requirements
	float textureStreamingBudget
	vint enableCutsceneTextureStreaming
	vint textureStreamingEnabled
	float textureStreamingOffset
	vint enableUICameraFullResolution
	vint preloadUIScene
	vint disableDoF
	vint enableSubpass
	vint usePerObjectLightInForward
	MoleMole.Config.ConfigRenderResolution[] renderResolutions
	string qualityLevel
	vint defaultVolatileGrade
	float avatarOutlineThresh
	float avatarShadowThresh
	float avatarMotionVectorThresh
	float viewDistanceRatio
	MoleMole.Config.GrassQualityLevel grassQuality
	vint crowdSpawnDistance
	vint crowdDespawnDistance
	string entityLODConfig
	string[] deviceExtraFrameRate
	map<MoleMole.Config.VolatileType,vint> overrideRenderResGrade
}
class MoleMole.Config.ConfigRenderResolution {
	vint width
	vint height
	vint secondWidth
	vint secondHeight
	float perfCostRatio
}
class MoleMole.Config.ConfigPostprocessEffectSetting {
	bool useHalfShadows
	bool useShadowCache
	MoleMole.Config.CheckboardType checkboardType
	MoleMole.Config.SSAOMode aoMode
	bool enableMotionBlur
	MoleMole.Config.MotionBlurQuality motionBlurQuality
	float fsrScale
	vint avatarMotionVectorStrategy
}
class MoleMole.Config.ConfigParticleEffectSetting {
	bool halfResolutionParticle
	MoleMole.Config.ParticleEmitLevelType particleEmitLevel
	float particleDecreaseThresh
}
class MoleMole.Config.ConfigComprehensiveQualitySetting {
	bool localLightingShadow
	vint terrainBlendDistance
	vint shaderLODDistance
	string shaderQualityKeyword
	string levelStreamingConfig
	string enviroConfig
	string uiCacheConfig
	float lightViewDistanceRatio
	MoleMole.Config.GrassQualityLevel grassQuality
	MoleMole.Config.LightLevel lightOnLevel
	string entityLODConfig
	bool enableRemoteAvatarLOD
	bool enableDynamicLight
	float fadeTintDistance
	float fadeTintSize
	float textureStreamingBudget
	MoleMole.Config.FadeTintQualityLevel fadeTintQuality
	float terrainDistance
	float terrainNormal
	vint shellCount
	vint shellMaxObjectsCount
	bool useCrowdConeViewOptim
	vint crowdMaxScreenNum
	vint crowdConeViewUpdatePeriod
	MoleMole.Config.ConfigCrowdInstSpawnGradeEnum crowdMaxSpawnGrade
}
class MoleMole.Config.ConfigGraphicsSettingEntry {
	MoleMole.Config.GraphicsSettingEntryType entryType
	string[] availableOptions
	float[] perfCostRatios
	MoleMole.Config.SettingEntryDisplayType displayType
	float sliderMin
	float sliderMax
	float sliderInterval
	bool shouldCloudGameShow
	MoleMole.Config.ConfigGraphicSettingEntrySortType sortOption
}
class MoleMole.Config.ConfigPerformanceSetting {
	vint scenePropCacheCount
	float bundleUnloadLRURetireTime
	vint bundleUnloadLRURetireSize
	vint bundleUnloadLRUCapcity
	vint GameObjectPoolCount
	bool useFinalIK
	bool enableAudioSurfaceMultiprobing
	bool enableAudioFocusAttenuation
	bool enableAudioOcclusionRacasts
	bool enableAudioListenerOutreachDetetion
	float cachedEntityTime
	float cachedEntityDist
	bool useHeadControl
	bool useAvatarGrassDisplacement
	bool useOtherEnttiyGrassDisplacement
	bool useWindZoneGrassDisplacement
	bool useRagdoll
	bool useFBIK
	vint windFlagMaxQualityLevel
	bool useDynamicBone
	vint climbIKQualityLevel
	bool useClimbIK
	bool useMoveIK
	bool useEffectLOD
	vint ragdollLimitCount
	vint ragdollPoolSize
	vint ragdollPoolSameIdSize
}
class MoleMole.Config.ConfigGlobalToken {
	string actionTokenGroup
}
class MoleMole.Config.ConfigShadowQualitySetting {
	vint shadowDistance
	MoleMole.Config.ConfigShadowResolution shadowResolution
	vint shadowCascadeSplitCount
	vint perObjShadowQuality
	bool shadowBlend
	bool PerObjectPCF
	bool enableDynamicShadow
	bool enablePcss
	bool enableDistantShadow
}
class MoleMole.Config.ConfigTintFadeSetting {
	float tintDistance
	vint tintSize
}
class MoleMole.Config.ConfigGuideTask {
	string name
	bool isFreshmanGuide
	MoleMole.Config.ConfigGuideCondition[] predicates
	MoleMole.Config.ConfigGuideCondition[] onCheck
	MoleMole.Config.ConfigGuideAction[] onGuide
	MoleMole.Config.ConfigGuideCondition[][] finishCondition
	MoleMole.Config.ConfigGuideAction[] onFinish
	MoleMole.Config.ConfigGuideAction[] onQuit
}
class MoleMole.Config.ConfigGuideContextList {
	string[] mainPageBlack
	string[] dialogBlack
	string[] globalWhite
	string[] intervalBlack
	string[] prefabAndHintWhite
}
class MoleMole.Config.ConfigHomePlaceColPath {
	map<string,vuint[]> placeColPath
}
class MoleMole.Config.ConfigHomeworldDefaultSave {
	vuint sceneID
	MoleMole.Config.ConfigHomeworldBlockDefaultSave[] blockArrangementInfoList
	bool isSetBornPos
	MoleMole.Config.Vector bornPos
	MoleMole.Config.Vector bornRot
	MoleMole.Config.ConfigHomeworldFurnitureDefaultSave[] doorList
	MoleMole.Config.ConfigHomeworldFurnitureDefaultSave[] stairList
	MoleMole.Config.ConfigHomeworldFurnitureDefaultSave mainHouse
	vuint comfortValue
	MoleMole.Config.Vector djinnPos
	vuint tmpVersion
}
class MoleMole.Config.ConfigHomeworldBlockDefaultSave {
	vint blockId
	MoleMole.Config.ConfigHomeworldFurnitureDefaultSave[] persistentFurnitureList
	MoleMole.Config.ConfigHomeworldFurnitureDefaultSave[] deployFurniureList
	vuint[] deployNpcList
	vuint[] furnitureSuiteList
	vuint[] deployAnimalList
	bool isUnlocked
	vuint comfortValue
	MoleMole.Config.ConfigHomeworldDjinnInfoDefaultSave[] weekendDjinnInfoList
	vuint[] dotPatternList
}
class MoleMole.Config.ConfigHomeworldFurnitureDefaultSave {
	vuint furnitureId
	MoleMole.Config.Vector spawnPos
	MoleMole.Config.Vector spawnRot
	vint parentFurnitureIndex
}
class MoleMole.Config.ConfigHomeworldDjinnInfoDefaultSave {
	MoleMole.Config.Vector pos
	MoleMole.Config.Vector rot
}
class MoleMole.Config.ConfigHomeworldFurnitureSet {
	float radius
	float height
	MoleMole.Config.ConfigHomeworldFurnitureUnit[] furnitureUnits
	MoleMole.Config.ConfigHomeworldSuiteNpcSpawnPoint[] npcSpawnPoints
}
class MoleMole.Config.ConfigHomeworldFurnitureUnit {
	vuint furnitureID
	MoleMole.Config.Vector position
	MoleMole.Config.Vector rotation
	vint parentIndex
}
class MoleMole.Config.ConfigHomeworldSuiteNpcSpawnPoint {
	MoleMole.Config.Vector position
	MoleMole.Config.Vector rotation
}
class MoleMole.Config.ConfigUIIndicator {
	MoleMole.Config.TemplateParamString icon
	MoleMole.Config.IndicatorDistanceInfoType distance_Show
	bool followMove
	MoleMole.Config.IndicatorLogic[] indicator
}
class MoleMole.Config.IndicatorLogic {
	MoleMole.Config.IndicatorOperator iOperator
	MoleMole.Config.IndicatorCondition[] iConditions
}
class MoleMole.Config.ConfigKeyboardLayout {
	map<MoleMole.Config.KeyboardType,MoleMole.Config.ConfigKeyboardLayoutItem> configKeyboardLayouts
	map<MoleMole.Config.InputActionGroupType,MoleMole.Config.InputActionType[]> inputActionTypeGroups
}
class MoleMole.Config.ConfigKeyboardLayoutItem {
	map<MoleMole.Config.ConfigKeyCode,string> keyCodeFriendlyName
}
class MoleMole.Config.ConfigLanguageSetting {
	map<string,MoleMole.Config.TextLanguageType[]> textShowTypes
	map<string,MoleMole.Config.TextLanguageType[]> textDisableTypes
	map<string,MoleMole.Config.VoiceLanguageType[]> voiceShowTypes
	map<string,MoleMole.Config.VoiceLanguageType[]> voiceDisableTypes
}
class MoleMole.Config.ConfigLogoPageSetting {
	MoleMole.Config.ConfigLogoPage defaultConfig
	map<string,MoleMole.Config.ConfigLogoPage> logoConfigMap
	string logoFolderPath
	string tipImgAWFolderPath
}
class MoleMole.Config.ConfigLogoPage {
	string channelName
	string logoFileName
	bool showTipText
	string tipTextMapID
	bool showTipImgAW
	string tipImgAWName
	bool showWarningView
	string warningTitle
	string warningDesc
	bool showKoranTipsView
	string koranTipsDesc
}
class MoleMole.Config.ConfigLuaHack {
	string UILuaScriptPath
	bool enableLuaPatch
	bool enableAllContextLuaPatch
	string[] UILuaPatchContextStartupList
	string[] UILuaPatchContextSetupViewList
	string[] UILuaPatchContextPostSetupViewList
	string[] UILuaPatchContextSetActiveEnabledList
	string[] UILuaPatchContextSetActiveDisabledList
	string[] UILuaPatchContextDestroyList
	string[] UILuaPatchContextDestroyForceList
	map<string,string[]> UILuaPatchContextButtonMap
	map<string,string[]> UILuaPatchContextInputFieldMap
	map<string,string[]> UILuaPatchContextDrowdownMap
	map<string,string[]> UILuaPatchContextToggleMap
	map<string,string[]> UILuaPatchContextSliderMap
	map<string,string[]> UILuaPatchContextPanelMap
}
class MoleMole.Config.ConfigMainPageDisableInfo {
	MoleMole.Config.MainPageUIDisableType[] uiDisableList
	MoleMole.Config.InputEventType[] enabledInputEventList
}
class MoleMole.Config.ConfigMapGlobal {
	float miniMapUIRadius
	float miniMapSightRadius
	float miniMapScaleDefault
	float[] miniMapScaleRanks
	float levelMapScaleDefault
	float levelMapScaleMax
	float levelMapScaleMin
	float levelMapTransPointRadius
	float levelMapCustomMarkCancelRadius
	float levelMapCustomMarkNearCancelRadius
	MoleMole.Config.ConfigVCustomMapMark[] customStyles
	float MarkNearThreshold
	float MarkSelectedScale
	float RewardTipSlideValue
	vuint FirstAreaIDHideMiniMap
	float MarkUnlockEffectDelay
}
class MoleMole.Config.ConfigMutiPlatformUIData {
	map<string,MoleMole.Config.ConfigPlatformUIData> multiPlatform
}
class MoleMole.Config.ConfigPlatformUIData {
	MoleMole.Config.ConfigPlatformUIAction baseCanvansAction
	MoleMole.Config.ConfigPlatformUIAction basePageAction
	map<string,MoleMole.Config.ConfigPlatformUIAction> contextActions
}
class MoleMole.Config.ConfigPlatformUIAction {
	string[] paths
	float indent
	float scale
	float top
	float bottom
	float left
	float right
	float posx
	float posy
	vint active
	vint firstActive
	string animation
}
class MoleMole.Config.ConfigMusicGame {
	MoleMole.Config.ConfigMusicGameKey[] button_sequence
	vint instrument
	MoleMole.Config.ConfigWwiseString playMusicEvent
	MoleMole.Config.ConfigWwiseString stopMusicEvent
	MoleMole.Config.ConfigWwiseString pauseMusicEvent
	MoleMole.Config.ConfigWwiseString resumeMusicEvent
	bool autoPlay
}
class MoleMole.Config.ConfigMusicGameKey {
	MoleMole.Config.MusicKeyType button
	vuint time
	vint note
	bool isLongPress
	vuint longPressTime
}
class MoleMole.Config.ConfigMusicGameCamera {
	MoleMole.Config.ConfigMusicCamera[] cameraConfigList
}
class MoleMole.Config.ConfigMusicCamera {
	string resName
	MoleMole.Config.CameraPlayCondition[] conditionList
	vuint style
	bool disableDither
}
class MoleMole.Config.CameraPlayCondition {
	float degreeX
	float degreeY
	float length
}
class MoleMole.Config.ConfigModeStateMap {
	map<string,MoleMole.Config.ConfigActionPanelState> states
	map<MoleMole.Config.PlayModeType,MoleMole.Config.ConfigActionPanelMode> modes
}
class MoleMole.Config.ConfigActionPanelState {
	map<MoleMole.Config.ActionSlotType,MoleMole.Config.ConfigActionButton[]> slotMap
	map<MoleMole.Config.ActionSlotType,MoleMole.Config.ConfigActionButton[]> slotMapJoypadOverride
}
class MoleMole.Config.ConfigActionButton {
	MoleMole.Config.ActionBtnType type
	bool forceShow
	bool onlyHandleInput
}
class MoleMole.Config.ConfigActionPanelMode {
	map<MoleMole.Config.ActionPanelState,string> stateMap
}
class MoleMole.Config.ConfigFullPreload {
	MoleMole.Config.ConfigPlatformPreloadMapping platformPreloadMapping
	MoleMole.Config.ConfigPreload commonPreload
	map<vuint,MoleMole.Config.ConfigPreload> entitiesPreload
}
class MoleMole.Config.ConfigPlatformPreloadMapping {
	map<MoleMole.Config.ConfigPreloadType,MoleMole.Config.ConfigPreloadType[]> editor
	map<MoleMole.Config.ConfigPreloadType,MoleMole.Config.ConfigPreloadType[]> win
	map<MoleMole.Config.ConfigPreloadType,MoleMole.Config.ConfigPreloadType[]> android
	map<MoleMole.Config.ConfigPreloadType,MoleMole.Config.ConfigPreloadType[]> ps4
	map<MoleMole.Config.ConfigPreloadType,MoleMole.Config.ConfigPreloadType[]> ios
}
class MoleMole.Config.ConfigPreload {
	map<MoleMole.Config.ConfigPreloadType,string[]> effects
	map<MoleMole.Config.ConfigPreloadType,string[]> abilities
	map<MoleMole.Config.ConfigPreloadType,string[]> gadgets
	map<MoleMole.Config.ConfigPreloadType,string[]> cameras
	map<MoleMole.Config.ConfigPreloadType,string[]> animEventPatterns
	map<MoleMole.Config.ConfigPreloadType,string[]> skillIcons
	map<MoleMole.Config.ConfigPreloadType,string[]> miscObjPaths
	map<MoleMole.Config.ConfigPreloadType,string[]> weathers
}
class MoleMole.Config.ConfigMainQuestScheme {
	vuint id
	vuint resId
	vuint series
	MoleMole.Config.QuestType type
	MoleMole.Config.MainQuestTagType mainQuestTag
	MoleMole.Config.PlayMode activeMode
	vuint titleTextMapHash
	vuint descTextMapHash
	string luaPath
	vuint recommendLevel
	bool repeatable
	vuint[] suggestTrackMainQuestList
	bool suggestTrackOutOfOrder
	vuint[] rewardIdList
	MoleMole.Config.QuestShowType showType
	vuint[] specialShowRewardId
	vuint[] specialShowCondIdList
	vuint specialShowQuestId
	vuint chapterId
	vuint taskId
	bool showRedPoint
	vuint activityId
	MoleMole.Config.ConfigQuestScheme[] subQuests
	MoleMole.Config.ConfigTalkScheme[] talks
	vuint[] preloadLuaList
	vuint[] forcePreloadLuaList
	map<vuint,vint[]> freeStyleDic
	MoleMole.Config.ConfigDialogScheme[] dialogList
}
class MoleMole.Config.ConfigQuestScheme {
	vuint subId
	vuint mainId
	vint order
	vuint subIdSet
	bool isMpBlock
	vuint descTextMapHash
	vuint stepDescTextMapHash
	vuint guideTipsTextMapHash
	MoleMole.Config.QuestShowType showType
	MoleMole.Config.BanGroupType banType
	MoleMole.Config.QuestContentEx[] finishCond
	MoleMole.Config.QuestContentEx[] failCond
	MoleMole.Config.QuestGuideEx guide
	MoleMole.Config.ShowQuestGuideType showGuide
	MoleMole.Config.QuestGuideHint guideHint
	bool finishParent
	bool failParent
	MoleMole.Config.QuestShowType failParentShow
	bool isRewind
	MoleMole.Config.QuestExecEx[] finishExec
	MoleMole.Config.QuestExecEx[] failExec
	string versionBegin
	string versionEnd
}
class MoleMole.Config.QuestGuideHint {
	MoleMole.Config.QuestGuideHintType type
	string param1
}
class MoleMole.Config.QuestCondEx {
	MoleMole.Config.QuestCondType type
	vint[] param
}
class MoleMole.Config.NpcCommonCond {
	MoleMole.Config.QuestCondType condType
	vint[] paramList
}
class MoleMole.Config.QuestContentEx {
	MoleMole.Config.QuestContentType type
	vint[] param
	vuint count
}
class MoleMole.Config.QuestGuideEx {
	MoleMole.Config.QuestGuideType type
	MoleMole.Config.QuestGuideAuto autoGuide
	string[] param
	vuint guideScene
	MoleMole.Config.QuestGuideStyle guideStyle
	MoleMole.Config.QuestGuideLayer guideLayer
}
class MoleMole.Config.QuestExecEx {
	MoleMole.Config.QuestExecType type
	string[] param
}
class MoleMole.Config.ConfigMainQuestBrief {
	vuint id
	vuint series
	MoleMole.Config.QuestType type
	MoleMole.Config.MainQuestTagType mainQuestTag
	vuint titleTextMapHash
	vuint descTextMapHash
	vuint recommendLevel
	vuint[] suggestTrackMainQuestList
	vuint[] rewardIdList
	MoleMole.Config.QuestShowType showType
	vuint[] specialShowRewardId
	vuint[] specialShowCondIdList
	vuint specialShowQuestId
	vuint chapterId
	vuint taskId
	MoleMole.Config.ConfigQuestScheme[] subQuests
}
class MoleMole.Config.ConfigCameraMove {
	string cfgPath
	vint sub_priority_in_stack
	MoleMole.Config.ESpecialCameraPushStackType in_stack
}
class MoleMole.Config.ConfigJobData {
	map<vint,map<vint,MoleMole.Config.ConfigJob>> jobMapData
}
class MoleMole.Config.ConfigSoundBankLookup {
	float defaultCooldown
	map<string,MoleMole.Config.ConfigSoundBankUnloadPolicy> unloadPolicies
	vuint[] plainEvents
	vuint[] bankIds
	vuint[] conditionals
	double bankReuseRate
	string[] switchGroupsAffectedByRtpcs
	string[] switchGroupsAffectedByEvents
	string[] stateGroupsAffectedByEvents
}
class MoleMole.Config.ConfigSoundBankUnloadPolicy {
	MoleMole.Config.SoundBankUnloadPolicy policy
	float parameter
}
class MoleMole.Config.ConfigAudioStageEvents {
	vint id
	string[] stageCreateEvents
	MoleMole.Config.ConfigAudioStageProgressEvent[] stageProgressEvents
	string[] stageStartEvents
	string[] stageMatureEvents
	MoleMole.Config.ConfigAudioStageProgressEvent[] stageTeleportEvents
	string[] stageExitEvents
	string stateValue
	MoleMole.Config.ConfigAudioStateGroup[] stageCreateStateGroups
	MoleMole.Config.ConfigAudioStateGroup[] stageStartStateGroups
	MoleMole.Config.ConfigAudioStateGroup[] stageMatureStateGroups
	MoleMole.Config.ConfigAudioStateGroup[] stageExitStateGroups
	MoleMole.Config.ConfigWwiseString stage_music_start_event
	MoleMole.Config.ConfigWwiseString stage_music_stop_event
}
class MoleMole.Config.ConfigAudioStageProgressEvent {
	float progress
	string[] events
}
class MoleMole.Config.ConfigAudioStateGroup {
	MoleMole.Config.ConfigWwiseString stateGroupKey
	MoleMole.Config.ConfigWwiseString stateValue
}
class MoleMole.Config.ConfigLevelPolygon {
	vuint localPolygonId
	float yMax
	float yMin
	MoleMole.Config.Vector[] vertices
	MoleMole.Config.ConfigLevelPolygonTag[] tags
}
class MoleMole.Config.ConfigTile {
	string tileName
	vuint campID
	MoleMole.Config.TileSpecialType specialType
	float fixedY
	vint poolSize
	MoleMole.Config.ConfigTileElement[] initialElements
	MoleMole.Config.ConfigMassiveElementTriggerAction basicAction
	string fieldMapMaterial
	string effectMaterial
}
class MoleMole.Config.ConfigTileElement {
	MoleMole.Config.ElementType elementType
	float elementDurability
	bool isElementDurabilityMutable
}
class MoleMole.Config.ConfigWidget {
	map<string,MoleMole.Config.ConfigBaseWidget> widgets
}
class MoleMole.Config.ConfigMainWidgetToy {
	map<vuint,MoleMole.Config.ConfigWidgetGadget> gadgetConfigMap
	map<vuint,MoleMole.Config.ConfigWidgetCdGroup> cdGroupConfigMap
	map<vuint,MoleMole.Config.ConfigBaseWidgetToy> widgetConfigMap
}
class MoleMole.Config.ConfigWidgetGadget {
	vuint maxCountInScene
	vuint maxCountByPlayer
	bool isCombatDestroy
	float combatDestroyDistance
	bool isDistanceDestroy
	float distanceDestroyDistance
	bool isHasCollision
	bool collisionIncludeNpc
	bool collisionIncludeWater
	float radius
	float distanceToAvatar
	float createHeight
	MoleMole.Config.Vector createRot
	bool isLeaveSceneDestroy
}
class MoleMole.Config.ConfigWidgetCdGroup {
	bool isUnderTimeScale
	float coolDownSuccess
	float coolDownFail
}
class MoleMole.Config.ConfigAudioAmbience {
	vuint[] effectiveSceneIds
	MoleMole.Config.Vector[] relativePositions
	MoleMole.Config.AudioAmbiencePositionedEvent[] positionedEvents
	MoleMole.Config.ConfigAudioTreeInfo treeInfo
	MoleMole.Config.ConfigAudioDynamicRayInfo dynamicRayInfo
	MoleMole.Config.ConfigAudioArea2DInfo area2DInfo
	MoleMole.Config.ConfigWwiseString heightRTPCKey
	MoleMole.Config.ConfigWwiseString deathZoneRtpckey
	bool usingAdaptiveOpennessDetection
	MoleMole.Config.ConfigAudioAdaptiveDynamicRayInfo adaptiveDynamicRayInfo
}
class MoleMole.Config.AudioAmbiencePositionedEvent {
	MoleMole.Config.ConfigWwiseString eventName
	float minInitDelay
	float maxInitDelay
	float minInterval
	float maxInterval
}
class MoleMole.Config.ConfigAudioTreeInfo {
	float detectRadius
	string dataAssetFolder
	MoleMole.Config.ConfigWwiseString treeSoundEventName
	MoleMole.Config.ConfigWwiseString treeNumRtpcName
	MoleMole.Config.MultiPositionType multiPositionType
	MoleMole.Config.AudioTreeDataAssetNamePattern[] dataAssetNamePatterns
}
class MoleMole.Config.AudioTreeDataAssetNamePattern {
	vuint sceneId
	string pattern
}
class MoleMole.Config.ConfigAudioDynamicRayInfo {
	vint rayPerFrame
	float movingLerpRatio
	float standLerpRatio
	float rayMaxDistance
	bool isDebug
	MoleMole.Config.ConfigWwiseString rtpcParam
	MoleMole.Config.ConfigWwiseString grassCountRTPC
	float coneAngle
	MoleMole.Config.ConfigWwiseString leftSpaceOpennessRtpcKey
	MoleMole.Config.ConfigWwiseString rightSpaceOpennessRtpcKey
}
class MoleMole.Config.ConfigAudioArea2DInfo {
	float leaveReverbDelay
	MoleMole.Config.AudioStateOp[] enterReverbStates
	MoleMole.Config.AudioStateOp[] leaveReverbStates
	MoleMole.Config.AudioArea2DVolumeArea[] volumes
}
class MoleMole.Config.AudioArea2DVolumeArea {
	string volumeName
	bool isAmbience
	MoleMole.Config.ConfigWwiseString[] enterEvents
	MoleMole.Config.ConfigWwiseString[] leaveEvents
	bool isReverb
	MoleMole.Config.ConfigWwiseString auxBusName
	vint priority
	bool excludeOther
	bool enableChangeStates
	MoleMole.Config.AudioStateOp[] enterStates
	MoleMole.Config.AudioStateOp[] leaveStates
}
class MoleMole.Config.AudioStateOp {
	MoleMole.Config.ConfigWwiseString group
	MoleMole.Config.ConfigWwiseString value
}
class MoleMole.Config.ConfigAudioAdaptiveDynamicRayInfo {
	vint rayCastPerFrame
	float maxRayLen
	bool debug
	vuint defaultSamplingLevel
	MoleMole.Config.OpennessFuncType opennessFuncType
	map<string,MoleMole.Config.ConfigWwiseString> labelMap
	map<vuint,MoleMole.Config.AdaptiveParam> adaptiveParamMap
	MoleMole.Config.SamplingData samplingData
}
class MoleMole.Config.AdaptiveParam {
	float min
	float max
	vuint convincement
}
class MoleMole.Config.SamplingData {
	MoleMole.Config.DirectionMask[] maskTable
	MoleMole.Config.LayeredSamplingData[] data
}
class MoleMole.Config.DirectionMask {
	string name
	vuint mask
}
class MoleMole.Config.LayeredSamplingData {
	vuint level
	float[] vertices
	vuint[] masks
}
class MoleMole.Config.ConfigAudioArea2DAmbience {
	string areaName
	vuint short_id
	MoleMole.Config.Vector[] areaPoints
	float yZeroAnchor
	MoleMole.Config.ConfigWwiseString areaGroupName
	bool enableHeightCheck
	float top
	float bottom
	bool isAmbience
	MoleMole.Config.ConfigWwiseString[] enterEvents
	MoleMole.Config.ConfigWwiseString[] leaveEvents
	bool isReverb
	MoleMole.Config.ConfigWwiseString auxBusName
	vint priority
	bool excludeOther
	bool enableChangeStates
	MoleMole.Config.AudioStateOp[] enterStates
	MoleMole.Config.AudioStateOp[] leaveStates
}
class MoleMole.Config.ConfigAudioAvatar {
	MoleMole.Config.ConfigWwiseString voiceSwitchKey
	MoleMole.Config.ConfigWwiseString bodyTypeSwitchKey
	string[] weaponPutAwayAnimStateWhitelist
	MoleMole.Config.WeaponAttachState weapon_attach_state
	MoleMole.Config.ConfigWwiseString energyRatioRtpc
	MoleMole.Config.ConfigWwiseString teamHpRTPC
	float teamHpAliveRatio
	MoleMole.Config.ConfigWwiseString avatarAccessTypeSwitchGroup
	MoleMole.Config.ConfigWwiseString localAvatarSwitchValue
	MoleMole.Config.ConfigWwiseString remoteAvatarSwitchValue
	MoleMole.Config.ConfigWwiseString motionAvatarTypeRtpcKey
}
class MoleMole.Config.WeaponAttachState {
	MoleMole.Config.ConfigWwiseString rtpcKey
	float takeValue
	float putValue
}
class MoleMole.Config.ConfigAudioAvatarMove {
	MoleMole.Config.ConfigWwiseString flyDirectionRtpcKey
	float flyDirectionRtpcFront
	float flyDirectionRtpcSide
	float flyDirectionRtpcBack
	float flyDirectionRtpcDrop
	MoleMole.Config.ConfigWwiseString lastFrameSpeedInAirRtpcKey
	MoleMole.Config.ConfigWwiseString eventFallInWater
	MoleMole.Config.ConfigWwiseString altitudeRtpcKey
	MoleMole.Config.ConfigWwiseString slopeRtpcKey
	MoleMole.Config.ConfigWwiseString flyTurnEvent
	float flyTurnEventInterval
	MoleMole.Config.ConfigWwiseString flySpeedRtpcKey
	float airflowSpeedGain
	float airflowGainFadeLength
	MoleMole.Config.ConfigWwiseString climbVerticalScalerRtpcKey
	MoleMole.Config.ConfigWwiseString climbVerticalScalerAnimatorKey
	MoleMole.Config.ConfigWwiseString cameraAngleXRtpcKey
	MoleMole.Config.ConfigWwiseString cameraAngleYRtpcKey
	MoleMole.Config.ConfigWwiseString enterSpeedupFieldEvent
	MoleMole.Config.ConfigWwiseString fallOnWaterRtpcKey
}
class MoleMole.Config.ConfigAvatarSpeech {
	MoleMole.Config.AvatarSpeechEquipObtain[] suitableEquipObtain
	MoleMole.Config.AvatarSpeechEquipObtain[] unsuitableEquipObtain
	string eventCommonPrefix
	MoleMole.Config.ConfigWwiseString externalVoiceEvent
	MoleMole.Config.ConfigWwiseString personSwitchKey
	MoleMole.Config.ConfigWwiseString positioningSwitchKey
	MoleMole.Config.ConfigWwiseString initialDelayRTPC
	map<string,string> personSwitchValueMap
	map<string,string> positioningSwitchValueMap
	MoleMole.Config.VoiceSound[] externalSoundNames
	float defaultNarrationInterval
	float defaultNarrationDuration
	float defaultNarrationMaxDuration
	vuint gachaVoiceTriggerParam
	vuint joinTeamVoiceTriggerParam
	map<vuint,MoleMole.Config.VoiceTriggerIdentity> fetterVoiceTriggerMap
	float teammateLowHPVo_hpRatio
	vuint teammateLowHPVo_cooldown
	MoleMole.Config.VoiceTriggerIdentity teammateLowHPVo_voTrigger
	float teammateLowHPVo_distance
	float teammateLowHPVo_hpDescRatio
	map<vuint,float> teammateLowHPVo_distanceMap
	float localPlayerLowHPVo_hpRatio
	vuint localPlayerLowHPVo_cooldown
	MoleMole.Config.VoiceTriggerIdentity localPlayerLowHPVo_voTrigger
	map<vuint,MoleMole.Config.VoiceTriggerIdentity> promotionVoiceTriggerMap
	MoleMole.Config.VoiceTriggerIdentity openChestVoTrigger
	string[] voiceBlackList
}
class MoleMole.Config.AvatarSpeechEquipObtain {
	vint quality
	MoleMole.Config.ConfigWwiseString eventName
}
class MoleMole.Config.VoiceSound {
	MoleMole.Config.VoicePersonality personality
	MoleMole.Config.VoicePositioning positioning
	MoleMole.Config.ConfigWwiseString soundName
}
class MoleMole.Config.ConfigAudioBaseMove {
	MoleMole.Config.ConfigWwiseString moveRtpcKey
	MoleMole.Config.AudioPlatformMoveSettings[] platformSettings
	MoleMole.Config.AudioPlatformMoveSettingsUsagePair[] platformSettingUsageMapping
}
class MoleMole.Config.AudioPlatformMoveSettings {
	vuint id
	MoleMole.Config.AudioPlatformMoveType moveType
	MoleMole.Config.ConfigWwiseString moveStartEvent
	MoleMole.Config.ConfigWwiseString moveStopEvent
	MoleMole.Config.ConfigWwiseString rotateStartEvent
	MoleMole.Config.ConfigWwiseString rotateStopEvent
	float linearVelocityThreshold
	float angularVelocityThreshold
}
class MoleMole.Config.AudioPlatformMoveSettingsUsagePair {
	vuint entityId
	vuint settingsId
}
class MoleMole.Config.ConfigAudioCamera {
	MoleMole.Config.ConfigWwiseString cameraPitchRtpcKey
	float default_distance_between_avatar_and_camera
	MoleMole.Config.ConfigWwiseString distance_between_avatar_and_camera_rtpc_key
}
class MoleMole.Config.ConfigAudioCityBlocks {
	map<string,MoleMole.Config.ConfigWwiseString> musicSubStates
}
class MoleMole.Config.ConfigAudioCombat {
	MoleMole.Config.AudioOneTimeEvent impactEvent
	MoleMole.Config.AudioOneTimeEvent arrowImpactHeadEvent
	MoleMole.Config.AudioOneTimeEvent bushImpactEvent
	MoleMole.Config.AudioOneTimeEvent treeImpactEvent
	MoleMole.Config.ConfigWwiseString putAwayWeaponEvent
	MoleMole.Config.ConfigWwiseString strikeTypeSwitchKey
	map<MoleMole.Config.StrikeType,MoleMole.Config.ConfigWwiseString> strikeTypeSwitchMap
	MoleMole.Config.ConfigWwiseString strikeTypeSwitchDefault
	MoleMole.Config.ConfigWwiseString elementTypeSwitchKey
	map<MoleMole.Config.ElementType,MoleMole.Config.ConfigWwiseString> elementTypeSwitchMap
	MoleMole.Config.ConfigWwiseString elementTypeSwitchDefault
	MoleMole.Config.AudioOneTimeEvent hitSceneEvent
	MoleMole.Config.ConfigWwiseString whetherRecurringSwitchKey
	MoleMole.Config.ConfigWwiseString hitOneshotSwitchValue
	MoleMole.Config.ConfigWwiseString hitRecurringSwitchValue
	MoleMole.Config.ConfigWwiseString entityFadeOutEvent
	MoleMole.Config.ConfigWwiseString patrollerTemperatureRtpc
	MoleMole.Config.ConfigWwiseString patrollerAwareEvent
	MoleMole.Config.ConfigWwiseString patrollerAlertEvent
	MoleMole.Config.ConfigWwiseString patrollerCalmEvent
	MoleMole.Config.AudioImpactOverrideEvent[] impactOverrideEvents
	MoleMole.Config.AudioImpactOverrideEvent[] arrowImpactOverrideEvents
	vuint[] hittingSceneIgnoreList
	MoleMole.Config.ConfigWwiseString isMostDangerousRtpcKey
	MoleMole.Config.ConfigWwiseString isEndingHitRtpcKey
	MoleMole.Config.ConfigWwiseString cirtDamageRateRtpcKey
	MoleMole.Config.CriticalDamageConfig critical_damage
	MoleMole.Config.ConfigWwiseString threatVsingleInitRtpcKey
	MoleMole.Config.ConfigWwiseString mostDangerousForMonsterAtkeeRtpcKey
	MoleMole.Config.ConfigBattleFervor battleFervorData
	MoleMole.Config.ConfigAudioAttackResult attackResultData
	map<string,MoleMole.Config.AudioImpactOverrideEvent_AvatarAttacker> avatarAttackerImpactOverrideMap
	MoleMole.Config.EndHintConfig endHint
}
class MoleMole.Config.AudioImpactOverrideEvent_AvatarAttacker {
	vuint attakerAvatarId
	string attackTag
	MoleMole.Config.AudioOneTimeEvent impactEvent
}
class MoleMole.Config.EndHintConfig {
	float monsterIntensityThreshold
	MoleMole.Config.ConfigWwiseString levelRtpcKey
}
class MoleMole.Config.AudioOneTimeEvent {
	MoleMole.Config.ConfigWwiseString eventName
	float duration
}
class MoleMole.Config.CriticalDamageConfig {
	MoleMole.Config.ConfigWwiseString levelRtpcKey
	float minMultiplier
	float maxMultiplier
}
class MoleMole.Config.ConfigAudioAttackResult {
	bool enable
	MoleMole.Config.ConfigWwiseString attackerTypeRtpcKey
	MoleMole.Config.ConfigWwiseString attackeeTypeRtpcKey
	MoleMole.Config.ConfigWwiseString isMostDangerousRtpcKey
	MoleMole.Config.ConfigWwiseString avatarPeerRtpcKey
}
class MoleMole.Config.ConfigBattleFervor {
	map<string,MoleMole.Config.ConfigWwiseString> rtpcMap
	MoleMole.Config.ConfigWwiseString battleFervorSwitchRtpcKkey
	float battleFervorEnableRtpcValue
	float battleFervorDisableRtpcValue
	float mintlvKilledMax
	string deathZoneModifierName
	vint deathZoneGetMaxHpRatioInterval
}
class MoleMole.Config.AudioImpactOverrideEvent {
	vuint entityId
	MoleMole.Config.AudioOneTimeEvent impactEvent
}
class MoleMole.Config.ConfigAudioDialog {
	MoleMole.Config.AudioDialogReaction[] reactions
}
class MoleMole.Config.AudioDialogReaction {
	vuint dialogId
	MoleMole.Config.AudioStateOp[] stateOpsOnStart
	MoleMole.Config.AudioStateOp[] stateOpsOnFinish
	MoleMole.Config.ConfigWwiseString eventOnStart
	MoleMole.Config.ConfigWwiseString eventOnFinish
}
class MoleMole.Config.ConfigAudioEventCulling {
	map<string,MoleMole.Config.ConfigAudioEventCullingRuleBase[]> ruleMap
	MoleMole.Config.ConfigAudioEventCullingRuleBase[] globalRules
}
class MoleMole.Config.ConfigAudioGadget {
	MoleMole.Config.ConfigWwiseString paimonSpeedRtpcKey
	MoleMole.Config.ConfigWwiseString vehicleCollisionRtpc
	map<vuint,MoleMole.Config.DistanceTask> distanceTaskDict
	MoleMole.Config.ConfigAudioEquip equipConfig
}
class MoleMole.Config.ConfigAudioEquip {
	MoleMole.Config.ConfigAudioEquipElementEnhancement element_enhance
}
class MoleMole.Config.ConfigAudioEquipElementEnhancement {
	MoleMole.Config.ConfigWwiseString switchGroupName
	map<string,MoleMole.Config.ConfigWwiseString> switchValueMap
	bool setDefaultOnMismatch
	MoleMole.Config.ConfigWwiseString defaultSwitchValue
	bool setDefaultOnOwnerDestroy
	bool setDefaultOnEquipDestroy
}
class MoleMole.Config.DistanceTask {
	MoleMole.Config.ConfigWwiseString distanceRtpcKey
	vuint gadgetConfigId
	float radius
	float defaultValue
}
class MoleMole.Config.ConfigAudioGameViewState {
	MoleMole.Config.ConfigWwiseString stateGroupName
	MoleMole.Config.ConfigWwiseString normalStateValue
	MoleMole.Config.ConfigWwiseString focusedStateValue
	MoleMole.Config.ConfigWwiseString sneakInStateValue
	MoleMole.Config.ConfigWwiseString menuStateValue
	MoleMole.Config.ConfigWwiseString pauseMenuStateValue
	MoleMole.Config.ConfigWwiseString dialogStateValue
	MoleMole.Config.ConfigWwiseString videoStateValue
	MoleMole.Config.ConfigWwiseString elementViewStateValue
	MoleMole.Config.ConfigWwiseString musicGameSoloStateValue
	MoleMole.Config.ConfigWwiseString musicGameFreePlayStateValue
	string[] uiPageIgnoreList
}
class MoleMole.Config.ConfigAudioGeneral {
	MoleMole.Config.ConfigWwiseString pauseGameObjectEvent
	MoleMole.Config.ConfigWwiseString resumeGameObjectEvent
	MoleMole.Config.ConfigWwiseString pauseBusEvent
	MoleMole.Config.ConfigWwiseString resumeBusEvent
	MoleMole.Config.ConfigWwiseString stopAllEvent
	vuint[] permanentSoundBanks
	map<string,vuint[]> platformPermanentBanks
	MoleMole.Config.ConfigAudioEntityTypeInfo entityTypeInfo
}
class MoleMole.Config.ConfigAudioEntityTypeInfo {
	MoleMole.Config.ConfigWwiseString audioEntityTypeRtpckey
	float typeRtpcdefaultValue
	map<vuint,float> typeRtpcvalueMap
}
class MoleMole.Config.ConfigAudioLevel {
	MoleMole.Config.ConfigWwiseString[] teleportEvents
	MoleMole.Config.ConfigWwiseString stateGroup
	map<string,MoleMole.Config.ConfigWwiseString> dungeonEventMap
	map<vint,MoleMole.Config.ConfigWwiseString> enterDungeonEventMap
}
class MoleMole.Config.ConfigAudioListener {
	float fakeAvatarDistance
	float akListenerHeight
	MoleMole.Config.ConfigWwiseString obstructionRtpc
	MoleMole.Config.ConfigWwiseString focusAngleRtpc
	float obstructionDetectRadius
	MoleMole.Config.ConfigAudioListenerOutreachCast outreachCast
	float firstPersonListenerVolumeOffset
	float thirdPersonListenerVolumeOffset
	float defaultListenerVolumeOffset
}
class MoleMole.Config.ConfigAudioListenerOutreachCast {
	float range
	float startAngle
	vint rayCount
	MoleMole.Config.ConfigWwiseString[] rtpcNames
	MoleMole.Config.Vector offset
}
class MoleMole.Config.ConfigAudioMapInfo {
	MoleMole.Config.ConfigWwiseString areaStateKey
	MoleMole.Config.ConfigAudioMapArea[] areas
}
class MoleMole.Config.ConfigAudioMapArea {
	vuint id
	MoleMole.Config.ConfigWwiseString stateValue
	MoleMole.Config.ConfigWwiseString subStateGroup
	MoleMole.Config.ConfigWwiseString defaultSubStateValue
	MoleMole.Config.ConfigWwiseString[] eventsOnEnter
	MoleMole.Config.ConfigWwiseString[] eventsOnExit
}
class MoleMole.Config.ConfigAudioMIDI {
	map<vint,map<vint,MoleMole.Config.ConfigWwiseString>> instruments
	map<vint,vint> freeplay_buttons
	float freeplay_timeout
	float freeplay_max_distance
}
class MoleMole.Config.ConfigAudioMusic {
	MoleMole.Config.ConfigWwiseString stateGroupName
	MoleMole.Config.ConfigWwiseString casualStateValue
	MoleMole.Config.ConfigWwiseString combatPrepStateValue
	MoleMole.Config.ConfigWwiseString combatStateValue
	MoleMole.Config.ConfigWwiseString peaceStateValue
	MoleMole.Config.ConfigWwiseString cityApproachTrigger
	MoleMole.Config.ConfigWwiseString combatTrigger
	MoleMole.Config.ConfigWwiseString combatMusicRtpc
	float outerEnemyConcernRange
	float innerEnemyConcernRange
	float attackFromBehindEnterDistance
	float attackFromBehindExitDistance
	float intentionInFrontProductThreshold
	float IntentionFromBehindProductThreshold
	float combatRtpcLowerBound
	float combatRtpcUpperBound
	vint waitFramesTillStageMature
	MoleMole.Config.ConfigWwiseString enemyMainStateGroup
	MoleMole.Config.ConfigWwiseString defaultEnemyMainStateValue
	MoleMole.Config.MusicEnemySettings[] enemySettings
	MoleMole.Config.AudioStateOp skiffStateOp
}
class MoleMole.Config.MusicEnemySettings {
	vuint entityId
	MoleMole.Config.ConfigWwiseString mainStateValue
	MoleMole.Config.ConfigWwiseString auxStateGroup
	MoleMole.Config.ConfigWwiseString defaultAuxStateValue
	MoleMole.Config.MusicEnemyCombatPhaseState[] combatPhaseStates
}
class MoleMole.Config.MusicEnemyCombatPhaseState {
	MoleMole.Config.ConfigAICombatPhase combatPhase
	MoleMole.Config.ConfigWwiseString stateValue
}
class MoleMole.Config.ConfigAudioMutualExclusion {
	MoleMole.Config.AudioMutualExclusion[] exclusionPairs
}
class MoleMole.Config.AudioMutualExclusion {
	string eventNameA
	string eventNameB
	MoleMole.Config.AudioScope scope
}
class MoleMole.Config.ConfigAudioNpc {
	string defaultVocalBoneName
}
class MoleMole.Config.ConfigAudioQuest {
	MoleMole.Config.ConfigAudioQuestOps[] quests
}
class MoleMole.Config.ConfigAudioQuestOps {
	vuint questId
	MoleMole.Config.ConfigWwiseString[] eventsOnStart
	MoleMole.Config.AudioStateOp[] statesOnStart
	MoleMole.Config.ConfigWwiseString[] eventsOnFinish
	MoleMole.Config.AudioStateOp[] statesOnFinish
}
class MoleMole.Config.ConfigAudioResource {
	string soundBankPackageName
	string externalSourcePackageName
	string streamedMusicPackageName
	string streamedFilePackageName
	byte nSoundBankSplitBits
	byte nExternalSourceSplitBits
	byte nStreamedMusicSplitBits
	byte nStreamedFileSplitBits
	string packageFileExtension
	map<string,MoleMole.Config.ConfigAudioIncrementalResources> incrementals
}
class MoleMole.Config.ConfigAudioIncrementalResources {
	string[] sfxFiles
	string[] musicFiles
	string[] voFiles
}
class MoleMole.Config.ConfigAudioSetting {
	MoleMole.Config.AudioSettingSlider_PostEvent globalVolume
	MoleMole.Config.AudioSettingSlider_PostEvent sfxVolume
	MoleMole.Config.AudioSettingSlider_PostEvent musicVolume
	MoleMole.Config.AudioSettingSlider_PostVoice voiceVolume
	MoleMole.Config.VibrationSetting vibration
	MoleMole.Config.ConfigWwiseString dualSenseRTPC
	MoleMole.Config.ConfigWwiseString dynamicRangeRTPCKey
	map<vint,MoleMole.Config.OutputSetting> outputSettingMap
	map<string,MoleMole.Config.AudioPlatformSetting> platformSettings
	MoleMole.Config.AudioSettingDropdown vibrationLevel
	MoleMole.Config.AudioSettingSlider_Simple vibrationIntensity
}
class MoleMole.Config.AudioSettingSlider_Simple : MoleMole.Config.AudioSettingSlider {
}
class MoleMole.Config.AudioSettingDropdown {
	MoleMole.Config.ConfigWwiseString stateGroup
	string settingName
	string[] settingItems
	map<vint,MoleMole.Config.ConfigWwiseString> indexToStateMap
}
class MoleMole.Config.VibrationSetting {
	MoleMole.Config.ConfigWwiseString rtpc
	float openValue
	float closeValue
}
class MoleMole.Config.OutputSetting {
	string name
	MoleMole.Config.ConfigWwiseString bus
	vuint channelMask
	MoleMole.Config.BusChannelConfig[] busChannelConfigList
}
class MoleMole.Config.BusChannelConfig {
	MoleMole.Config.ConfigWwiseString bus
	vuint channelMask
}
class MoleMole.Config.AudioPlatformSetting {
	MoleMole.Config.AudioRequirement[][] audioAPIDefaultOpenSL_ESRequirements
	float videoVolumeCoefficient
}
class MoleMole.Config.AudioRequirement {
	string Info
	string[] Values
}
class MoleMole.Config.ConfigSpatialAudio {
	vuint sceneId
	MoleMole.Config.ConfigSpatialRoom[] roomList
	MoleMole.Config.ConfigSpatialPortal[] portalList
	string globalRoom
}
class MoleMole.Config.ConfigSpatialRoom {
	string name
	MoleMole.Config.ConfigWwiseString reverbAuxBus
	float reverbLevel
	float wallOcclusion
	float auxSendLevelToSelf
	bool keepRegister
	vint priority
	bool isMajorRoom
	MoleMole.Config.ConfigSpatialBoxRoomTrigger[] boxRoomTriggers
	MoleMole.Config.ConfigSpatialSphereRoomTrigger[] sphereRoomTriggers
}
class MoleMole.Config.ConfigSpatialBoxRoomTrigger {
	MoleMole.Config.Vector position
	MoleMole.Config.Vector rotation
	MoleMole.Config.Vector size
}
class MoleMole.Config.ConfigSpatialSphereRoomTrigger {
	MoleMole.Config.Vector position
	float radius
}
class MoleMole.Config.ConfigSpatialPortal {
	string name
	MoleMole.Config.Vector position
	MoleMole.Config.Vector rotation
	MoleMole.Config.Vector size
	bool enabled
	string frontRoomName
	string backRoomName
}
class MoleMole.Config.ConfigAudioSurfaceType {
	MoleMole.Config.ConfigWwiseString switchKey
	MoleMole.Config.ConfigWwiseString tallGrassRtpcId
	MoleMole.Config.ConfigWwiseString waterDepthRtpcId
	map<string,string> switchMap
	map<string,string> rtpcMap
}
class MoleMole.Config.ConfigAudioUi {
	MoleMole.Config.AudioUiSupport support
	MoleMole.Config.AudioUiEquip equip
	MoleMole.Config.ConfigWwiseString openChestEvent
	MoleMole.Config.AudioOneTimeEvent joinTeamEvent
	MoleMole.Config.ConfigWwiseString elementStateKey
	MoleMole.Config.ConfigWwiseString elementStateDefaultValue
	map<string,string> elementStateValueMap
	MoleMole.Config.ConfigWwiseString characterAppearEvent
	MoleMole.Config.ConfigWwiseString addMapPinEvent
	MoleMole.Config.ConfigWwiseString removeMapPinEvent
	MoleMole.Config.ConfigWwiseString enableElementViewEvent
	MoleMole.Config.ConfigWwiseString disableElementViewEvent
	MoleMole.Config.ConfigWwiseString dungeonVictoryEvent
	MoleMole.Config.ConfigWwiseString dungeonDefeatEvent
	MoleMole.Config.ConfigWwiseString changeWeaponEvent
	MoleMole.Config.ConfigWwiseString wearRelicEvent
	MoleMole.Config.ConfigWwiseString takeoffRelicEvent
	MoleMole.Config.ConfigWwiseString selectAvatarRelicEvent
	MoleMole.Config.ConfigWwiseString addEquipMaterialEvent
	MoleMole.Config.ConfigWwiseString talentUnlockEvent
	MoleMole.Config.ConfigWwiseString changeAvatarSuccessEvent
	MoleMole.Config.ConfigWwiseString changeAvatarFailedEvent
	MoleMole.Config.ConfigWwiseString selectMainQuestEvent
	MoleMole.Config.ConfigWwiseString teamAvatarHoldUp
	MoleMole.Config.ConfigWwiseString teamAvatarHoldDown
	MoleMole.Config.ConfigWwiseString teamAvatarClick
	MoleMole.Config.ConfigWwiseString bagDropItem
	MoleMole.Config.ConfigWwiseString mailDeleteEvent
	MoleMole.Config.ConfigWwiseString itemInCDEvent
	MoleMole.Config.ConfigWwiseString pickUpEvent
	MoleMole.Config.ConfigWwiseString playerLevelBtnEvent
	MoleMole.Config.ConfigWwiseString chestPickupFailEvent
	MoleMole.Config.ConfigWwiseString enterDungeonSuccessEvent
	MoleMole.Config.ConfigWwiseString openPageDefaultEvent
	MoleMole.Config.ConfigWwiseString closePageDefaultEvent
	map<string,MoleMole.Config.ConfigWwiseString> openPageCustomEvents
	map<string,MoleMole.Config.ConfigWwiseString> closePageCustomEvents
	MoleMole.Config.ConfigWwiseString videoStartDefaultEvent
	MoleMole.Config.ConfigWwiseString videoEndDefaultEvent
	map<string,MoleMole.Config.ConfigWwiseString> videoStartCustomEvents
	map<string,MoleMole.Config.ConfigWwiseString> videoEndCustomEvents
	vint defaultEnableDelayCount
	MoleMole.Config.ConfigWwiseString characterSelectMusicEndEvent
	map<vint,MoleMole.Config.ConfigWwiseString> loadingEventsMap
}
class MoleMole.Config.AudioUiSupport {
	MoleMole.Config.ConfigWwiseString comboRtpcKey
	float countdown
}
class MoleMole.Config.AudioUiEquip {
	MoleMole.Config.ConfigWwiseString equipOnEvent
}
class MoleMole.Config.ConfigAudioWeather {
	MoleMole.Config.ConfigWwiseString transitionRtpcKey
	MoleMole.Config.ConfigWwiseString dominantStateName
	MoleMole.Config.ConfigWwiseString dominantSwitchName
	MoleMole.Config.ConfigWwiseString dominantRtpcKey
	MoleMole.Config.ConfigWwiseString dominantStateNameWithoutDelay
	MoleMole.Config.ConfigWwiseString dominantRtpcKeyWithoutDelay
	MoleMole.Config.ConfigWwiseString timeOfDayRtpcKey
	MoleMole.Config.ConfigWwiseString avatarSpeechEvent
	bool enable_default_weather_state_setting
	MoleMole.Config.AudioWeatherProperties default_weather_state
	map<string,MoleMole.Config.AudioWeatherProperties> weatherStateMap
	MoleMole.Config.AudioWeatherWorkSet workset1
	MoleMole.Config.AudioWeatherWorkSet workset2
	MoleMole.Config.AudioOneTimeEvent nearThunderStart
	MoleMole.Config.AudioOneTimeEvent nearThunderEnd
	MoleMole.Config.AudioOneTimeEvent distantThunderStart
	MoleMole.Config.AudioOneTimeEvent distantThunderEnd
	MoleMole.Config.AudioOneTimeEvent skyThunder
	MoleMole.Config.ConfigWwiseString worksetSwitchKey
	MoleMole.Config.ConfigWwiseString windSpeedRtpcKey
	MoleMole.Config.ConfigWwiseString windDirectionRtpcKey
	MoleMole.Config.ConfigWwiseString climateRtpcKey
	map<string,string> climateRTPCMap
	MoleMole.Config.AudioWeatherVoTrigger[] weatherVoiceTriggers
	MoleMole.Config.VoiceTriggerIdentity thunderVoiceTrigger
	vuint thunderVoiceCooldown
	MoleMole.Config.ConfigWwiseString enviroTimeRtpcKey
	MoleMole.Config.ConfigWwiseString angleBetweenWindAndListenerRtpcKey
	float angleStaticUpdateRate
	float angleDynamicUpdateRate
}
class MoleMole.Config.AudioWeatherProperties {
	MoleMole.Config.ConfigWwiseString stateValue
	MoleMole.Config.ConfigWwiseString musicStateValue
	MoleMole.Config.ConfigWwiseString switchValue
	float rtpcValue
	string surfaceOverride
}
class MoleMole.Config.AudioWeatherWorkSet {
	MoleMole.Config.ConfigWwiseString stateGroupName
	MoleMole.Config.ConfigWwiseString activenessRtpcName
	MoleMole.Config.ConfigWwiseString worksetSwitchValue
}
class MoleMole.Config.AudioWeatherVoTrigger {
	MoleMole.Config.ConfigWeatherType[] weatherTypeList
	bool weatherTypeIsInclude
	string[] weatherList
	bool weatherIsInclude
	MoleMole.Config.ConfigWeatherType[] previousWeatherTypeList
	bool previousWeatherTypeIsInclude
	string[] previousWeatherList
	bool previousWeatherIsInclude
	MoleMole.Config.VoiceTriggerIdentity voTrigger
	MoleMole.Config.AudioWeatherVoTrigger_TimeRule[] timeLimit
}
class MoleMole.Config.AudioWeatherVoTrigger_TimeRule {
	float from
	float to
}
class MoleMole.Config.ConfigCostumeInfo {
	map<string,string> effects
	map<string,string> gadgets
	MoleMole.Config.ConfigCostumeAudio audio
	map<string,string> weatherPatterns
	map<string,string> eventPatterns
}
class MoleMole.Config.ConfigCostumeAudio {
	MoleMole.Config.VoiceTriggerIdentity wearVoice
}
class MoleMole.Config.ConfigFlycloakFashion {
	MoleMole.Config.ConfigFlycloakFashionEffect effects
	MoleMole.Config.ConfigFlycloakFashionScale scale
}
class MoleMole.Config.ConfigFlycloakFashionEffect {
	string Tail
	string FlyStart
	string FlyEnd
}
class MoleMole.Config.ConfigFlycloakFashionScale {
	float Male
	float Lady
	float Boy
	float Girl
	float Loli
}
class MoleMole.Config.ConfigGlobalValues {
	map<MoleMole.Config.NPCBodyType,MoleMole.Config.FirstPersonCoopCamConfig> firstPersonCoopCamConfigs
	map<string,MoleMole.Config.ConfigGadgetUIItemGroupShowCond[]> gadgetUIItemGroupShowCondsConfigs
	float specialElementViewESLValue
}
class MoleMole.Config.FirstPersonCoopCamConfig {
	MoleMole.Config.Vector camPositionOffset
	MoleMole.Config.Vector camTargetOffset
	float camFOV
}
class MoleMole.Config.ConfigGadgetUIItemGroupShowCond {
	MoleMole.Config.GadgetUIItemGroupShowCondType showCondType
	vuint priority
}
class MoleMole.Config.ConfigMarkGlobal {
	map<MoleMole.Config.MarkIconType,MoleMole.Config.ConfigMarkIcon> markIconConfig
	MoleMole.Config.MarkIconType[] customMarkIcons
	map<MoleMole.Config.SceneBuildingType,MoleMole.Config.MarkIconType> sceneBuildingMarks
	map<MoleMole.Config.MarkOrder,vint> markOrderToLayerMap
}
class MoleMole.Config.ConfigMarkIcon {
	string iconName
	vuint materialIndex
	MoleMole.Config.MarkType markType
	string effectName
	bool ignoreRaycastOnMap
	string title
	string desc
	MoleMole.Config.MarkOrder markLayer
	MoleMole.Config.MarkVisibilityType visibilityOnRadar
	MoleMole.Config.MarkVisibilityType visibilityOnMap
	bool showHeightOnRadar
	bool showOnLockedArea
	MoleMole.Config.MarkPluginIconType pluginIconType
	MoleMole.Config.FallbackMarkTipsType fallbackMarkTipsType
	bool checkEdgeOnRadar
}
class MoleMole.Config.ConfigHomeFishpondSet {
	map<vuint,MoleMole.Config.ConfigHomeFishpond> fishpondMap
}
class MoleMole.Config.ConfigHomeFishtankSet {
	map<vuint,MoleMole.Config.ConfigHomeFishtank> fishtankMap
}
class MoleMole.Config.ConfigHomeFishpond {
	vuint maxFishCount
	MoleMole.Config.ConfigHomeCommonPos[] fishBornPosList
}
class MoleMole.Config.ConfigHomeFishtank {
	vuint maxFishCount
	float waterHeight
	float fishMinHeightLimit
	vuint initialPose
	float fishScale
	map<vuint,MoleMole.Config.ConfigHomeCommonPos[]> fishBornPosMap
}
class MoleMole.Config.ConfigHomeCommonPos {
	MoleMole.Config.Vector position
	MoleMole.Config.Vector rotation
}
class MoleMole.Config.ConfigJob {
	bool isForceMainThread
	MoleMole.Config.ConfigScheduleJobType scheduleJobType
	MoleMole.Config.ConfigSchedulerType scheduleType
	vint maxNodeNum
	vint groupId
}
class MoleMole.Config.ConfigLevelActionPoint {
	vuint sceneId
	MoleMole.Config.ConfigActionPoint[] actionPoints
}
class MoleMole.Config.ConfigActionPoint {
	vuint localId
	MoleMole.Config.ActionPointType type
	MoleMole.Config.Vector pos
	MoleMole.Config.Vector rot
	vint capacity
	float actZoneInnerRadius
	float actZoneOuterRadius
	vint freestyle
	bool faceCenter
}
class MoleMole.Config.ConfigLevelGadgetData {
	vuint sceneId
	MoleMole.Config.LevelGadget[] gadgets
}
class MoleMole.Config.LevelGadget {
	vuint groupId
	vuint mapInstId
	string followMove_AttachPoint
	vuint followMove_targetInstanceId
	bool gadgetMisc_UnlockShowCutScene
	MoleMole.Config.ChestShowMoment gadgetMisc_ChestShowMoment
	MoleMole.Config.ChestShowUIRemind gadgetMisc_ChestShowUIRemind
	MoleMole.Config.ChestShowCutsceneType gadgetMisc_ChestShowCtsType
	bool billboard_HasUIBar
	float billboard_ShowUIBarDis
	float billboard_HideUIBarDis
	bool billboard_UIBarNeedEnterCombat
	MoleMole.Config.HpBarStyle billboard_HpBarStyle
	MoleMole.Config.TargetIndicatorType targetIndicator_Type
	MoleMole.Config.ConfigTemplateData ui_Indicator
	vuint targetIndicator_TaskID
	vuint billboard_MultiBarSortId
	vuint billboard_MultiBarNum
	MoleMole.Config.ConfigTriggerOverride trigger
	MoleMole.Config.Vector followRotateOffset
	MoleMole.Config.Vector followRotateForwardOfffset
	map<vuint,string> entityToManeuverCityMap
	string rotateCoreCityName
}
class MoleMole.Config.ConfigTriggerOverride {
	bool overrideTriggerFlag
	MoleMole.Config.TriggerFlag triggerFlag
	bool overrideCheckCount
	vint checkCount
	bool overrideTriggerInterval
	float triggerInterval
	MoleMole.Config.ConfigBaseShape rawShape
	bool overrideUseLocalTriggerLogic
	bool useLocalTriggerLogic
	MoleMole.Config.ConfigLocalTriggerMeta localTriggerMeta
}
class MoleMole.Config.ConfigLevelMonsterData {
	vuint sceneId
	MoleMole.Config.ConfigLevelMonsterUnit[] monsters
}
class MoleMole.Config.ConfigLevelMonsterUnit {
	vuint groupId
	vuint mapInstId
	bool spawnedByEvtPattern
	vint routeId
	MoleMole.Config.ConfigLevelMonsterAIPatrol aiPatrolSetting
	vuint aiGroupID
	bool overrideDefendAreaRange
	float defendAreaRange
	bool overrideForceAlertDistance
	float forceAlertDistanceLimit
	vuint defendAreaID
	vuint wanderAreaID
	bool overrideClearThreatTargetDistance
	float clearThreatTargetDistance
	string aiNeuronSetting
	string aiSensingTemplate
	bool forceCombatOnSpawn
	bool disableWander
	bool standOnDistantMesh
	vuint landingPointID
	vuint extractionPointID
	bool overrideUseNavmesh
	bool useNavmesh
	bool overrideToTheMoon
	bool useToTheMoon
	bool billboard_HasUIBar
	float billboard_ShowUIBarDis
	float billboard_HideUIBarDis
	bool billboard_UIBarNeedEnterCombat
	MoleMole.Config.HpBarStyle billboard_HpBarStyle
	vuint billboard_MultiBarSortId
	vuint billboard_MultiBarNum
	string reuseNotRemoveAbilityTag
	bool hasSneakIndicator
}
class MoleMole.Config.ConfigLevelMonsterAIPatrol {
	vuint aiPatrolGroupId
	bool aiPatrolIsLeader
	MoleMole.Config.Point2D aiPatrolOffset
}
class MoleMole.Config.ConfigLevelPolygons {
	vuint sceneId
	MoleMole.Config.ConfigLevelPolygon[] polygons
}
class MoleMole.Config.ConfigLevelRoute {
	vuint sceneId
	MoleMole.Config.ConfigRoute[] routes
}
class MoleMole.Config.ConfigMusic {
	MoleMole.Config.ConfigWwiseString switchGroup
	MoleMole.Config.ConfigWwiseString playEvent
	MoleMole.Config.ConfigWwiseString stopEvent
	MoleMole.Config.ConfigWwiseString pauseEvent
	MoleMole.Config.ConfigWwiseString resumeEvent
	MoleMole.Config.ConfigWwiseString duckEvent
	MoleMole.Config.ConfigWwiseString unduckEvent
	MoleMole.Config.ConfigMusicTransitions startTransitions
	MoleMole.Config.ConfigMusicSyncTransitions syncTransitions
	MoleMole.Config.ConfigMusicTimeTransitions timeTransitions
	MoleMole.Config.ConfigMusicStimulusHandler[] stimulusHandlers
}
class MoleMole.Config.ConfigMusicSyncTransitions {
	MoleMole.Config.ConfigMusicTransitions beatTransitions
	MoleMole.Config.ConfigMusicTransitions barTransitions
	MoleMole.Config.ConfigMusicTransitions gridTransitions
	MoleMole.Config.ConfigMusicTransitions cueTransitions
	MoleMole.Config.ConfigMusicTransitions exitTransitions
}
class MoleMole.Config.ConfigMusicTimeTransitions {
	float interval
	MoleMole.Config.ConfigMusicTransitions repetitives
	MoleMole.Config.ConfigMusicFixedTimeTransitions[] fixedTimes
}
class MoleMole.Config.ConfigMusicFixedTimeTransitions {
	MoleMole.Config.ConfigMusicTransitions transitions
	float fixedTime
}
class MoleMole.Config.ConfigSong {
	vint id
	MoleMole.Config.ConfigWwiseString switchValue
	MoleMole.Config.ConfigMusicSyncTransitions syncTransitions
	MoleMole.Config.ConfigMusicTimeTransitions timeTransitions
	MoleMole.Config.ConfigMusicStimulusHandler[] stimulusHandlers
	vint ignoranceMask
}
class MoleMole.Config.ConfigPS4TRC {
	vint defaultAge
	MoleMole.Config.ConfigContentRestriction[] contentRestrictionList
}
class MoleMole.Config.ConfigContentRestriction {
	string countryCode
	vint age
}
class MoleMole.Config.ConfigLevelLayout {
	MoleMole.Config.ConfigLevelBlock[] blocks
}
class MoleMole.Config.ConfigLevelBlock {
	MoleMole.Config.Vector min
	MoleMole.Config.Vector max
	MoleMole.Config.ConfigLevelArea[] levelAreas
}
class MoleMole.Config.ConfigLevelArea {
	vuint id
	vuint level
	vuint priority
	MoleMole.Config.ConfigPolygonArea polygonData
}
class MoleMole.Config.ConfigScene {
	float transRadius
	map<string,MoleMole.Config.ConfigScenePoint> points
	map<string,MoleMole.Config.ConfigSceneArea> areas
	map<string,MoleMole.Config.ConfigForceField> forces
	map<string,MoleMole.Config.ConfigLocalEntity> entities
	map<string,MoleMole.Config.ConfigLoadingDoor> doors
}
class MoleMole.Config.ConfigSceneArea {
	MoleMole.Config.SceneAreaType type
	bool unlocked
}
class MoleMole.Config.ConfigWorldAreaLayout {
	MoleMole.Config.ConfigLevel1WorldArea[] level1Areas
}
class MoleMole.Config.ConfigLevel1WorldArea {
	MoleMole.Config.ConfigWorldArea level1Area
	MoleMole.Config.ConfigWorldArea[] level2Areas
}
class MoleMole.Config.ConfigWorldArea {
	vuint id1
	vuint id2
	MoleMole.Config.ConfigPolygonArea polygonData
}
class MoleMole.Config.ConfigActivityTalkScheme {
	vuint activityId
	MoleMole.Config.ConfigTalkScheme[] talks
}
class MoleMole.Config.ConfigGadgetTalkScheme {
	vuint configId
	vuint groupId
	MoleMole.Config.ConfigTalkScheme[] talks
}
class MoleMole.Config.ConfigPhotographCheck {
	map<vuint,MoleMole.Config.ConfigJudgeNodeBase> allJudgeNodes
}
class MoleMole.Config.ConfigCrowdTextureHash {
	map<string,string> dataQHash
	map<string,string> dataTHash
}
class MoleMole.Config.ConfigResourceCollection {
	map<vuint,MoleMole.Config.ConfigResourceCollectionContent> resourceCollectionMap
}
class MoleMole.Config.ConfigResourceCollectionContent {
	string[] audioResourceList
	string[] videoResourceList
}
class MoleMole.Config.ConfigRandomQuestGlobalScheme {
	MoleMole.Config.ConfigRandomTalkScheme[] talkList
	MoleMole.Config.ConfigRandomQuestScheme[] questList
}
class MoleMole.Config.ConfigRandomTalkScheme {
	vuint id
	vint[] freeStyleList
}
class MoleMole.Config.ConfigRandomQuestScheme {
	vuint id
	map<vuint,vint[]> freeStyleDic
	map<string,vint[]> randomFreeStyleDic
}
class MoleMole.Config.ConfigLevelMeta {
	map<vuint,MoleMole.Config.ConfigSceneMeta> sceneMetaDic
}
class MoleMole.Config.ConfigSceneMeta {
	MoleMole.Config.ConfigLevelBlockMeta[] blockInfo
	vuint navmeshPolygonDataPathHash
}
class MoleMole.Config.ConfigLevelBlockMeta {
	vuint blockID
	bool isIgnoreBlockPosition
	vint blockCenterX
	vint blockCenterZ
	vuint blockLevelMonsterDataPathHash
	vuint blockLevelRouteDataPathHash
}
class MoleMole.Config.ConfigPlatformPerfSetting {
	MoleMole.Config.ConfigPerfRatingSetting perfRating
	MoleMole.Config.ConfigPerfSettingSet perfOptions
	string[] playerCustomOptions
	bool applyGlobalPerfForGraphicSetting
	map<MoleMole.Config.PerfCostRatioGrade,float> costRatioGrade
}
class MoleMole.Config.ConfigPerfRatingSetting {
	map<MoleMole.Config.PerfRatingCategory,MoleMole.Config.ConfigPerfRatingLevel[]> perfRating
	map<MoleMole.Config.PerfRatingCategory,MoleMole.Config.PerfRatingCategory> perfRatingCopyMap
	map<MoleMole.Config.PerfRatingCategory,vint> perfRatingDefault
}
class MoleMole.Config.ConfigPerfRatingLevel {
	vint tier
	MoleMole.Config.ConfigGraphicsRequirement[] requirementArray
	string[] specialCaseRequirment
}
class MoleMole.Config.ConfigPerfSettingSet {
	map<string,MoleMole.Config.ConfigPerfNumberItem> numberItems
	map<string,MoleMole.Config.ConfigPerfNumberArrayItem> numberArrayItems
	map<string,MoleMole.Config.ConfigPerfStringKeyItem> stringKeyItems
	map<string,MoleMole.Config.ConfigPerfGradeItem> gradeItems
	map<string,MoleMole.Config.ConfigPerfBoolItem> boolItems
	map<string,MoleMole.Config.ConfigPerfCombinedItem> combinedItems
}
class MoleMole.Config.ConfigScenePropColliderMove : MoleMole.Config.ConfigMove {
	string attach_point
}
class MoleMole.Config.ConfigRegionPerf {
	vuint[] areaIdarray
	float textureStreamingBudget
	string streamingProfileRatioConfigName
	bool disableCommonPreload
	bool disableEntityPreloadEffect
	MoleMole.Config.ConfigGraphicsRequirement[] requirementArray
	float hizAabbscale
	float distantShadowBound
	MoleMole.Config.ShadowQuality maxShadowQuality
	MoleMole.Config.ConfigShadowResolution maxShadowResolution
	vint textureStreamingEnableAdjust
	float textureStreamingGuardMin
	float textureStreamingGuardMax
	float textureStreamingNearProtectDistance
	vint textureStreamingNearMipLevelMin
	vint textureStreamingEnableImportantRenderer
	vint textureStreamingCustomFallback
	float textureStreamingFallbackGuard
}
class MoleMole.Config.ConfigQTEStepNode {
	MoleMole.Config.ConfigQTEStepCondActionGroup[] startTrigger
	MoleMole.Config.ConfigQTEStepBaseComponent[] components
	MoleMole.Config.ConfigQTEStepCondActionGroup[] successTrigger
	MoleMole.Config.ConfigQTEStepCondActionGroup[] failTrigger
}
excel class MoleMole.Config.BuoyantCombatLevelExcelConfig {
	vuint id
	vuint galleryId
	vuint groupId
	vuint dayIndex
	vuint rewardPreview
	vuint levelRuleTextMapHash
	vuint levelRuleBriefTextMapHash
	vuint[] watcherID
	vuint[] watcherScore
	vuint[] recommendLevel
	float[] iconPosition
}
excel class MoleMole.Config.LunaRiteSearchingExcelConfig {
	vuint Id
	MoleMole.Config.LunaRiteRegionType regionType
	vuint openDay
	vuint progressWatcherID
	vuint[] watcherID
	float[] regionCenter
	vuint regionNameHash
	float regionRadius
	vuint chestCond
	vuint runeCond
	vuint chestMarkNum
	vuint runeMarkNum
}
excel class MoleMole.Config.LunaRiteBattleExcelConfig {
	vuint Id
	MoleMole.Config.LunaRiteRegionType regionType
	vuint consecrateID
	vuint groupBundleId
	vuint rewardID
	string challengeIcon
	string monsterInfo
	string eliteMonsterInfo
	vuint rulerTextMapHash
	vuint recipeSourceTextMapHash
}
excel class MoleMole.Config.ActivitySalesmanDailyExcelConfig {
	vuint dailyConfigId
	MoleMole.Config.IdCountConfig[] costItemList
	vuint clusPosTextMapHash
	vuint npcTalkTextMapHash
	vuint IntroTextMapHash
	string tracePosition
}
nozig excel class MoleMole.Config.IdCountConfig {
	vuint id
	vuint count
}
excel class MoleMole.Config.AvatarExcelConfig : MoleMole.Config.CreatureExcelConfig {
	MoleMole.Config.AvatarUseType useType
	MoleMole.Config.BodyType bodyType
	vuint scriptDataPathHash
	string iconName
	string sideIconName
	MoleMole.Config.QualityType qualityType
	float chargeEfficiency
	float healAdd
	float healedAdd
	vuint combatConfigHash
	bool isRangeAttack
	vuint initialWeapon
	MoleMole.Config.WeaponType weaponType
	vuint manekinPathHash
	string imageName
	vuint gachaCardNameHash
	vuint gachaImageNameHash
	vuint coopPicNameHash
	string cutsceneShow
	vuint skillDepotId
	float staminaRecoverSpeed
	vuint[] candSkillDepotIds
	vuint manekinJsonConfigHash
	vuint manekinMotionConfig
	vuint descTextMapHash
	MoleMole.Config.AvatarIdentityType avatarIdentityType
	vuint avatarPromoteId
	vuint[] avatarPromoteRewardLevelList
	vuint[] avatarPromoteRewardIdList
	vuint featureTagGroupID
	vuint infoDescTextMapHash
	vuint animatorConfigPathHash
	vuint animatorConfigPathHashPre
}
excel class MoleMole.Config.CampExcelConfig {
	vuint id
	vuint trophicLevel
	vuint[] enemyCampList
}
excel class MoleMole.Config.BaseTalentConfig {
	string openConfig
	MoleMole.Config.PropValConfig[] addProps
	float[] paramList
}
excel class MoleMole.Config.AvatarTalentExcelConfig : MoleMole.Config.BaseTalentConfig {
	vuint talentId
	vuint nameTextMapHash
	vuint descTextMapHash
	string icon
	vuint prevTalent
	vuint mainCostItemId
	vuint mainCostItemCount
	vuint viceCostItemId
	vuint viceCostItemCount
}
excel class MoleMole.Config.ProudSkillExcelConfig : MoleMole.Config.BaseTalentConfig {
	vuint proudSkillId
	vuint proudSkillGroupId
	vuint level
	vuint proudSkillType
	vuint nameTextMapHash
	vuint descTextMapHash
	vuint unlockDescTextMapHash
	string icon
	vuint coinCost
	MoleMole.Config.IdCountConfig[] costItems
	MoleMole.Config.TalentFilterCond[] filterConds
	vuint breakLevel
	vuint[] paramDescList
	MoleMole.Config.ProudLifeEffectType lifeEffectType
	string[] lifeEffectParams
	byte effectiveForTeam
	bool isHideLifeProudSkill
}
excel class MoleMole.Config.EquipAffixExcelConfig : MoleMole.Config.BaseTalentConfig {
	vuint affixId
	vuint id
	vuint level
	vuint nameTextMapHash
	vuint descTextMapHash
}
excel class MoleMole.Config.ConstValueExcelConfig {
	MoleMole.Config.ConstValueType name
	string[] value
}
excel class MoleMole.Config.CookRecipeExcelConfig {
	vuint id
	vuint nameTextMapHash
	vuint rankLevel
	string icon
	vuint descTextMapHash
	vuint[] effectDesc
	MoleMole.Config.CookFoodType foodType
	MoleMole.Config.CookMethodType cookMethod
	bool isDefaultUnlocked
	vuint maxProficiency
	MoleMole.Config.IdCountConfig[] qualityOutputVec
	MoleMole.Config.IdCountConfig[] inputVec
	string qteParam
	vuint[] qteQualityWeightVec
}
excel class MoleMole.Config.CompoundExcelConfig {
	vuint id
	vuint groupID
	vuint nameTextMapHash
	vuint rankLevel
	MoleMole.Config.CompoundType type
	bool isDefaultUnlocked
	vuint costTime
	vuint queueSize
	MoleMole.Config.IdCountConfig[] inputVec
	MoleMole.Config.IdCountConfig[] outputVec
	string icon
	vuint descTextMapHash
	vuint countDescTextMapHash
}
excel class MoleMole.Config.DailyTaskExcelConfig {
	vuint ID
	vuint cityId
	vuint poolId
	MoleMole.Config.DailyTaskType type
	vuint rarity
	vuint questId
	vuint[] oldGroupVec
	vuint[] newGroupVec
	MoleMole.Config.DailyTaskFinishType finishType
	vuint finishParam1
	vuint finishParam2
	vuint finishProgress
	vuint taskRewardId
	string centerPosition
	vuint enterDistance
	vuint exitDistance
	vuint titleTextMapHash
	vuint descriptionTextMapHash
	vuint targetTextMapHash
	float radarRadius
	vuint relatedTag
}
excel class MoleMole.Config.DieTypeTipsExcelConfig {
	vuint id
	MoleMole.Config.PlayerDieType dieType
	vuint monsterID
	vuint[] tips
}
excel class MoleMole.Config.DungeonExcelConfig {
	vuint id
	vuint nameTextMapHash
	vuint displayNameTextMapHash
	vuint descTextMapHash
	MoleMole.Config.DungeonType type
	MoleMole.Config.DungeonSubType subType
	bool isDynamicLevel
	vuint serialId
	MoleMole.Config.DungeonPlayType playType
	vuint sceneId
	vuint eventInterval
	MoleMole.Config.InvolveType involveType
	vuint showLevel
	vuint avatarLimitType
	vuint limitLevel
	vint levelRevise
	vuint prevDungeonId
	vuint requireAvatarId
	vuint passCond
	vuint passJumpDungeon
	vuint reviveIntervalTime
	vuint reviveMaxCount
	vuint dayEnterCount
	MoleMole.Config.IdCountConfig[] enterCostItems
	vuint firstPassRewardPreviewID
	vuint passRewardPreviewID
	vuint settleCountdownTime
	vuint failSettleCountdownTime
	vuint quitSettleCountdownTime
	MoleMole.Config.SettleShowType[] settleShows
	bool isBanDieOptionReviveAfterSettle
	bool GOKNBLOJIAK
	bool ONDEIHPICCA
	MoleMole.Config.SettleUIType settleUIType
	vuint statueCostID
	vuint statueCostCount
	vuint statueDrop
	MoleMole.Config.ElementType[] recommendElementTypes
	string[] recommendTips
	map<vuint,vuint> levelConfigMap
	vuint[] previewMonsterList
	vuint gearDescTextMapHash
	vuint cityID
	bool dontShowPushTips	
	string entryPicPath
	MoleMole.Config.DungeonStateType stateType
	string factorPic
	string factorIcon
	bool enableQuestGuide
	bool DCCMNLPOBEG
}
excel class MoleMole.Config.FeatureTagGroupExcelConfig {
	vuint groupID
	vuint[] tagIDs
}
excel class MoleMole.Config.FettersExcelConfig : MoleMole.Config.FetterConfig {
	vuint type
	bool isHiden
	vuint[] hideCostumeList
	vuint[] showCostumeList
	vuint[] tips
	vuint voice_titleTextMapHash
	string voice_file
	vuint voice_file_textTextMapHash
	vuint voice_title_lockedTextMapHash
}
excel class MoleMole.Config.GalleryExcelConfig {
	vuint id
	MoleMole.Config.GalleryType type
	string[] param
	bool isEnableSinglePrepare
	vuint singlePrepareTime
	bool isEnableMpPrepare
	vuint mpPrepareTime
	bool isPermitInputInPrepare
	bool canInterruptByClient
	vuint sceneId
	vuint controlGroupId
	vuint[] groupId
	vuint groupFurnitureId
	vuint revivePointGroupId
	vuint revivePointConfigId
	string abilityGroup
	string[] abilityGroupList
	string limitRegion
	vuint centerSceneId
	float[] centerPosList
	vuint centerRadius
	vuint duration
	vuint nameTextMapHash
	vuint descTextMapHash
	vuint galleryNameTextMapHash
	vuint galleryMSGTextMapHash
	string pic
	vuint targetTextMapHash
	string startAudioValues
	string endAudioValues
	string[] selectable_ability_groups
	string[] teamAbilityGroupList
	string[] selectableTeamAbilityGroupList
	bool isDisableGroupDefaultReviseLevel
	vuint[] successGalleryStopReasons
}
excel class MoleMole.Config.GlobalExcelConfig {
}
excel class MoleMole.Config.FurnitureSuiteExcelConfig {
	vuint suiteID
	string jsonName
	vuint suiteNameTextMapHash
	vuint suiteDescTextMapHash
	vuint drawingID
	vuint[] favoriteNpcExcelIdVec
	string transStr
	vuint[] furnType
	string itemIcon
	string mapIcon
	float interRatio
}
excel class MoleMole.Config.HomeWorldAreaComfortExcelConfig {
	vuint configID
	vuint sceneID
	vuint areaID
	MoleMole.Config.HomeWorldAreaType areaType
	vuint nameTextMapHash
	vuint maxComfort
	string safePointStr
	string playerSafePointStr
	vuint lowLoadLimit
	vuint middleLoadLimit
	vuint highLoadLimit
	float[] areaCenterPos
	float[] areaCenterRot
	string blueprintSafePointStr
	vuint BJPDBCFPKBH
	string FACHJBMMNHF
}
excel class MoleMole.Config.HomeWorldFurnitureExcelConfig : MoleMole.Config.ItemConfig {
	vuint[] furnitureGadgetID
	vuint[] furnType
	MoleMole.Config.FurnitureDeploySurfaceType surfaceType
	vuint arrangeLimit
	vuint isSpecialFurniture
	MoleMole.Config.SpeicalFurnitureType specialFurnitureType
	vuint roomSceneID
	vuint gridStyle
	vuint comfort
	vuint stackLimit
	vuint cost
	vuint discountCost
	vuint isCombinableLight
	float height
	vuint canFloat
	vuint isUnique
	string itemIcon
	string effectIcon
	float clampDistance
	float editorClampDistance
	vuint deployGlitchIndex
	vuint rankLevel
	string jsonName
	vuint pushTipsId
	bool NNMOCBGPNDB
	MoleMole.Config.GroupRecordType groupRecordType
}
excel class MoleMole.Config.HomeWorldPlantExcelConfig {
	vuint seedID
	vuint[] gatherIdVec
	vuint homeGatherID
	vuint bundleID
	vuint dropID
	MoleMole.Config.ConfigHomeGather[] configHomeGather
	vuint fieldID
	vuint time
	vuint sproutTime
	vuint collectNum
	vuint sproutGadgetID
	vuint order
	string inteeIconName
	vuint inteeNameTextMapHash
}
nozig excel class MoleMole.Config.ConfigHomeGather {
	vuint homeGatherID
	vuint bundleID
	vuint dropID
	vuint weight
}
excel class MoleMole.Config.HomeWorldBgmExcelConfig {
	vuint bgmID
	bool isDefaultUnlock
	bool isRoomSceneUsable
	bool isWorldSceneUsable
	vuint cityId
	vuint sortOrder
	string bgmPath
	vuint bgmNameTextMapHash
}
excel class MoleMole.Config.HuntingMonsterExcelConfig {
	vuint configId
	vuint monsterId
	vuint associatedMonsterGroupId
	MoleMole.Config.HuntingMonsterFinishType huntingFinishType
	vuint[] affix
	string abilityGroup
	MoleMole.Config.HuntingMonsterCreatePosType createPosType
	vuint level
	vuint reviseLevelId
	vuint[] cityList
	MoleMole.Config.HuntingOfferDifficultyType difficulty
	vuint limitTime
	vuint searchPointNum
	MoleMole.Config.HuntingRefreshCond[] refreshCond
	vuint initialPose
	vuint[] clueTextIdList
	vuint newsTextTextMapHash
	vuint traitTextTextMapHash
	vuint mechanismTitle1TextMapHash
	vuint mechanismDesc1TextMapHash
	vuint mechanismTitle2TextMapHash
	vuint mechanismDesc2TextMapHash
	vuint[] suiteId
	bool isDisableWandering
	vuint routeId
}
excel class MoleMole.Config.HuntingRefreshCond {
	MoleMole.Config.HuntingRefreshCondType condType
	vuint[] param
}
excel class MoleMole.Config.LimitRegionExcelConfig {
	vuint id
	string name
	MoleMole.Config.OpenStateType openstate
	vuint sceneId
	MoleMole.Config.LimitRegionType type
	vuint order
}
excel class MoleMole.Config.MaterialExcelConfig : MoleMole.Config.ItemConfig {
	vuint interactionTitleTextMapHash
	MoleMole.Config.MaterialType materialType
	vuint cdTime
	vuint cdGroup
	vuint stackLimit
	vuint maxUseCount
	bool useOnGain
	bool noFirstGetHint
	bool playGainEffect
	MoleMole.Config.ItemUseTarget useTarget
	MoleMole.Config.ItemUseConfig[] itemUse
	vuint rankLevel
	MoleMole.Config.FoodQualityType foodQuality
	vuint effectDescTextMapHash
	vuint specialDescTextMapHash
	vuint typeDescTextMapHash
	string effectIcon
	vuint effectGadgetID
	string effectName
	string[] picPath
	bool isSplitDrop
	bool closeBagAfterUsed
	vuint[] satiationParams
	MoleMole.Config.MaterialDestroyType destroyRule
	vuint[] destroyReturnMaterial
	vuint[] destroyReturnMaterialCount
	vuint setID
	bool isHidden
	bool isForceGetHint
}
nozig excel class MoleMole.Config.ItemUseConfig {
	MoleMole.Config.ItemUseOp useOp
	string[] useParam
}
excel class MoleMole.Config.NewActivityAvatarSelectionExcelConfig {
	vuint scheduleId
	vuint condId
	vuint[] watcherIdList
	vuint[] avatarRewardList
	vuint descTextMapHash
	vuint[] costItemIdList
	vuint[] costItemNumList
	bool isBlocked
}
excel class MoleMole.Config.OpActivityBonusExcelConfig {
	vuint bonusId
	MoleMole.Config.OpActivityBonusSourceType sourceType
	string sourceParam
	vuint openLevel
	vuint bonusRatio
	string[] textMapIdList
	MoleMole.Config.OpActivityTrackType trackType
	vuint[] trackPara
	vuint iconBackground
	vuint iconForeground
}
excel class MoleMole.Config.OverflowTransformExcelConfig {
	MoleMole.Config.OverflowTransformType transformType
	vuint transformId
	vuint transformBaseCount
	MoleMole.Config.IdCountConfig[] transformResults
	MoleMole.Config.ItemLimitType transformItemLimitType
}
excel class MoleMole.Config.PlayerLevelExcelConfig {
	vuint level
	vuint exp
	vuint rewardId
	vuint expeditionLimitAdd
	vuint unlockWorldLevel
	vuint unlockDescTextMapHash
}
excel class MoleMole.Config.MainQuestExcelConfig {
	vuint id
	vuint resId
	vuint series
	MoleMole.Config.QuestType type
	MoleMole.Config.MainQuestTagType mainQuestTag
	MoleMole.Config.PlayMode activeMode
	vuint titleTextMapHash
	vuint descTextMapHash
	string luaPath
	vuint recommendLevel
	bool repeatable
	vuint[] suggestTrackMainQuestList
	bool suggestTrackOutOfOrder
	vuint[] rewardIdList
	MoleMole.Config.QuestShowType showType
	vuint chapterId
	vuint taskId
	bool showRedPoint
	vuint activityId
	bool isRelease
	vuint[] specialShowRewardId
	vuint[] specialShowCondIdList
	vuint specialShowQuestId
}
excel class MoleMole.Config.TalkExcelConfig {
	vuint id
	MoleMole.Config.TalkBeginWay beginWay
	MoleMole.Config.PlayMode activeMode
	MoleMole.Config.LogicType beginCondComb
	MoleMole.Config.TalkCond[] beginCond
	vuint priority
	vuint[] nextTalks
	vuint initDialog
	vuint decoratorID
	vuint[] nextRandomTalks
	vint showRandomTalkCount
	vuint[] npcId
	vuint[] participantId
	string performCfg
	MoleMole.Config.TalkHeroType heroTalk
	MoleMole.Config.TalkLoadType loadType
	vuint questId
	vuint[] extraLoadMarkId
	bool dontBlockDaily
	string prePerformCfg
	bool stayFreeStyle
	bool enableCameraDisplacement
	bool lockGameTime
	MoleMole.Config.TalkMarkType talkMarkType
	vuint[] talkMarkHideList
	vint[] crowdLOD0List
	bool checkActionAfter
	bool questIdleTalk
	bool lowPriority
	MoleMole.Config.TalkExec[] finishExec
}
nozig excel class MoleMole.Config.TalkCond {
	MoleMole.Config.QuestCondType type
	string[] param
}
nozig excel class MoleMole.Config.TalkExec {
	MoleMole.Config.TalkExecType type
	string[] param
}
excel class MoleMole.Config.DialogExcelConfig {
	vuint id
	vuint[] nextDialogs
	MoleMole.Config.TalkShowType talkShowType
	MoleMole.Config.TalkRole talkRole
	vuint talkContentTextMapHash
	__HACK_ _HACK__5
	vuint talkTitleTextMapHash
	vuint talkRoleNameTextMapHash
	string talkAssetPath
	string talkAssetPath_Alter
	string talkAudioName
	__HACK_ _HACK__11
	__HACK_ _HACK__12
	__HACK_ _HACK__13
	string actionBefore
	string actionWhile
	string actionAfter
	float showDuration
	vuint groupId
	string optionIcon
}
excel class MoleMole.Config.TalkRole {
	MoleMole.Config.TalkRoleType type
	string id
}
excel class MoleMole.Config.ReminderExcelConfig {
	vuint id
	vuint speakerTextMapHash
	vuint contentTextMapHash
	float delay
	float showTime
	vuint nextReminderId
	string soundEffect
	MoleMole.Config.ReminderStyleType style
	bool hasAudio
}
excel class MoleMole.Config.ReputationLevelExcelConfig {
	vuint id
	vuint level
	vuint cityId
	vuint levelNameTextMapHash
	vuint nextLevelExp
	vuint rewardId
	vuint requestGroupId
	vuint requestNum
	vuint requestAcceptNum
	vuint functionId
}
excel class MoleMole.Config.ReputationEntranceExcelConfig {
	vuint textId
	MoleMole.Config.ReputationEntranceType entranceId
	vuint cityId
	MoleMole.Config.LogicType condComb
	MoleMole.Config.ReputationEntranceCond[] condVec
	vuint[] condNameVec
	vuint nameTextMapHash
	vuint titleTextMapHash
	vuint explainTitleTextMapHash
	vuint descTextMapHash
	string iconName
	vuint order
}
nozig excel class MoleMole.Config.ReputationEntranceCond {
	MoleMole.Config.ReputationEntranceCondType type
	vuint param1
	vuint param2
}
excel class MoleMole.Config.ReviseLevelGrowExcelConfig {
	vuint id
	vuint[] grade
}
excel class MoleMole.Config.RewardExcelConfig : MoleMole.Config.OutputControlConfig {
	vuint rewardId
	vuint hcoin
	vuint scoin
	vuint playerExp
	vuint avatarExp
	vuint fetterExp
	vuint resin
	MoleMole.Config.RewardItemConfig[] rewardItemList
}
excel class MoleMole.Config.OutputControlConfig {
}
nozig excel class MoleMole.Config.RewardItemConfig {
	vuint itemId
	vuint itemCount
}
excel class MoleMole.Config.RewardPreviewExcelConfig {
	vuint id
	string Desc
	MoleMole.Config.IdCountStrConfig[] previewItems
}
nozig excel class MoleMole.Config.IdCountStrConfig {
	vuint id
	string count
}
excel class MoleMole.Config.RoutineDetailExcelConfig {
	vuint routineId
	MoleMole.Config.GeneralRoutineType routineType
	vuint groupId
	vuint tag
	bool is_backup
	vuint rewardId
	MoleMole.Config.RoutineFinishContent finishContent
	MoleMole.Config.LogicType condComb
	MoleMole.Config.RoutineCondContent[] condVec
	MoleMole.Config.RoutineActionContent[] actionVec
	vuint nameTextMapHash
	vuint descTextMapHash
	vuint goalTextMapHash
	string centerPosition
	vuint radarRadius
	vuint enterDistance
	vuint exitDistance
}
excel class MoleMole.Config.RoutineFinishContent {
	MoleMole.Config.RoutineFinishType finishType
	vuint param1
	vuint param2
	vuint progress
}
nozig excel class MoleMole.Config.RoutineCondContent {
	MoleMole.Config.RoutineCondType type
	vuint param1
	vuint param2
}
nozig excel class MoleMole.Config.RoutineActionContent {
	MoleMole.Config.RoutineActionype type
	vuint param1
	vuint param2
}
excel class MoleMole.Config.TutorialExcelConfig {
	vuint id
	vuint[] detailIdList
	bool pauseGame
	bool isMultiPlatform
	vuint[] mobileDetailIdList
	vuint[] joypadDetailIdList
}
excel class MoleMole.Config.WidgetCameraExcelConfig {
	vuint id
	float hintDistance
	string UIPath
	vuint tipsTextMapHash
	vuint scanTipsTextMapHash
	vuint scanSuccessDescTextMapHash
}
excel class MoleMole.Config.AbilityOverrideExcelConfig {
	vuint id
	string abilityName
	MoleMole.Config.AbilityOverrideParamConfig[] abilitySpecialParamConfig
	string[] paramNameList
	float[] paramValueList
	bool resetAbilitySpecial
}
nozig excel class MoleMole.Config.AbilityOverrideParamConfig {
	string paramName
	float paramValue
}
excel class MoleMole.Config.AbilityPropExcelConfig {
	string propName
	float overallMin
	float overallMax
	float limitTagMin
	float limitTagMax
	bool succeedOwner
}
excel class MoleMole.Config.WatcherConfig {
	vuint id
	MoleMole.Config.WatcherTriggerConfig triggerConfig
	vuint progress
	bool isDisuse
}
excel class MoleMole.Config.WatcherTriggerConfig {
	MoleMole.Config.WatcherTriggerType triggerType
	string[] paramList
}
excel class MoleMole.Config.AchievementExcelConfig : MoleMole.Config.WatcherConfig {
	vuint goalId
	vuint orderId
	vuint preStageAchievementId
	vuint titleTextMapHash
	vuint descTextMapHash
	MoleMole.Config.ShowType isShow
	vuint ps4GroupId
	vuint ps5GroupId
	vuint ps5TitleTextMapHash
	string ttype
	string psTrophyId
	string ps4TrophyId
	string ps5TrophyId
	string icon
	vuint finishRewardId
	bool isDeleteWatcherAfterFinish
	MoleMole.Config.ProgressShowType progressShowType
}
excel class MoleMole.Config.AchievementGoalExcelConfig {
	vuint id
	vuint orderId
	vuint nameTextMapHash
	vuint finishRewardId
	string iconPath
}
excel class MoleMole.Config.PS4GroupExcelConfig {
	vuint id
	vuint nameTextMapHash
	vuint descTextMapHash
	string iconPath
}
excel class MoleMole.Config.PS5GroupExcelConfig {
	vuint id
	vuint nameTextMapHash
	string iconPath
	string exportVersion
}
excel class MoleMole.Config.ActivityAbilityGroupExcelConfig {
	vuint index
	vuint activityId
	vuint avatarId
	vuint weaponId
	vuint nameTextMapHash
}
excel class MoleMole.Config.ActivityUpAvatarExcelConfig {
	vuint id
	vuint activityId
	vuint nameTextMapHash
	vuint[] avatarIdList
}
excel class MoleMole.Config.ActivityArenaChallengePreviewExcelConfig {
	vuint scheduleId
	vuint rewardId
	float[] centerPosList
	vuint guideMainQuestId
	vuint guideSideQuestId
	vuint guideQuestId1
}
excel class MoleMole.Config.ActivityArenaChallengeLevelInfoExcelConfig {
	vuint ID
	vuint scheduleId
	vuint levelId
	vuint levelNameTextMapHash
	vuint monsterPreviewId
	string monsterConfig
	vuint levelDescTextMapHash
	string levelDescParams
	vuint monsterPreviewIdHardChallenge
	string monsterConfigHardChallenge
	vuint levelHardChallengeDescTextMapHash
	string levelHardChallengeDescParams
	vuint levelDetailDescTextMapHash
	vuint[] challengeIdList
}
excel class MoleMole.Config.ActivityArenaChallengeExcelConfig {
	vuint ID
	vuint scheduleId
	vuint arenaChallengeId
	vuint arenaChallengeLevel
	bool isExtraLevel
	vuint watcherId
	vuint challengeTargetTextMapHash
	vuint challengeTarget1TextMapHash
	vuint challengeTarget2TextMapHash
	string challengeDesc
	string challengeDesc1
	string challengeDesc2
}
excel class MoleMole.Config.ActivityArenaChallengeChapterExcelConfig {
	vuint chapterId
	vuint chapterStartDay
	vuint chapterStartQuestId
	vuint chapterEndQuestId
	vuint chapterQuestTitleTextMapHash
	vuint chapterQuestDescTextMapHash
}
excel class MoleMole.Config.AsterLittleExcelConfig {
	vuint stage_id
	vuint[] next_stage_id_vec
	vuint open_day
	vuint[] mission_vec
	vuint[] watcher_id_vec
	vuint titleTextMapHash
	vuint descTextMapHash
}
excel class MoleMole.Config.AsterMidExcelConfig {
	vuint id
	vuint[] camp_vec
}
excel class MoleMole.Config.AsterMidGroupsExcelConfig {
	vuint id
	vuint group_id
	vuint[] battle_group_vec
}
excel class MoleMole.Config.AsterMidDifficultyExcelConfig {
	vuint id
	vuint[] world_level_vec
	vuint drop_id
	vuint reward_id
	vuint resin
	vuint recommendLevel
	vuint monsterLevel
}
excel class MoleMole.Config.AsterMissionExcelConfig {
	vuint missionId
	vuint phase
	vuint watcherId
	vuint transPointId
	string tracePoint
	vuint perfabPathHash
}
excel class MoleMole.Config.AsterStageExcelConfig {
	vuint id
	vuint activityId
	vuint chapterId
	vuint titleTextMapHash
	vuint stageNameTextMapHash
	vuint openday
	vuint openQuestId
	vuint introTextMapHash
	vuint storyTextMapHash
	vuint unlockScore
	vuint[] questIdList
	vuint rewardPreviewId
}
excel class MoleMole.Config.AsterActivityPerviewExcelConfig {
	vuint activityId
	vuint descTextMapHash
	vuint unlockLevel
	vuint rewardPreviewId
	vuint[] watcherList
	vuint specialRewardId
	vuint activityStayTime
	vuint perfabChangeQuestId
}
excel class MoleMole.Config.AsterAvatarUpExcelConfig {
	vuint id
	vuint activityId
	vuint nameTextMapHash
	vuint[] avatarIdList
}
excel class MoleMole.Config.AsterTeamBuffExcelConfig {
	vuint id
	vuint activityId
	vuint nameTextMapHash
	vuint descTextMapHash
	string icon
}
excel class MoleMole.Config.ActivityBannerExcelConfig {
	vuint activityId
	MoleMole.Config.ActivityBannerType bannerType
	vuint rewardPreviewId
	string jsonConfigName
	string prefabPath
	bool showDesc
	vuint descTextMapHash
}
excel class MoleMole.Config.BartenderBasicExcelConfig {
	vuint activityId
	vuint prequestID
	vuint chapterID
	vuint furnitureRewardWatcher
	vuint furnitureRewardID
	vuint namecardRewardWatcher
	vuint namecardRewardID
	vuint minMaterialCount
	vuint maxMaterialCount
	vuint npcMarkID
	vuint challengeOpenDay
	vuint challengeOpenCondID
	vuint storyOpenCondID
	vuint mainEndingQuestID
}
excel class MoleMole.Config.BartenderFormulaExcelConfig {
	vuint id
	MoleMole.Config.BartenderMaterial[] BaseMaterial
	MoleMole.Config.BartenderMaterial[] ExtraMaterial
	vuint[] AvailableAffixList
	MoleMole.Config.BartenderMixingState mixingState
	vuint descTextMapHash
	vuint nameTextMapHash
	vuint type
	vuint lockType
	vuint blurredDescTextMapHash
}
nozig excel class MoleMole.Config.BartenderMaterial {
	vuint id
	vuint count
}
excel class MoleMole.Config.BartenderAffixExcelConfig {
	vuint id
	MoleMole.Config.OrderingType orderType
	vuint materialId
	vuint materialCount
}
excel class MoleMole.Config.BartenderOrderExcelConfig {
	vuint id
	vuint formulaId
	vuint[] affixId
	MoleMole.Config.BartenderCupType cupType
	vuint time
	vuint score
	string iconName
	vuint descTextMapHash
}
excel class MoleMole.Config.BartenderTaskExcelConfig {
	vuint id
	vuint unlockDay
	vuint parentQuestId
	vuint unlockCond
	vuint avatarID1
	vuint avatarID2
	vuint rewardPreviewId
	vuint nameTextMapHash
	vuint descTextMapHash
}
excel class MoleMole.Config.BartenderTaskOrderExcelConfig {
	vuint questId
	vuint[] orderId
	vuint contentParam
	vuint dialogIdSucc
	vuint dialogIdFail
	bool isGuideQuest
	vuint nextQuestId
}
excel class MoleMole.Config.BartenderLevelExcelConfig {
	vuint id
	vuint levelNameTextMapHash
	vuint unlockDay
	vuint levelDuration
	vuint[] orderList
	vuint orderCD
	vuint[] watcherIdList
	vuint levelDescriptionTextMapHash
}
excel class MoleMole.Config.BartenderEventExcelConfig {
	MoleMole.Config.BartenderEffectType effectType
	vuint miscId
	string effectName
}
excel class MoleMole.Config.BlessingScanExcelConfig {
	vuint id
	vuint typeId
	MoleMole.Config.BlessingScanType scanType
	vuint refId
	MoleMole.Config.BlessingPicUpConfig[] picUpConfig
	vuint scanDuration
	vuint scanTime
	string hitBoxesNodeName
}
nozig excel class MoleMole.Config.BlessingPicUpConfig {
	vuint id
	vuint prob
}
excel class MoleMole.Config.BlessingScanTypeExcelConfig {
	vuint id
	vuint typeId
	vuint priority
	vuint[] upPoolId
	vuint dailyScanLimit
	vuint typeNameTextMapHash
	vuint typeNameWithColorTextMapHash
}
excel class MoleMole.Config.BlessingScanPicExcelConfig {
	vuint id
	vuint grantRewardCost
	string iconName
	vuint nameTextMapHash
}
excel class MoleMole.Config.BlitzRushExcelConfig {
	vuint id
	vuint activityId
	vuint contentDuration
	vuint dungeonId
	vuint dungeonEntryId
	vuint dungeonRewardId
	vuint prePreQuestID
	vuint[] preQuestID
	vuint rewardPreview
	bool hideOathEntrance
}
excel class MoleMole.Config.BlitzRushStageExcelConfig {
	vuint id
	vuint openDay
	vuint[] watcherIdList
	vuint stageTitleTextMapHash
	vuint gamePlayDescTextMapHash
	vuint guidetaskDescTextMapHash
	vuint guideQuestID
	vuint pushTipsId
}
excel class MoleMole.Config.BlitzRushParkourExcelConfig {
	vuint id
	vuint openDay
	vuint groupId
	vuint titleTextMapHash
	vuint descTextMapHash
	vuint[] watcherIdList
}
excel class MoleMole.Config.BounceConjuringPreviewExcelConfig {
	vuint id
	vuint activityId
	vuint activityStayTime
	vuint preQuestId
	vuint questWatcherID
	vuint rewardPreviewId
	vuint matchID
}
excel class MoleMole.Config.BounceConjuringChapterExcelConfig {
	vuint id
	vuint chapterId
	vuint openDay
	vuint galleryId
	vuint DraftID
	vuint[] watcherIdList
	vuint titleTextMapHash
	vuint descTextMapHash
	vuint[] otherBallList
	vuint[] newBallList
	vuint[] otherItemList
	vuint[] upItemList
	float[] pos
}
excel class MoleMole.Config.BounceConjuringItemExcelConfig {
	vuint id
	vuint titleTextMapHash
	vuint descTextMapHash
	vuint bgIconHash
}
excel class MoleMole.Config.BuoyantCombatExcelConfig {
	vuint id
	vuint activityId
	vuint rewardPreviewId
	vuint pushTipsId
	vuint[] levelIdList
}
excel class MoleMole.Config.ChannellerSlabPreviewExcelConfig {
	vuint id
	vuint activityId
	vuint activityStayTime
	vuint unlockQuestID
	vuint slabQuestID
	vuint unlockPlayerLevel
	vuint levelRewardGadgetID
	bool isMaskAvatarReward
	vuint rewardPreviewId
}
excel class MoleMole.Config.ChannellerSlabChapterExcelConfig {
	vuint id
	vuint chapterId
	vuint openDay
	vuint titleTextMapHash
	vuint preQuest
}
excel class MoleMole.Config.ChannellerSlabLevelExcelConfig {
	vuint id
	vuint stageID
	vuint waveID
	vuint pointNameTextMapHash
	vuint campNameTextMapHash
	vuint descTextMapHash
	vuint previewRewardID
	vuint rewardID
	vuint groupID
	vuint buffNum
}
excel class MoleMole.Config.ChannellerSlabDungeonExcelConfig {
	vuint stageID
	vuint dungeonID
	vuint rewardID
	vuint pointID
	float[] pos
	vuint titleTextMapHash
	vuint descTextMapHash
}
excel class MoleMole.Config.ChannellerSlabBuffExcelConfig {
	vuint id
	vuint buffNameTextMapHash
	vuint descTextMapHash
	string[] descParam
	vuint materialID
	string icon
	vuint cost
	MoleMole.Config.ChannellerSlabBuffQuality buffQuality
	MoleMole.Config.QualityType buffQualityType
}
excel class MoleMole.Config.ChannellerSlabBuffEnergyExcelConfig {
	vuint id
	vuint avatarLevel
	vuint singleEnergy
	vuint mpEnergy
}
excel class MoleMole.Config.ChannellerSlabBuffCostExcelConfig {
	vuint id
	MoleMole.Config.QualityType buffQualityType
	vuint buffCost
	vuint itemID
	vuint descTextMapHash
}
excel class MoleMole.Config.ChannellerSlabLoopDungeonPreviewExcelConfig {
	vuint id
	vuint activityId
	vuint titleTextMapHash
	vuint entryDescTextMapHash
	vuint descTextMapHash
	vuint openDay
	vuint pointID
}
excel class MoleMole.Config.ChannellerSlabLoopDungeonRewardExcelConfig {
	vuint id
	vuint scoreGrade
	vuint rewardID
}
excel class MoleMole.Config.ChannellerSlabLoopDungeonDifficultyExcelConfig {
	vuint id
	vuint dungeonId
	vuint stageId
	MoleMole.Config.ChannellerSlabDifficulty difficulty
	vuint monsterLevel
	float scoreRatio
	vuint baseScore
}
excel class MoleMole.Config.ChannellerSlabLoopDungeonConditionExcelConfig {
	vuint id
	vuint descTextMapHash
	MoleMole.Config.ChannellerSlabCondition conditionType
	string icon
	vuint conditionParam1
	vuint conditionParam2
	vuint exclusiveId
	vint score
}
excel class MoleMole.Config.ChannellerSlabLoopDungeonExcelConfig {
	vuint id
	vuint openDay
	vuint titleTextMapHash
	vuint contentTextMapHash
	vuint[] monsterIdVec
	vuint[] limitingConditionVec
	vuint firstPassRewardId
}
excel class MoleMole.Config.ActivityChessPreviewExcelConfig {
	vuint activityID
	vuint descTextMapHash
	vuint rewardPreviewID
	vuint preQuestMainID
	vuint openQuestMainID
	vuint[] watcherList
	vuint matchPlayerLimit
	bool openTeachDungeon
	vuint teachDungeonID
	vuint teachMapID
	vuint punishTime
	vuint coinID
	vuint seriesID
	vuint[] teachScoreIdList
}
excel class MoleMole.Config.ActivityChessLevelExcelConfig {
	vuint level
	vuint descTextMapHash
	vuint expToNext
	vuint homeHP
	vuint initialBuild
	vuint cardCount
	vuint cardCost
	MoleMole.Config.CardFortuneType cardFortune
	vuint[] fortuneList
	vuint freeCardCount
	bool isNewGearUnlocked
	bool isNewCardUnlocked
}
excel class MoleMole.Config.ActivityChessMapExcelConfig {
	vuint chessMapID
	vuint mapNameTextMapHash
	vuint descTextMapHash
	vuint unlockTipsTextMapHash
	string mapIconPath
	vuint buildGearLimit
	vuint dungeonID
	vuint entryPointId
	vuint unlockDay
	bool isTeachMap
	vuint prevMapID
	bool show
	vuint[] entrancePointIDList
	vuint[] exitPointIDList
}
excel class MoleMole.Config.ActivityChessScheduleExcelConfig {
	vuint day
	vuint expUpLimit
	vuint[] openMapList
	vuint condID
}
excel class MoleMole.Config.ActivityChessGearExcelConfig {
	vuint gearID
	vuint gearNameTextMapHash
	vuint gearShortNameTextMapHash
	vuint descTextMapHash
	string gearIconPath
	string tagIconPath
	vint attack
	vint mastery
	vint attackSpeed
	vint attackRange
	vuint build_cost
	vuint demolition_refund
	vuint gadget_id
	vuint build_limit
	vuint[] ban_dungeon_list
	bool isEnableRotate
	vuint initLevel
	vuint needChessLevel
}
excel class MoleMole.Config.ActivityChessCardExcelConfig {
	vuint ID
	vuint number
	MoleMole.Config.ChessCardTag tag
	vuint needChessLevel
	vuint cardNameTextMapHash
	vuint descTextMapHash
	vuint extraDescTextMapHash
	vuint extraDesc2TextMapHash
	float[][] descParamList
	bool[] descParamSuperpositionList
	bool isDisused
	MoleMole.Config.ChessCardNumericalModificationType cardNumericalModificationType
	MoleMole.Config.ChessCardNumericalModificationMode cardNumericalModificationMode
	float cardNumericalModificationValue
	vuint costPoints
	MoleMole.Config.ChessCardType cardType
	MoleMole.Config.ChessCardQualityType cardQualityType
	vuint cardCount
	MoleMole.Config.ChessCardEffect effect
	vuint curseWeight
	bool isCanAttachCurse
	bool isRemoveOnPick
	bool isShowOnPick
	MoleMole.Config.ChessCardEffect[] extraEffectList
}
nozig excel class MoleMole.Config.ChessCardEffect {
	MoleMole.Config.ChessCardTargetType targetType
	vuint[] targetParamList
	MoleMole.Config.ChessCardEffectType effectType
	string effectStrParam
	vint effectParam1
	vint effectParam2
	vint effectParam3
	vuint beginRound
	vuint activeRounds
	vuint effectIndex
}
excel class MoleMole.Config.ActivityChessMapPointExcelConfig {
	vuint ID
	float coordX
	float coordY
}
excel class MoleMole.Config.ActivityChessAffixExcelConfig {
	vuint ID
	vuint nameTextMapHash
	vuint descTextMapHash
}
excel class MoleMole.Config.ActivityCrystalLinkLevelExcelConfig {
	vuint levelId
	vuint scheduleId
	vuint openDay
	vuint dungeonId
	vuint[] trialAvatarList
	vuint[] watcherIdList
	vuint[] condBuffIdList
	vuint[] effectBuffIdList
	vuint levelTitleTextMapHash
	vuint levelDescTextMapHash
	MoleMole.Config.MonsterConfig[] monsterConfigArray
	MoleMole.Config.MainMonsterConfig[] mainMonsterConfigArray
	vuint[] scoreLevelList
	vuint condCD
	vuint effLastTime
}
nozig excel class MoleMole.Config.MonsterConfig {
	string[] boss
	string[] monster
}
nozig excel class MoleMole.Config.MainMonsterConfig {
	vuint[] boss
	vuint[] monster
}
excel class MoleMole.Config.ActivityCrystalLinkCondBuffExcelConfig {
	vuint buffId
	string abilityGroupName
	string abilityName
	vuint AbilityTitleTextMapHash
	vuint AbilityDescTextMapHash
	vuint iconNameHash
	string[] desParam
}
excel class MoleMole.Config.ActivityCrystalLinkEffectBuffExcelConfig {
	vuint buffId
	string abilityGroupName
	string abilityName
	vuint AbilityTitleTextMapHash
	vuint AbilityDescTextMapHash
	vuint iconNameHash
	string[] desParam
}
excel class MoleMole.Config.ActivityCrystalLinkDifficultyExcelConfig {
	vuint difficultyId
	vuint scheduleId
	vuint dungeonLevel
	float scoreRatio
	vuint monsterLevel
	MoleMole.Config.CrystalLinkDifficultyType difficulty
	vuint descTextMapHash
}
excel class MoleMole.Config.ActivityDeliveryExcelConfig {
	vuint scheduleId
	vuint[] dailyConfigIdList
	vuint needPlayerLevel
}
excel class MoleMole.Config.ActivityDeliveryDailyExcelConfig {
	vuint dailyConfigId
	MoleMole.Config.DeliveryQuestConfig[] deliveryQuestConfig
	vuint[] taskDesc
	vuint dailyRewardId
}
nozig excel class MoleMole.Config.DeliveryQuestConfig {
	vuint parentQuestId
	vuint deliveryQuestId
	vuint startQuestId
	vuint talkQuestId
	vuint[] watcherId
	vuint itemId
}
excel class MoleMole.Config.DigOverAllExcelConfig {
	vuint id
	vuint activityID
	vuint duration
	vuint questUnlockID
	vuint questID
	vuint stageUnlockID
	vuint rewardPreviewId
	vuint endQuestShowCond
	vuint endQuestFinishCond
	vuint endQuestID
}
excel class MoleMole.Config.DigStageDataExcelConfig {
	vuint stageID
	vuint questUnlockID
	vuint questID
	vuint stageUnlockID
	vuint questTitleTextMapHash
	vuint questDescTextMapHash
	vuint pushTipsId
	vuint unlockTime
}
excel class MoleMole.Config.DigGroupLinkExcelConfig {
	vuint id
	vuint stage
	vuint groupLinkBundleId
	vuint groupLinkBundleId2
	vuint groupLinkChangeCond
	vuint areaNameTextMapHash
	vuint[] watcherID
	string background
}
excel class MoleMole.Config.DragonSpinePreviewExcelConfig {
	vuint id
	vuint activityId
	vuint descTextMapHash
	vuint preQuestId
	vuint unlockLevel
	vuint rewardPreviewId
	vuint contentDuration
	vuint questId
	vuint[] questIdList
}
excel class MoleMole.Config.DragonSpineStageExcelConfig {
	vuint id
	vuint chapterId
	vuint descTextMapHash
	vuint[] coin_id_list
	vuint openday
	vuint preQuestId
	vuint[] mission_id_list
	vuint rewardPreviewId
}
excel class MoleMole.Config.DragonSpineMissionExcelConfig {
	vuint id
	vuint chapterId
	vuint watcherId
	MoleMole.Config.DragonSpineMissionFinishConfig[] finishExec
}
nozig excel class MoleMole.Config.DragonSpineMissionFinishConfig {
	MoleMole.Config.DragonSpineMissionFinishExecType type
	string[] param
}
excel class MoleMole.Config.DragonSpineEnhanceExcelConfig {
	vuint id
	vuint activityAbilityGroupId
	vuint process
	vuint descTextMapHash
}
excel class MoleMole.Config.EchoShellExcelConfig {
	vuint id
	MoleMole.Config.EchoShellType echoShellType
	vuint storyId
	vuint voiceTitleTextMapHash
	vuint voiceDescTextMapHash
	vuint[] voiceList
	vuint[] reminderList
	string imagePath
	vuint markID
	float[] markPosition
	vuint markTipTitleTextMapHash
	vuint markTipContentTextMapHash
	vuint[] exclusiveSceneTags
	vuint relatedDungeonID
	vuint dungeonPassedLockTipTextMapHash
	vuint relatedDungeonEntryID
	vuint orderID
	vuint[] relatedDungeonEntryIDList
	vuint relatedSubQuestID
}
excel class MoleMole.Config.EchoShellRewardExcelConfig {
	vuint id
	vuint rewardId
	vuint shellCount
	bool showAtTop
}
excel class MoleMole.Config.EchoShellStoryExcelConfig {
	vuint id
	vuint storyTitleTextMapHash
}
excel class MoleMole.Config.EchoShellFloatSignalExcelConfig {
	vuint id
	vuint groupId
	vuint configId
}
excel class MoleMole.Config.EchoShellPreviewExcelConfig {
	vuint id
	vuint activityId
	vuint specialVoiceID
	vuint specialVoiceUnlockCondID
	vuint specialVoiceLockTipTextMapHash
	bool isBetaBlocked
}
excel class MoleMole.Config.EchoShellSummerTimeDungeonExcelConfig {
	vuint dungeonId
	vuint totalChestCount
	vuint totalShellCount
}
excel class MoleMole.Config.EffigyChallengeExcelConfig {
	vuint id
	vuint dayIndex
	vuint dungeonId
	string prefab
	vuint titleTextMapHash
	vuint contentTextMapHash
	vuint[] limitingConditionVec
	vuint[] upAvatarVec
	vuint firstPassRewardId
}
excel class MoleMole.Config.EffigyDifficultyExcelConfig {
	vuint id
	vuint challengeId
	vuint baseScore
	MoleMole.Config.EffigyDifficulty monsterDifficulty
	vuint monsterLevel
	float scoreRatio
	vuint finishChallengeIndex
}
excel class MoleMole.Config.EffigyRewardExcelConfig {
	vuint id
	vuint scoreGrade
	vuint rewardID
}
excel class MoleMole.Config.EffigyLimitingConditionExcelConfig {
	vuint id
	vuint descTextMapHash
	MoleMole.Config.EffigyCondition conditionType
	string icon
	vuint conditionParam1
	vuint[] conditionParam2
	vuint exclusiveId
	bool isInRow
	vuint exclusiveDescTextMapHash
	vint score
}
excel class MoleMole.Config.ExpeditionActivityPreviewExcelConfig {
	vuint id
	vuint questId
	vuint prequestId
	vuint npcCityId
}
excel class MoleMole.Config.ExpeditionPathExcelConfig {
	vuint id
	vuint difficultyId
	string superElement
	vuint basicRewardId
	vuint bonusRewardId
	vuint pathNameTextMapHash
	vuint pathDescTextMapHash
	vuint[] levelRewardList
	vuint rewardPreviewId
}
excel class MoleMole.Config.ExpeditionDifficultyExcelConfig {
	vuint id
	vuint needHours
	vuint minPlayer
	vuint maxPlayer
	vuint minRefreshCount
	vuint maxRefreshCount
	float coef
}
excel class MoleMole.Config.ExpeditionBonusExcelConfig {
	vuint id
	vuint avatarLevel
	float probability
}
excel class MoleMole.Config.ExpeditionActivityMarkerExcelConfig {
	vuint id
	float posX
	float posY
	vuint pictureHash
}
excel class MoleMole.Config.ExpeditionChallengeExcelConfig {
	vuint id
	vuint unlockTime
	vuint groupId
	vuint rewardChallengeIndex
	vuint rewardId
	vuint challengeNameTextMapHash
	vuint challengeDescTextMapHash
	string superElement
	float[] centerPosList
	vuint centerRadius
}
excel class MoleMole.Config.FleurFairPreviewExcelConfig {
	vuint id
	vuint activityId
	vuint activityStayTime
	vuint unlockQuestID
	vuint unlockPlayerLevel
	vuint gameplayPreQuest
	vuint rewardPreview
}
excel class MoleMole.Config.FleurFairChapterExcelConfig {
	vuint id
	vuint chapterId
	vuint openDay
	vuint titleTextMapHash
	vuint descTextMapHash
	vuint mainQuest
	vuint preQuest
	vuint[] miniQuest
	string icon
}
excel class MoleMole.Config.FleurFairMiniGameExcelConfig {
	vuint id
	MoleMole.Config.FleurFairMiniGameType miniGameType
	vuint descTextMapHash
	vuint galleryId
	vuint configId
	vuint openDay
	vuint questId
	vuint rewardRankLowTextMapHash
	vuint rewardRankMiddleTextMapHash
	vuint rewardRankHighTextMapHash
	vuint[] watcherIdList
	vuint[] avatarIdList
	vuint[] avatarScore
	vuint[] tipsIdList
	vuint tipsDescTextMapHash
	float[] pos
}
excel class MoleMole.Config.FleurFairTipsExcelConfig {
	vuint id
	string icon
	vuint titleTextMapHash
	vuint descTextMapHash
}
excel class MoleMole.Config.FleurFairDungeonExcelConfig {
	vuint id
	vuint sectionId
	vuint openDay
	vuint obtainCoinLimit
	vuint activityId
	vuint[] watcherIdList
	vuint dungeonId
	vuint[] miniGameList
	vuint[] monsterList
	vuint[] energyGradeList
	vuint initialEnergy
	vuint energyLimit
	vuint successRewardId
	vuint failureRewardId
	vuint punishTime
	vuint titleTextMapHash
	vuint descTextMapHash
}
excel class MoleMole.Config.FleurFairDungeonStatExcelConfig {
	vuint id
	vuint galleryId
	MoleMole.Config.FleurFairDungeonStatType statType
	string[] statParamList
	MoleMole.Config.OrderingType orderingType
	MoleMole.Config.FleurFairDungeonStatMethod statMethod
	vuint priority
	vuint titleTextMapHash
	vuint descTextMapHash
}
excel class MoleMole.Config.FleurFairBuffEnergyStatExcelConfig {
	vuint id
	vuint galleryId
	string statParam
	vuint priority
	vuint titleTextMapHash
}
excel class MoleMole.Config.FlightActivityExcelConfig {
	vuint id
	vuint activity_id
	vuint preview_reward_id
	vuint start_quest_id
	vuint npc_id
	vuint[] medal_id
	MoleMole.Config.FlightDailyPointFactor[] daily_factor_vec
}
nozig excel class MoleMole.Config.FlightDailyPointFactor {
	vuint time_factor
	vuint gold_factor
}
excel class MoleMole.Config.FlightActivityMedalExcelConfig {
	vuint id
	string medal_icon
	MoleMole.Config.FlightDailyInfo[] daily_info
}
nozig excel class MoleMole.Config.FlightDailyInfo {
	vuint watcher
}
excel class MoleMole.Config.FlightActivityDayExcelConfig {
	vuint id
	float[] pos
}
excel class MoleMole.Config.ActivityGachaRobotExcelConfig {
	vuint robotId
	vuint[] shapeList
	vuint[] colorList
	vuint[] actionList
	MoleMole.Config.ActivityGachaRobot type
	vuint furnitureId
	vuint materialId
	string modelPath
	vuint animatorID
	vuint playInterval
	vuint descTextMapHash
	string audio
}
excel class MoleMole.Config.ActivityGachaStageExcelConfig {
	vuint stageId
	vuint nextStageId
	bool isTech
	MoleMole.Config.ActivityGachaTargetType type
	vuint[] groupIdList
	vuint[] groupNumList
	vuint[] stageGroupIdList
	vuint[] taskContentList
	vuint condID
	bool isNeedFinish
	vuint watcherID
	vuint openQuestID
}
excel class MoleMole.Config.ActivityGachaBaseExcelConfig {
	vuint activityId
	vuint materialId
	vuint elemTime
	vuint taskContentId
	vuint unlockStageId
	vuint maxConvert
	vuint robotLimit
	vuint robotGuarNum
	vuint robotHiddenFirstGuarNum
	vuint robotHiddenGuarNum
	vuint robotGuarRate
	vuint robotHiddenGuarRate
	vuint[] watcherList
	vuint[] questList
	vuint reminderId
	vuint exchangeTipsCond
	vuint freeModeUnlockQuest
}
excel class MoleMole.Config.ActivityGachaStageTextExcelConfig {
	vuint stageId
	vuint stageTitleTextMapHash
	vuint stageDesc1TextMapHash
	vuint stageDesc2TextMapHash
	vuint stageDesc3TextMapHash
	vuint questTipsTextMapHash
}
excel class MoleMole.Config.ActivityGearExcelConfig {
	vuint id
	vuint activityId
	vuint[] gearLevelIdList
	float gearToothLength
	float gearThickness
	string shaftSelectEffect
	string shaftTipEffect
	string endGearSuccessEffect
	string coverUpEffect
	string gearPlaceEffect
	vuint pushTipsId
	vuint[] watcherIdList
	float playerTipDelay
}
excel class MoleMole.Config.ActivityGearLevelExcelConfig {
	vuint id
	vuint[] providedGears
	vuint openDayIndex
	vuint levelNameTextMapHash
	vuint watcherID
	vuint redpointIDSubPage
	vuint redpointIDLevelSelect
}
excel class MoleMole.Config.ActivityGearGadgetGearExcelConfig {
	vuint id
	vuint gadgetID
	float[] gearRadius
	vuint[] gearToothCount
	vuint materialID
	string gearCanNotPlaceEffect
	string gearPlaceEffect
	string coverUpEffect
}
excel class MoleMole.Config.ActivityGearGadgetShaftExcelConfig {
	vuint id
	vuint gadgetID
	float radius
	float[] layerOffsetList
	float canNotPlaceTipOffset
	float[] clenchRate
}
excel class MoleMole.Config.ActivityGearJigsawExcelConfig {
	vuint id
	vuint mainQuestID
	string placePosSelectEffect
	string coverUpEffect
	string rotateEffect
	vuint questStateTriggerId
	vuint pushTipsId
}
excel class MoleMole.Config.ActivityGearGadgetJigsawExcelConfig {
	vuint id
	vuint gadgetID
	vuint placePosID
	vuint materialID
	string rotateEffect
}
excel class MoleMole.Config.ActivityGroupLinksExcelConfig {
	vuint linkId
	vuint[] setList
}
excel class MoleMole.Config.GroupLinksBundleExcelConfig {
	vuint Id
	MoleMole.Config.ActivityGroupLinkType linkType
	vuint[] groupList
	vuint hintGroup
	vuint hintRadius
	MoleMole.Config.ActivityGroupLinkRewardType rewardType
	vuint rewardId
	vuint reviseLevel
	string icon
	vuint nameTextMapHash
	vuint tipsTextMapHash
	MoleMole.Config.ActivityGroupLinkPlayType playType
	bool autoTracingAfterActive
	vuint uiRadius
	vuint trackId
	bool guestShow
	bool isDefaultShowMark
	bool showAreaOnMap
	bool alwaysShowArea
	vuint DEIEPOGDPOC
	bool PNDNMIBNENA
}
excel class MoleMole.Config.GroupLinksBundleRewardExcelConfig {
	vuint rewardId
	vuint rewardPreviewID
	vuint dropID
}
excel class MoleMole.Config.ActivityHachiStageExcelConfig {
	vuint Id
	vuint stageId
	vuint[] questId
	vuint questTitleTextMapHash
	vuint questDescTextMapHash
	vuint stealthTitleTextMapHash
	vuint battleDescTextMapHash
	vuint stealthWatcher
	vuint battleWatcher
	string stealthGroup
	string battleGroup
	vuint stealthPushTips
	vuint battlePushTips
	vuint pushTip
	vuint openDay
	float[] stealthTriggerPointMarkPos
	float[] stealthMarkPos
	float[] battleMarkPos
	vuint[] finalQuestId
	vuint[] mapMarkLoadQuest
	vuint stealthChallengeIndex
	vuint battleChallengeIndex
	vuint stealthRadius
	vuint battleRadius
}
excel class MoleMole.Config.ActivityHachiFinalStageExcelConfig {
	vuint Id
	vuint stageId
	vuint[] questId
	vuint questTitleTextMapHash
	vuint questDescTextMapHash
	vuint bossTitleTextMapHash
	vuint bossDescTextMapHash
	vuint dungeonId
	vuint[] watcherIdList
	vuint openDay
	vuint[] finalQuestID
	vuint dungeonEntryId
}
excel class MoleMole.Config.HideAndSeekSkillExcelConfig {
	vuint id
	vuint challengeID
	vuint skillID
	vuint order
	MoleMole.Config.HIDE_AND_SEEK_SKILL_CATEGORY skillCategory
	MoleMole.Config.HIDE_AND_SEEK_SKILL_SUB_CATEGORY skillSubCategory
	bool isDefault
	vuint categoryDescTextMapHash
	vuint skillIconPathHash
}
excel class MoleMole.Config.HideAndSeekMatchExcelConfig : MoleMole.Config.MatchLimitExcelConfig {
	vuint titleTextMapHash
	vuint unlockTipsTextMapHash
	vuint unlockTips2TextMapHash
	vuint unlockTips3TextMapHash
	vuint dscTextMapHash
	vuint mapIconPathHash
	vuint mapSmallIconPathHash
	vuint sceneId
	vuint groupId
	vuint[] transportPointList
	vuint[] durationList
	vuint galleryID
}
excel class MoleMole.Config.HideAndSeekAvatarSDExcelConfig {
	vuint avatarId
	vuint descTextMapHash
}
excel class MoleMole.Config.IrodoriExcelConfig {
	vuint subId
	vuint nameTextMapHash
	vuint openCondId
	vuint openDay
	vuint preQuestId
	vuint guideQuestId
	vuint pushTipsId
	vuint guideQuestTitleTextMapHash
	vuint guideQuestDescTextMapHash
}
excel class MoleMole.Config.IrodoriQuestExcelConfig {
	vuint Id
	vuint questId
	vuint[] mainQuestIds
	MoleMole.Config.LunaRiteQuestType questType
	vuint openDay
	vuint chapterTextMapHash
	vuint nameTextMapHash
	vuint descTextMapHash
	vuint preQuestId
	vuint[] preOtherQuestIds
}
excel class MoleMole.Config.IrodoriFlowerGroupExcelConfig {
	vuint groupId
}
excel class MoleMole.Config.IrodoriFlowerThemeExcelConfig {
	vuint themeId
	vuint gadgetId
	vuint unlockDay
	vuint themeTitleTextMapHash
	vuint themeDescTextMapHash
	vuint themeTargetTextMapHash
	vuint targetPictureHash
	float timeLimit
	vuint[] flowerId
	vuint stageUnlockCondId
	vuint themeUnlockCondId
	vuint watcherId
	vuint questId
}
excel class MoleMole.Config.IrodoriChessGearExcelConfig {
	vuint gearId
	vuint gadgetId
	bool isEnableRotate
	vuint initLevel
	vuint gearNameTextMapHash
	vuint gearShortNameTextMapHash
	vuint descTextMapHash
	string gearIconPath
	string tagIconPath
	string mapIconPath
	vint attack
	vint mastery
	vint attackSpeed
	vint attackRange
}
excel class MoleMole.Config.IrodoriChessLevelExcelConfig {
	vuint levelId
	vuint[] watcherList
	vuint normalMapId
	vuint hardMapId
	vuint unlockHardScore
}
excel class MoleMole.Config.IrodoriChessMapExcelConfig {
	vuint mapId
	vuint dungeonId
	vuint entryPointId
	bool show
	vuint[] cardPool
	vuint totalCardPoints
	map<vuint,vuint> singleGearLimits
	vuint[] entrancePointList
	vuint[] exitPointList
	vuint[] disorderList
	vuint[] entryPageDisorderList
	vuint initBuildingPoints
	bool isHardMap
	vuint mapNameTextMapHash
	vuint descTextMapHash
	vuint difficulty
	string mapIconPath
	map<vuint,vuint> presetGearMap
}
excel class MoleMole.Config.IrodoriChessMapPointExcelConfig {
	vuint ID
	float coordX
	float coordY
}
excel class MoleMole.Config.IrodoriChessDisorderExcelConfig {
	vuint disorderId
	vuint descTextMapHash
}
excel class MoleMole.Config.IrodoriChessCardExcelConfig {
	vuint ID
	vuint costPoints
	MoleMole.Config.IrodoriChessCardEffect effect
	MoleMole.Config.IrodoriChessCardEffect[] extraEffectList
	MoleMole.Config.IrodoriChessCardType cardType
	MoleMole.Config.IrodoriChessCardQualityType cardQualityType
	MoleMole.Config.IrodoriChessCardTag tag
	vuint cardNameTextMapHash
	vuint descTextMapHash
	float[] descParam
	MoleMole.Config.IrodoriCardNumerical[] cardNumericalList
}
nozig excel class MoleMole.Config.IrodoriChessCardEffect {
	MoleMole.Config.IrodoriChessCardTargetType targetType
	vuint[] targetParamList
	MoleMole.Config.IrodoriChessCardEffectType effectType
	string effectStrParam
	vint effectParam1
	vint effectParam2
	vint effectParam3
	vuint effectIndex
}
nozig excel class MoleMole.Config.IrodoriCardNumerical {
	MoleMole.Config.IrodoriChessCardNumericalModificationType cardNumericalModificationType
	MoleMole.Config.IrodoriChessCardNumericalModificationMode cardNumericalModificationMode
	float cardNumericalModificationValue
}
excel class MoleMole.Config.IrodoriChessAffixExcelConfig {
	vuint ID
	vuint nameTextMapHash
	vuint descTextMapHash
}
excel class MoleMole.Config.IrodoriMasterExcelConfig {
	vuint ID
	vuint levelID
	MoleMole.Config.IrodoriMasterLevelType levelType
	vuint unlockDay
	vuint[] watcherList
	vuint sliverChallengeID
	vuint goldChallengeID
	vuint goldChallengeTime
	vuint condID
	vuint guideCondID
	vuint guideQuestID
	vuint battleDescTextMapHash
	vuint battleNameTextMapHash
}
excel class MoleMole.Config.IrodoriMasterLevelExcelConfig {
	vuint Id
	vuint sceneId
	vuint groupId
	vuint pointId
	vuint galleryId
	string cutscene
	vuint galleryAbilityGroupIndex
	vuint[] trialAvatarList
	vuint[] watcherList
}
excel class MoleMole.Config.IrodoriPoetryExcelConfig {
	vuint ID
	vuint condID
	vuint themeCondID
	vuint unlockDay
	MoleMole.Config.IrodoriPoetryEntityType entityType
	MoleMole.Config.IrodoriPoetryScanConfig[] scanConfigList
	vuint mainQuestID
	vuint minInspirationQuestID
	vuint fillPoetryQuestID
	vuint[] reminderIDList
	vuint watcherID
	vuint cameraHintTextMapHash
	vuint themeTitleTextMapHash
	vuint themeDescTextMapHash
	vuint poetryTitleTextMapHash
	vuint[] existsLineIDList
}
nozig excel class MoleMole.Config.IrodoriPoetryScanConfig {
	vuint[] indexIdList
	vuint lineId
}
excel class MoleMole.Config.IrodoriPoetryLineExcelConfig {
	vuint ID
	vuint contentTextMapHash
	vuint var
}
excel class MoleMole.Config.ActivityIslandPartyOverallExcelConfig {
	vuint id
	vuint activityId
	vuint cardDisplayCountdown
	vuint scoreDisplayCountdown
}
excel class MoleMole.Config.ActivityIslandPartyStageExcelConfig {
	vuint id
	MoleMole.Config.ActivityIslandPartyStageType stageType
	vuint galleryId
	vuint seriesId
	vuint matchId
	vuint draftId
	vuint unlockDay
	vuint titleTextMapHash
	vuint descTextMapHash
	vuint bannerDescTextMapHash
	vuint failHintTextMapHash
	vuint[] watcherList
	vuint[] scoreIDList
	vuint pushTipsID
}
excel class MoleMole.Config.ActivityIslandPartyScoreExcelConfig {
	vuint id
	vuint descTextMapHash
	vuint score
}
excel class MoleMole.Config.LuminanceStoneChallengeStageExcelConfig {
	vuint stageId
	vuint dayIndex
	vuint stageTitleTextMapHash
	vuint stageDescTextMapHash
	vuint stageLockTitleTextMapHash
	vuint stageLockDescTextMapHash
	vuint[] relatedCondId
	vuint[] watcherList
	vuint[] questList
	vuint BundleID
	vuint pushTipsID
}
excel class MoleMole.Config.LuminanceStoneChallengeOverallExcelConfig {
	vuint id
	vuint activityId
	vuint finalStageId
	vuint finalGalleryId
	vuint[] parentQuestIdList
	vuint rewardPreviewId
	vuint galleryRuleDescTextMapHash
}
excel class MoleMole.Config.LunaRitePreviewExcelConfig {
	vuint Id
	vuint activityId
	vuint unlockQuestId
	vuint unlockQuestId2
	vuint unlockPlayerLevel
	vuint rewardId
	vuint activityQuestId
	vuint guideQuestId
	vuint challengePushTipsID
	vuint plotPushTipsID
	vuint plotPushTipsPreQuestID
	vuint maxAtmosphere
}
excel class MoleMole.Config.LunaRiteQuestExcelConfig {
	vuint Id
	vuint questId
	MoleMole.Config.LunaRiteQuestType questType
	vuint openDay
	vuint preQuestId
	vuint atmosphereNeed
	string chapterIcon
	vuint chapterTextMapHash
	vuint nameTextMapHash
	vuint descTextMapHash
}
excel class MoleMole.Config.LunaRiteBattleBuffExcelConfig {
	vuint Id
	MoleMole.Config.LunaRiteRegionType regionType
	vuint number
	vuint buffTextMapHash
	vuint rewardId
}
excel class MoleMole.Config.MichiaeErosionAreaExcelConfig {
	vuint areaId
	float A1
	float A2
	float A3
}
excel class MoleMole.Config.MichiaeAntiErosionExcelConfig {
	vuint foundationLevel
	float B1
	float B2
	float B3
	float crystalEnergyMaxLimit
}
excel class MoleMole.Config.MichiaeBattleSkillExcelConfig {
	vuint skillId
	vuint skillNameTextMapHash
	vuint skillDescTextMapHash
	string[] descArgs
	string iconPath
	vuint materialId
	vuint materialNum
	string ServerGlobalValueName
}
excel class MoleMole.Config.MichiaeOverallExcelConfig {
	vuint id
	vuint activityId
	vuint offeringId
	vuint statueGroupId
	vuint statueConfigId
	vuint[] bossWatcherList
	vuint statueCd
	float prayEffectRange
	float darkChallengeRewardRange
	vuint activitySceneId
	float bossChallengeRewardRange
	vuint crystalExpMaterialId
	vuint radarOpenLevel
	vuint allRadarOpenLevel
}
excel class MoleMole.Config.MichiaeStageExcelConfig {
	vuint stageId
	vuint openDay
	vuint[] watcherList
	vuint maxOfferingLevel
	vuint maxCrystalExp
	vuint tabNameTextMapHash
}
excel class MoleMole.Config.MichiaeBossChallengeExcelConfig {
	vuint levelID
	vuint levelTitleTextMapHash
	vuint levelDescTextMapHash
	vuint groupID
}
excel class MoleMole.Config.MichiaeErosionMapExcelConfig {
	vuint id
	vuint[] erosionRange
	vuint erosionDescTextMapHash
	vuint energyDescTextMapHash
}
excel class MoleMole.Config.MichiaeDarkChallengeExcelConfig {
	vuint id
	vuint challengeId
	vuint[] rewardId
	vuint groupId
}
excel class MoleMole.Config.MichiaePreviewExcelConfig {
	vuint activityID
	vuint descTextMapHash
	vuint intro_titleTextMapHash
	vuint intro_contentTextMapHash
	vuint rewardPreviewID
	vuint pushTipsID
	vuint bossGroupBundleId
	float radarSearchRadius
	float radarRemoveRadius
	vuint allRadarShowLimit
	vuint preSubQuestId
	vuint preActivityQuestId
	vuint activityQuestId
	map<vuint,vuint> preQuestIdMap
	vuint[] preQuestIdList
}
excel class MoleMole.Config.MichiaeRadarExcelConfig {
	MoleMole.Config.MichiaeMatsuriRadarMarkType markType
	vuint[] gadgetIdList
}
excel class MoleMole.Config.MichiaeWatcherExcelConfig {
	vuint watcherId
	vuint iconNameHash
}
excel class MoleMole.Config.FindHilichurlExcelConfig {
	vuint id
	vuint activityId
	vuint rewardPreviewId
	vuint guideQuestId
	vuint endQuestId
	vuint[] assignmentIdList
	vuint[] HiliWeiIdList
}
excel class MoleMole.Config.FindHilichurlAssignmentExcelConfig {
	vuint id
	vuint index
	vuint dayIndex
	vuint questID
	MoleMole.Config.FindHilichurlAssignmentType assignmentType
	string keyWord
	vuint hintSubQuestId
}
excel class MoleMole.Config.FindHilichurlHiliWeiExcelConfig {
	vuint id
	vuint dayIndex
	string durationHint
	vuint groupId
	float[] positionCenter
	vuint positionRadius
	vuint watcherID
}
excel class MoleMole.Config.ActivityMistTrialLevelDataExcelConfig {
	vuint Id
	vuint scheduleId
	vuint levelId
	vuint levelTitleTextMapHash
	vuint levelDescTextMapHash
	vuint[] monsterPreviewIdList
	vuint[] keyMonsterPreviewIdList
	vuint openDay
	vuint[] challengeMissionWatcherList
	vuint[] statisticsIdList
	vuint bgIconHash
	vuint dungeonId
	vuint[] dungeonFactorIdList
	string[] failTips
	vuint[] trialAvatarIdList
	string serverGlobalValueKey
	vuint[] floorLevelList
	vuint[] battleStatisticsData
}
excel class MoleMole.Config.ActivityMistTrialAvatarDataExcelConfig {
	vuint Id
	vuint scheduleId
	vuint trialAvatarId
}
excel class MoleMole.Config.ActivityMistTrialWatcherListDataExcelConfig {
	vuint Id
	vuint scheduleId
	vuint challengeWatcherId
	MoleMole.Config.MistTrialClientSyncType dungeonShowContentType
	string[] showParam
	vuint progressFormatTextMapHash
	bool isNeedShowProgress
	vuint hintFormatTextMapHash
}
excel class MoleMole.Config.ActivityMistTrialStatisticsListExcelConfig {
	vuint Id
	vuint scheduleId
	MoleMole.Config.MistTrialStatisticType statName
	string[] param
}
excel class MoleMole.Config.ActivityMistTrialLevelFactorExcelConfig {
	vuint Id
	string[] param
	vuint factorRowTextTextMapHash
	vuint entryShowTextTextMapHash
	vuint inGameShowTextTextMapHash
}
excel class MoleMole.Config.MoonfinTrialExcelConfig {
	vuint id
	vuint activityId
	vuint[] levelIdList
	vuint activityFishId
	vuint activityFishGainLimit
	vuint activityFishPoolId
	vuint activityRewardPreviewId
	vuint pushTipsId
	vuint[] mainQuestList
	vuint[] preconditionMainQuestIds
}
excel class MoleMole.Config.MoonfinTrialLevelExcelConfig {
	vuint levelId
	MoleMole.Config.MoonfinTrialActivityLevelType levelType
	vuint specificFishId
	vuint galleryId
	vuint challengeId
	vuint openDay
	vuint[] watcherID
	vuint leadingLevel
	vuint leadingMainQuest
	vuint mainQuest
	float[] markPosition
	vuint rewardPreviewId
	vuint levelNameTextMapHash
	vuint descriptionTextMapHash
	vuint titleTextMapHash
}
excel class MoleMole.Config.ActivityPhotographExcelConfig {
	vuint id
	vuint activityId
	vuint[] photoPosIdList
	vuint[] photoUseableWidgetList
	float fovMax
	float fovMin
	float fovDefault
	float cameraShiftUp
	float cameraShiftDown
	float cameraShiftLeft
	float cameraShiftRight
	vuint questAcceptionMarkId
	vuint pushTipsId
	float cameraPosTipOffset
	vuint[] extraTipMiddleQuest1
	vuint[] extraTipMiddleQuest2
	vuint[] extraTipMiddleQuest3
}
excel class MoleMole.Config.ActivityPhotographPosExcelConfig {
	vuint id
	vuint groupLinkId
	vuint posTitleTextMapHash
	vuint requireTitleInActivityPageTextMapHash
	vuint requireDescInActivityPageTextMapHash
	vuint npcInviteDescTextMapHash
	vuint npcCommentDescTextMapHash
	string picSmall
	string picBig
	vuint photoCheckRootID
	vuint rootNodeDescTextMapHash
	vuint[] photoCheckSubNodeID
	vuint[] photoCheckSubNodeDesc
	vuint openDay
	vuint watcherId
	vuint galleryId
	vuint redPointID
	vuint KFKPNPEFGMJ
	vuint KNFLBLJBDBO
	vuint OAAMCJPENAA
	string[] presetPreviewIconGirl
	string[] presetPreviewIconBoy
	vuint sceneId
}
excel class MoleMole.Config.ActivityPlantFlowerMainExcelConfig {
	vuint scheduleId
	vuint[] flowerIdList
	vuint[] seedIdList
	vuint maxWishFlowerKinds
	vuint rewardPreviewId
	vuint guaranteeStartTimes
	vuint[] preQuestIdList
	vuint openQuestId
	vuint contentDay
	vuint[] dailyConfigIdList
}
excel class MoleMole.Config.ActivityPlantFlowerDailyExcelConfig {
	vuint dailyConfigId
	MoleMole.Config.IdCountConfig[] costItemList
	vuint[] rewardIdList
}
excel class MoleMole.Config.ActivityPotionOverallExcelConfig {
	vuint scheduleId
	float scoreParamA
	float scoreParamB
	float scoreParamC
}
excel class MoleMole.Config.ActivityPotionStageExcelConfig {
	vuint stageId
	vuint openDay
	vuint[] levelIdList
	vuint dungeonEntryID
	vuint[] watcherIdList
	vuint[] trialAvatarList
	vuint[] buffIdList
	vuint titleTextMapHash
	vuint desciptionTextMapHash
}
excel class MoleMole.Config.ActivityPotionLevelExcelConfig {
	vuint levelId
	vuint dungeonId
	vuint titleTextMapHash
	vuint descTextMapHash
	vuint buffCountLimit
	vuint[] monsterPreview
	vuint[] medalScoreList
	vuint[] medalTimeListNormal
	vuint[] medalTimeListHard
}
excel class MoleMole.Config.ActivityPotionModeChoiceExcelConfig {
	vuint modeId
	vuint descTextMapHash
	float scoreRatio
	vuint dungeonLevel
}
excel class MoleMole.Config.ActivityPotionDifficultyExcelConfig {
	vuint difficultyLevel
	vuint descTextMapHash
	vuint dungeonUpLevel
}
excel class MoleMole.Config.ActivityPotionBuffExcelConfig {
	vuint buffId
	string abilityGroupName
	vuint quality
	vuint titleTextMapHash
	vuint descTextMapHash
	string[] descParam
	vuint iconHash
	string buffElement
}
excel class MoleMole.Config.RegionSearchExcelConfig {
	vuint id
	vuint searchNameTextMapHash
	vuint searchDescTextMapHash
	vuint searchCompleteTextMapHash
	vuint tutorialId
	string markIconTypeName
	MoleMole.Config.RegionSearchType searchType
	vuint materialId
	bool isClearMaterial
	vuint searchGroupId
	vuint reviseLevel
	string abilityGroup
}
excel class MoleMole.Config.RegionSearchCondExcelConfig {
	vuint id
	vuint searchNameTextMapHash
	vuint searchDescTextMapHash
	vuint searchMapDescTextMapHash
	vuint groupId
	MoleMole.Config.LogicType logicType
	MoleMole.Config.RegionSearchCond[] cond
	vuint[] regionList
	vuint rewardId
	vuint totalProgress
	vuint reminderId
}
nozig excel class MoleMole.Config.RegionSearchCond {
	MoleMole.Config.RegionSearchCondType type
	vint[] param
}
excel class MoleMole.Config.RegionSearchRegionExcelConfig {
	vuint id
	float[] regionCenter
	float regionRadius
	vuint[] oneoffGroupList
	vuint oneoffGroupNum
	vuint[] recycleGroupList
	vuint recycleGroupNum
	MoleMole.Config.RegionSearchRecycleType recycleType
	vuint recycleParam
}
nozig excel class MoleMole.Config.RogueDiaryRoundExcelConfig {
	vuint RoomCount
	vuint[] roundRoomConfigList
	vuint hpCorrection
}
excel class MoleMole.Config.RogueDiaryStageExcelConfig {
	vuint id
	vuint condId
	vuint[] normalDungeonIdList
	vuint[] hardDungeonIdList
	vuint[] insaneDungeonIdList
	vuint optionalCardCount
	vuint chosenCardCount
	MoleMole.Config.RogueDiaryTiredType tiredType
	vuint tiredReserveAvatarCount
	vuint tiredRoundCount
	vuint[] trialAvatarList
	vuint[] timeLevelList
	vuint[] watcherIdList
	vuint pushTipsId
	vuint dungeonNameTextMapHash
	vuint dungeonDescTextMapHash
}
excel class MoleMole.Config.RogueDiaryDungeonExcelConfig {
	vuint dungeonId
	vuint[] groupList
	MoleMole.Config.RogueDiaryRoundExcelConfig[] roundList
}
excel class MoleMole.Config.RogueDiaryRoundRoomExcelConfig {
	vuint id
	vuint HardRoomCount
	MoleMole.Config.RogueDiaryRoomTypeConfig[] roomTypeConfigList
}
nozig excel class MoleMole.Config.RogueDiaryRoomTypeConfig {
	vuint[] normalRoomConfigList
	vuint[] hardRoomConfigList
}
excel class MoleMole.Config.RogueDiaryRoomExcelConfig {
	vuint id
	vuint normalTideId
	vuint hardTideId
	vuint challengeId
	vuint coinRewardNormal
	vuint coinRewardHard
	vuint descHardTextMapHash
	bool isBoss
}
excel class MoleMole.Config.RogueDiaryBuffDataExcelConfig {
	vuint id
	vuint nameTextMapHash
	vuint descTextMapHash
	string[] descParam
	vuint quality
	string icon
	MoleMole.Config.RogueDiaryBuffType type
	MoleMole.Config.RogueDiaryBuffEffectType effectType
}
excel class MoleMole.Config.RogueDiaryCardWeightExcelConfig {
	vuint id
	vuint srCount
	vuint weight
	vuint retryWeight
}
excel class MoleMole.Config.RogueDiaryPreviewExcelConfig {
	vuint activityId
	bool blockSwitch
	vuint dungeonEntryId
	vuint dungeonMarkId
	vuint roomMarkId
	vuint[] preWQIdList
	vuint[] hiddenWQIdList
	vuint[] preQuestIdList
	vuint changeEntryCondId
	vuint roomSceneId
	vuint worldSceneId
}
excel class MoleMole.Config.RogueDiaryQuestExcelConfig {
	vuint activityId
	string[] questIdList
	vuint[] condIdList
	vuint[] watcherIdList
}
excel class MoleMole.Config.RogueDiaryResourceExcelConfig {
	vuint id
	MoleMole.Config.RogueDiaryResourceType type
	vuint value
}
excel class MoleMole.Config.RogueStageExcelConfig {
	vuint stageId
	vuint firstPassRewardId
	vuint previewRewardId
	vuint openTime
	vuint maxCoin
	vuint maxLevel
	vuint reviseLevelId
	vuint stageNameTextMapHash
	vuint stageDescTextMapHash
	vuint[] bossIdList
	vuint[][] monsterIdList
	vuint[][] levelBossIdList
	vuint preQuestId
	vuint gotoQuestId
	vuint[] unlockRuneList
	bool isStoryStage
}
excel class MoleMole.Config.RoguelikeRuneExcelConfig {
	vuint id
	bool isDefaultUnlock
	vuint nameTextMapHash
	vuint descTextMapHash
	string runeIcon
	string runeIcon1
	string runeIcon2
	string runeIcon3
	vuint defaultUseCount
	vuint elementType
	string abilityName
}
excel class MoleMole.Config.RoguelikeEffectExcelConfig {
	MoleMole.Config.RoguelikeEffectType effectType
	string effectKey
	string effectParam
	vint displayOffset
}
excel class MoleMole.Config.RoguelikeShikigamiExcelConfig {
	vuint sequenceId
	vuint groupId
	vuint level
	MoleMole.Config.RoguelikeShikigamiUnlockConfig[] unlockCond
	vuint costItemId
	vuint costItemCount
	vuint shikiSkillNameTextMapHash
	vuint shikiSkillDescTextMapHash
}
nozig excel class MoleMole.Config.RoguelikeShikigamiUnlockConfig {
	MoleMole.Config.RoguelikeShikigamiUnlockType type
	string param
}
excel class MoleMole.Config.RoguelikeShikigamiGroupExcelConfig {
	vuint id
	MoleMole.Config.RoguelikeEffectExcelConfig effectConfig
}
excel class MoleMole.Config.RoguelikeCurseExcelConfig {
	vuint level
	vuint groupId
	vuint curseNameTextMapHash
	vuint descTextMapHash
	MoleMole.Config.RoguelikeEffectExcelConfig effectConfig
	bool isDynamicShow
	bool isClearAtNextLevel
	float[] descParamList
	bool[] descParamSuperpositionList
}
excel class MoleMole.Config.RoguelikeCursePoolExcelConfig {
	vuint sequenceId
	vuint poolId
	vuint groupId
}
excel class MoleMole.Config.RoguelikeCardExcelConfig {
	vuint id
	vuint sortOrder
	MoleMole.Config.RoguelikeCardLabel label
	MoleMole.Config.RoguelikeCardType type
	vuint[] relatedRuneList
	string[] relatedElementList
	MoleMole.Config.RoguelikeEffectExcelConfig effectConfig
	bool isClearAtNextLevel
	bool isDynamicShow
	vuint cardNameTextMapHash
	vuint descTextMapHash
	vuint extraDescTextMapHash
	float[] descParamList
	bool[] descParamSuperpositionList
	float[] descParamBaseValueList
}
excel class MoleMole.Config.RogueDungeonCellExcelConfig {
	vuint id
	vuint dungeonId
	vuint cellId
	float[] cellCenterPos
	vuint[] mapCoordinate
	vuint[] adjacencyCellList
	vuint groupId
	vuint weightId
	float operatorDeltaY
	float doorOffset
	MoleMole.Config.RogueCellType specialType
	float doorDeltaY
	bool isInitCell
}
excel class MoleMole.Config.RogueCellWeightExcelConfig {
	vuint id
	vuint springWeight
	vuint storeWeight
	vuint eliteWeight
}
excel class MoleMole.Config.RogueSequenceExcelConfig {
	vuint id
	vuint dungeonId
	vuint sequenceId
	vuint[] cellList
	map<vuint,vuint> cellPriority
	MoleMole.Config.RogueSequenceCellConfig[] cellSeqList
}
nozig excel class MoleMole.Config.RogueSequenceCellConfig {
	MoleMole.Config.RogueCellType type
	vuint[] range
}
excel class MoleMole.Config.RogueGadgetExcelConfig {
	vuint id
	MoleMole.Config.RogueCreateGadgetType gadgetType
	vuint gadgetId
	MoleMole.Config.RogueGadgetStateConfig[] gadgetStateConfigList
}
nozig excel class MoleMole.Config.RogueGadgetStateConfig {
	MoleMole.Config.RogueGadgetStateType state
	vuint gadgetState
}
excel class MoleMole.Config.RogueMonsterPoolExcelConfig {
	vuint id
	vuint dungeonId
	MoleMole.Config.RogueMonsterPoolDifficultyType difficulty
	vuint[] poolIdList
}
excel class MoleMole.Config.RogueTokenExcelConfig {
	vuint id
	vuint stageId
	vuint level
	MoleMole.Config.RogueMonsterPoolDifficultyType cellType
	vuint[] coinANum
	vuint[] coinBNum
	vuint[] coinCNum
}
excel class MoleMole.Config.ActivitySalesmanExcelConfig {
	vuint scheduleId
	vuint[] dailyConfigIdList
	vuint[] normalRewardIdList
	vuint[] specialRewardIdList
	float[] specialProbList
	MoleMole.Config.SalesmanSpecialReward specialReward
}
excel class MoleMole.Config.SalesmanSpecialReward {
	MoleMole.Config.SalesmanSpecialRewardType rewardType
	MoleMole.Config.SalesmanSpecialRewardObtainMethod obtainMethod
	string obtainParam
	vuint id
	vuint previewId
}
excel class MoleMole.Config.LampContributionExcelConfig {
	vuint id
	vuint contribution
	vuint rewardId
}
excel class MoleMole.Config.LampPhaseExcelConfig {
	vuint phaseId
	vuint nameTextMapHash
	vuint endProgress
	vuint[] materialVec
	vuint GivingId
	vuint contribution
	vuint addProgress
	bool isDisplay
	vuint rewardId
	vuint notifyGroupId
	vuint gadgetId
}
excel class MoleMole.Config.SeaLampSectionExcelConfig {
	vuint id
	vuint sectionId
	vuint activityId
	vuint mainQuestId
	vuint[] miniQuestId
	vuint[] watcherIdVec
	vuint descTextMapHash
	vuint titleTextMapHash
	vuint nameTextMapHash
}
excel class MoleMole.Config.SeaLampSectionMainQuestExcelConfig {
	vuint id
	vuint nameTextMapHash
	vuint descTextMapHash
	vuint[] questId
	vuint introTextMapHash
	vuint openDay
}
excel class MoleMole.Config.SeaLampSectionMiniQuestExcelConfig {
	vuint id
	vuint sectionId
	vuint openDay
	bool isSpecial
	vuint miniQuestId
	vuint nameTextMapHash
	vuint descTextMapHash
}
excel class MoleMole.Config.LanV2ProjectionExcelConfig {
	vuint scheduleId
	float sensitivityFreeRotation
	float sensitivitySingleAxisRotation
	float sensitivitySingleAxisTranslation
	float sensitivityFreeRotationJoypad
	float sensitivitySingleAxisRotationJoypad
	float sensitivitySingleAxisTranslationJoypad
	vuint pushTipsIdJoypad
	vuint pushTipsIdTouch
	vuint pushTipsIdMouse
	vuint timeThresholdUnlockAnswer
	vuint timeThresholdShowStandbyPrompt
	vuint timeThresholdShowContinuousProgress
	string[] leadGuides
	string[] guides
	vuint guideQuestId
	vuint nameTextMapHash
	vuint descTextMapHash
}
excel class MoleMole.Config.LanV2ProjectionStageExcelConfig {
	vuint stageId
	vuint titleTextMapHash
	vuint descTextMapHash
	vuint openDay
}
excel class MoleMole.Config.LanV2ProjectionLevelExcelConfig {
	vuint levelId
	vuint stageId
	vuint watcherId
	vuint levelNameTextMapHash
	string iconSilhouette
	string iconNormal
	float endDialogIconOffsetX
	float endDialogIconOffsetY
	float endDialogIconScale
	vuint sceneSuiteId
	vuint rootPointSwitchButtonConfigId
	float[] rootPointCorrectPose
	float[] rootPointInitialPose
	MoleMole.Config.LanV2ProjectionRootPointMotionType rootPointMotionType
	float[] rootPointFreeRotationTolerance
	float[] rootPointSingleAxisRotationAxis
	float[] rootPointSingleAxisRotationLimit
	float rootPointSingleAxisRotationTolerance
	vuint[][] hierarchy
	MoleMole.Config.LanV2ProjectionElementConfig[] elementConfigs
}
nozig excel class MoleMole.Config.LanV2ProjectionElementConfig {
	string prefabPath
	string shadowPrefabPath
	vuint switchButtonConfigId
	float[] correctPose
	float[] initialPose
	MoleMole.Config.LanV2ProjectionMotionType motionType
	float[] freeRotationTolerance
	float[] singleAxisMotionAxis
	float[] singleAxisMotionLimit
	float singleAxisMotionTolerance
}
excel class MoleMole.Config.SalvageOverAllExcelConfig {
	vuint id
	vuint activityId
	vuint activityDuration
	vuint preQuestId
	vuint guideQuestId
	vuint nameTextMapHash
	vuint descTextMapHash
	float[] regionCenter
	vuint regionRadius
	vuint reminderRadius
	vuint reminderId
	vuint destoryRadius
	vuint rewardPreviewId
	vuint landRewardPreviewID
	vuint seaRewardPreviewID
}
excel class MoleMole.Config.SalvageTypeDataExcelConfig {
	MoleMole.Config.SalvagePlayType playType
}
excel class MoleMole.Config.SalvageStageDataExcelConfig {
	vuint stageId
	vuint startDay
	vuint unlockCondId
	vuint[] landGroupLinkList
	vuint[] seaGroupLinkList
	vuint[] unlockChallengeGroupLinkList
	vuint[] salvageChallengeIdList
}
excel class MoleMole.Config.SalvageChallengeDataExcelConfig {
	vuint id
	MoleMole.Config.SalvagePlayType playType
	vuint groupLinkId
	vuint galleryId
	vuint[] playerPointConfigId
	vuint[] boatPointConfigId
	vuint vehicleGadgetId
	vuint[] watcherIds
}
excel class MoleMole.Config.LanV2FireworksOverallDataExcelConfig {
	vuint scheduleId
	vuint initStaminaValue
	MoleMole.Config.FireElementAdditionConfig[] fireElementAdditionList
	float scoreFormulaExponent
	float scoreFormulaOffset
	vuint pushTipsId
}
nozig excel class MoleMole.Config.FireElementAdditionConfig {
	vuint[] range
	vuint ratio
}
excel class MoleMole.Config.LanV2FireworksStageDataExcelConfig {
	vuint stageId
	vuint openDay
	vuint[] challengeIdList
	vuint tabNameTextMapHash
	vuint questDescTextMapHash
	vuint[] guideQuestId
	vuint guideQuestRewardPreviewId
}
excel class MoleMole.Config.LanV2FireworksChallengeDataExcelConfig {
	vuint challengeId
	vuint titleTextMapHash
	string icon
	vuint[] factorIdList
	vuint initFireElementValue
	vuint fullScore
	vuint unlockAbilityScore
	vuint unlockFireworksScore
	vuint[] watcherIdList
	vuint addStaminaValue
}
excel class MoleMole.Config.LanV2FireworksFactorDataExcelConfig {
	vuint factorId
	vuint[] perfectRange
	vuint factorLength
	MoleMole.Config.FireworksReformParamType type
	vuint[] colorRange
}
excel class MoleMole.Config.LanV2FireworksSkillDataExcelConfig {
	vuint skillId
	MoleMole.Config.FireworksReformSkillType skillType
	vuint staminaValueCost
	vuint unlockChallengeId
	vint deltaFireElementValue
	vuint luckyProb
	vuint factorAddValueMin
	vuint factorAddValueMax
	vuint[] effectParams
	vuint skillTitleTextMapHash
	vuint skillDescTextMapHash
	vuint[] descArgs
}
excel class MoleMole.Config.LanV2OverAllDataExcelConfig {
	vuint id
	vuint activityId
	vuint bossDungeonId
	vuint bossRewardId
	vuint bossStartDay
	vuint[] bossWatcherIdList
	vuint[] bossExhibitionIdList
	vuint bossPushTipsId
	vuint[] clothesWatcherIdList
	vuint clothesRewardId
	vuint[] bossCardIdList
	vuint activityPlayDuration
	bool hideExchangeEntry
}
excel class MoleMole.Config.ActivityShopOverallExcelConfig {
	vuint scheduleId
	MoleMole.Config.ShopType shopType
	vuint[] sheetList
}
excel class MoleMole.Config.ActivityShopSheetExcelConfig {
	vuint id
	bool isAheadPreview
	MoleMole.Config.LogicType condComb
	vuint SheetNameTextMapHash
	MoleMole.Config.ActivityShopSheetCond[] cond
	vuint[] sortLevel
}
nozig excel class MoleMole.Config.ActivityShopSheetCond {
	MoleMole.Config.ActivityShopSheetCondType type
	vuint[] param
}
excel class MoleMole.Config.ActivitySpiceExcelConfig {
	vuint id
	vuint activityId
	vuint scheduleId
	vuint spiceId
	vuint[] watcherIdList
	vuint fetterValue
	vuint extraWidth
	vuint preQuestID
}
excel class MoleMole.Config.ActivitySpiceStageDataExcelConfig {
	vuint id
	vuint openDayIndex
	vuint fetterIncCntLimit
	vuint[] materialIdList
	vuint[] materialNumList
	vuint[] materialOrderList
	vuint nameTextMapHash
	vuint descTextMapHash
	float speed
	vuint times
	vuint clickNum
	vuint[] clickZone
	vuint watcherId
}
excel class MoleMole.Config.ActivitySpiceFoodExcelConfig {
	vuint normalFoodId
	vuint specialFoodId
	vuint recipeMatId
	vuint sourceDescTextMapHash
}
excel class MoleMole.Config.ActivitySpiceGivingExcelConfig {
	vuint givingDataId
	vuint characterId
}
excel class MoleMole.Config.ActivitySummerTimeExcelConfig {
	vuint Id
	vuint unlockQuestID
	vuint contentDuration
	vuint unlockPlayerLevel
	vuint personalPreQuest
	vuint[] preQuestOfPreQuest
	vuint rewardPreview
	vuint[] questIdList
}
excel class MoleMole.Config.ActivitySummerTimeStageExcelConfig {
	vuint Id
	vuint stageId
	vuint openDay
	vuint[] watcherIdList
	vuint mainQuest
	vuint preQuest
	vuint guideButtonQuest
	vuint guidePushtipsID
	vuint questTitleTextMapHash
	vuint questDescTextMapHash
	vuint gameplayTitleTextMapHash
	vuint gameplayDescTextMapHash
}
excel class MoleMole.Config.ActivitySummerTimeFloatSignalExcelConfig {
	vuint Id
	vuint groupId
	vuint configId
	vuint mistZoneId
	bool isTransferAnchor
	vuint vehicleConfigId
	vuint vehicleGadgetId
}
excel class MoleMole.Config.ActivitySummerTimeRacePreviewExcelConfig {
	vuint Id
	vuint levelDescTextMapHash
}
excel class MoleMole.Config.ActivitySummerTimeRaceExcelConfig {
	vuint Id
	vuint[] medalWatcher
	float[] worldCoord
	vuint[] medalPoint
	vuint levelTitleTextMapHash
	vuint timeFactor
	vuint goldFactor
	vuint activityCondId
	vuint groupId
	vuint openDay
	vuint boatPointConfigId
	vuint playerPointConfigId
}
excel class MoleMole.Config.SummerTimeV2DungeonStageExcelConfig {
	vuint stageId
	vuint dayIndex
	vuint prevDungeonId
	vuint cycleDungeonId
	vuint[] watcherList
	vuint[] questIdList
	vuint questId
	vuint entranceNameTextMapHash
	vuint questNameTextMapHash
	vuint questDescTextMapHash
	vuint pushTipsId
	vuint dungeonEntryId
	vuint storyDungeonId1
	vuint storyDungeonId2
	vuint storyDungeonId3
	vuint[] dungeonExhibitionIdList
	vuint[] dungeonCardIdList
	vuint storyStartCondId
	vuint dungeonStartCondId
	vuint dungeonRewardLimit
	vuint dungeonEntryNameTextMapHash
}
excel class MoleMole.Config.SummerTimeV2BoatStageExcelConfig {
	vuint stageId
	vuint dayIndex
	vuint[] watcherList
	vuint galleryId
	vuint pushTipsId
	vuint groupLinkID
	MoleMole.Config.SummerTimeV2BoatConditionType[] conditionType
	vuint[] conditionParam
	vuint[] conditionDesc
	vuint[] conditionResult
}
excel class MoleMole.Config.SummerTimeV2OverallExcelConfig {
	vuint activityId
	vuint dungeonRewardId
	vuint itemId
}
excel class MoleMole.Config.ActivitySumoStageExcelConfig {
	vuint Id
	vuint scheduldId
	vuint openDay
	vuint dungeonId
	vuint[] watcherList
	vuint[] trialAvatarPool
	vuint[] skillPool
	vuint[] specialSkillPool
	vuint galleryId
	vuint[] hintNewSkillVec
	vuint titleTextMapHash
	vuint descTextMapHash
	vuint[] scoreRanks
	MoleMole.Config.ActivitySumoMonsterPreview[] monsterPreviewVec
	MoleMole.Config.SumoStageMonsterWaveType monsterWaveType
	vuint[] primaryBossMonsterVec
	vuint[] primaryNormalMonsterVec
}
nozig excel class MoleMole.Config.ActivitySumoMonsterPreview {
	string boss
	string normal
}
excel class MoleMole.Config.ActivitySumoSwitchSkillExcelConfig {
	vuint Id
	string abilityGroupName
	vuint titleTextMapHash
	vuint descTextMapHash
	string[] descParam
	vuint iconNameHash
}
excel class MoleMole.Config.ActivitySumoDifficultyExcelConfig {
	vuint Id
	vuint scheduldId
	MoleMole.Config.SumoDifficultyType difficulty
	vuint monsterLevel
	vuint dungeonLevel
	float ratio
	vuint descTextMapHash
}
excel class MoleMole.Config.ActivityTanukiTravelDataExcelConfig {
	vuint Id
	vuint activityId
	vuint guideQuestId
	vuint[] activityOpenList
	vuint rewardPreviewId
	vuint inazumaQuestId
	vuint sakuraQuestId
	vuint[] preOrderQuestIdList
	vuint pushTipsId
}
excel class MoleMole.Config.ActivityTanukiTravelRouteDataExcelConfig {
	vuint Id
	vuint openIndex
	vuint openDayIndex
	vuint questId
	vuint hiddenSubQuestId
	vuint watcherId
	vuint neededHomeQuestId
	vuint neededFishQuestId
	vuint routeLastQuestId
	vuint titleTextMapHash
	vuint descTextMapHash
	vuint reviewTextMapHash
	vuint regionTextMapHash
}
excel class MoleMole.Config.TreasureMapExcelConfig {
	vuint id
	vuint activity_id
	vuint preview_reward_id
	vuint npc_id
	float[] npc_pos
	vuint treasure_days
	vuint quest_id
	float monster_probability
	vuint reward_worktop_gadget_id
	vuint token_material_id
	vuint unit_token_drop_id
	vuint mp_reward_id
	vuint host_reward_limit
	vuint guest_reward_limit
	vuint mp_challenge_index
	vuint bonus_challenge_index
	vuint challenge_gadget_suite
	vuint spot_revise_level_id
	vuint detector_material_id
	vuint guide_child_quest_id
	vuint front_child_quest_id
}
excel class MoleMole.Config.TreasureMapBonusRegionExcelConfig {
	vuint id
	vuint unlock_region_id
	vuint group_id
	vuint reward_id
	vuint reward_preview_id
	vuint revise_level
	vuint map_titleTextMapHash
	vuint map_descTextMapHash
	string show_image
	vuint fragment_num
	float[] region_center
	vuint region_radius
}
excel class MoleMole.Config.TreasureMapRegionExcelConfig {
	vuint id
	vuint unlock_day
	vuint token_num
	float[] region_center
	vuint region_radius
	vuint region_entry_id
	vuint[] group_list
	vuint revise_level
	vuint[] spot_num_list
	vuint[] token_num_list
	vuint[] misc_drop_prob_list
	vuint misc_drop_id
	vuint mp_group_id
	vuint[] backup_group_list
	vuint mp_token_threshold
	vuint mp_type_id
	float[] mp_position
	vuint mp_descTextMapHash
	vuint mp_reward_preview_id
	vuint fragment_bonus_id
}
excel class MoleMole.Config.BonusTreasureSolutionExcelConfig {
	vuint id
	vuint show_imageHash
	vuint[] solution
}
excel class MoleMole.Config.WinterCampExcelConfig {
	vuint activityId
	vuint rewardID
	vuint[] questId01List
	vuint questId02
	vuint questId02Guide
	vuint[] activityQurestId
	vuint[] chapt3QuestId
	vuint condID02
	vuint condID03
	vuint[] bossQuestId
	vuint bossCondID
	vuint[] bossWatcher
	vuint battleTutorialId
	vuint exploreTutorialId
	vuint raceTutorialId
	vuint snowmanTutorialId
}
excel class MoleMole.Config.WinterCampBattleExcelConfig {
	vuint id
	vuint openDay
	vuint priority
	vuint groupLinkID
	vuint challengeIndex
	vuint rewardID
}
excel class MoleMole.Config.WinterCampExploreExcelConfig {
	vuint id
	vuint openDay
	vuint priority
	vuint groupID
	vuint groupLinkID
	vuint rewardID
	MoleMole.Config.WinterCampDropGroup[] dropGroups
}
nozig excel class MoleMole.Config.WinterCampDropGroup {
	vuint[] dropId
}
excel class MoleMole.Config.WinterCampRaceExcelConfig {
	vuint id
	vuint openDay
	vuint galleryId
	vuint groupLinkID
	vuint[] scoreWatcher
	vuint[] scoreList
	vuint timeFactor
	vuint goldFactor
	vuint limitedGoldFactor
	vuint[] itemTips
}
excel class MoleMole.Config.WinterCampSnowmanExcelConfig {
	vuint id
	vuint[] itemIdList
	vuint[] groupIdList
	vuint groupBundleID
}
excel class MoleMole.Config.WinterCampSnowmanDetailExcelConfig {
	vuint id
	vuint snowmanNameTextMapHash
	vuint snowmanDescTextMapHash
	vuint unlockCondId
	vuint unlockTextTextMapHash
	vuint watcherId
}
excel class MoleMole.Config.WinterCampRaceItemTipsExcelConfig {
	vuint id
	string icon
	vuint titleTextMapHash
	vuint descTextMapHash
}
excel class MoleMole.Config.IconAdsorbEffectExcelConfig {
	vuint effectId
	vuint[] iconIdList
}
excel class MoleMole.Config.AvatarCodexExcelConfig {
	vuint sortId
	vuint sortFactor
	vuint avatarId
	string beginTime
	bool hideWhenDontHave
}
excel class MoleMole.Config.AvatarLevelExcelConfig {
	vuint level
	vuint exp
	vuint smallTalentPoint
}
excel class MoleMole.Config.AvatarPromoteExcelConfig {
	vuint avatarPromoteId
	vuint promoteLevel
	string promoteAudio
	vuint scoinCost
	MoleMole.Config.IdCountConfig[] costItems
	vuint unlockMaxLevel
	MoleMole.Config.PropValConfig[] addProps
	vuint requiredPlayerLevel
}
nozig excel class MoleMole.Config.PropValConfig {
	MoleMole.Config.FightPropType propType
	float value
}
excel class MoleMole.Config.AvatarFettersLevelExcelConfig {
	vuint fetter_level
	vuint need_exp
}
excel class MoleMole.Config.AvatarHeroEntityExcelConfig {
	vuint avatarId
	vuint prefabPathHash
	vuint animatorConfigPathHash
}
excel class MoleMole.Config.AvatarFlycloakExcelConfig {
	vuint flycloakId
	vuint nameTextMapHash
	vuint descTextMapHash
	string prefab_path
	string json_name
	string icon
	vuint material_id
	bool hide
}
excel class MoleMole.Config.AvatarCostumeExcelConfig {
	vuint skinId
	vuint indexID
	vuint nameTextMapHash
	vuint descTextMapHash
	vuint itemId
	vuint characterId
	string json_name
	vuint prefab_pathHash
	vuint prefab_remote_pathHash
	vuint prefab_npc_pathHash
	vuint animatorConfigPathHash
	vuint prefab_manekin_pathHash
	vuint controller_pathHash
	vuint controller_remote_pathHash
	bool isDefault
	bool isDefaultUnlock
	vuint quality
	bool hide
	string frontIconName
	string sideIconName
	vuint imageNameHash
	bool domesticHideInArtPreview
	bool overseaHideInArtPreview
}
excel class MoleMole.Config.AvatarReplaceCostumeExcelConfig {
	vuint avatarId
	vuint replace_costume_id
}
excel class MoleMole.Config.AvatarSkillExcelConfig {
	vuint id
	vuint nameTextMapHash
	string abilityName
	vuint descTextMapHash
	string skillIcon
	bool isRanged
	float cdTime
	bool ignoreCDMinusRatio
	float costStamina
	MoleMole.Config.ElementType costElemType
	float costElemVal
	vint maxChargeNum
	vint triggerID
	string lockShape
	float[] lockWeightParams
	bool isAttackCameraLock
	MoleMole.Config.SkillDrag dragType
	bool showIconArrow
	MoleMole.Config.MonitorType needMonitor
	bool defaultLocked
	string buffIcon
	vuint proudSkillGroupId
	string globalValueKey
	float energyMin
	bool forceCanDoSkill
	vuint cdSlot
	bool needStore
	vuint shareCDID
}
excel class MoleMole.Config.AvatarSkillDepotExcelConfig {
	vuint id
	vuint energySkill
	vuint talentSkill
	vuint[] skills
	vuint[] subSkills
	vuint attackModeSkill
	vuint leaderTalent
	string[] extraAbilities
	vuint[] talents
	string talentStarName
	vuint coreProudSkillGroupId
	vuint coreProudAvatarPromoteLevel
	MoleMole.Config.ProudSkillOpenConfig[] inherentProudSkillOpens
	string skillDepotAbilityGroup
}
nozig excel class MoleMole.Config.ProudSkillOpenConfig {
	vuint proudSkillGroupId
	vuint needAvatarPromoteLevel
}
excel class MoleMole.Config.AbilityStateResistanceByIDExcelConfig {
	vuint id
	MoleMole.Config.AbilityState[] abilityStates
}
excel class MoleMole.Config.ActivitySkillExcelConfig {
	vuint id
	MoleMole.Config.ActivitySkillTarget skillTarget
	string abilityName
	string globalValueKey
	vuint energyMin
	vuint energyMax
	vuint[] HBADLDLIOPK
	float cdTime
	float guideTime
	string skillIcon
	bool EOANJCDGPIK
	string[] guideKey
	MoleMole.Config.OpenStateType guideOpenState
	vuint unableTextTextMapHash
	vuint channelTextTextMapHash
	vuint interruptTextTextMapHash
	vuint AOOCKBDHBPE
}
excel class MoleMole.Config.BargainExcelConfig {
	vuint quest_id
	vuint id
	vuint[] dialog_id
	vuint[] expected_value
	vuint space
	vuint[] success_talk_id
	vuint fail_talk_id
	vuint mood_npc_id
	vuint mood_upper_limit
	vuint[] random_mood
	vuint mood_alert_limit
	vint mood_low_limit
	vuint mood_low_limit_textTextMapHash
	vuint single_fail_mood_deduction
	vuint[] single_fail_talk_id
	bool delete_item
	vuint item_id
	vuint title_textTextMapHash
	vuint afford_textTextMapHash
	vuint storage_textTextMapHash
	vuint mood_hint_textTextMapHash
	vuint mood_desc_textTextMapHash
}
excel class MoleMole.Config.BattlePassScheduleExcelConfig {
	vuint id
	vuint titleNameTextMapHash
	string beginDateStr
	string endDateStr
	vuint[] cycleList
	vuint extraPaidRewardId
	vuint extraPaidAddPoint
	vuint buyLevelCostCoinNum
	vuint cyclePointUpperLimit
	vuint levelRewardIndexId
	vuint[] normalRewardList
	MoleMole.Config.BattlePassScheduleRewardType rewardType
	string showImage
	vuint[] showRewardList
	vuint[] stroyRewardList
	vuint storyId
	vuint mailDayCount
	vuint mailConfigId
}
excel class MoleMole.Config.BattlePassLevelExcelConfig {
	vuint level
	vuint levelUpNeedPoint
}
excel class MoleMole.Config.BattlePassRewardExcelConfig {
	vuint indexId
	vuint level
	vuint[] freeRewardIdList
	vuint[] paidRewardIdList
	bool showUp
}
excel class MoleMole.Config.BattlePassMissionExcelConfig : MoleMole.Config.WatcherConfig {
	MoleMole.Config.BattlePassMissionRefreshType refreshType
	bool isForce
	vuint addPoint
	vuint scheduleId
	vuint activityId
	vuint descTextMapHash
	MoleMole.Config.QuestGuide guide
}
excel class MoleMole.Config.QuestGuide {
	MoleMole.Config.QuestGuideType type
	MoleMole.Config.QuestGuideAuto autoGuide
	string[] param
	vuint guideScene
	MoleMole.Config.QuestGuideStyle guideStyle
	MoleMole.Config.QuestGuideLayer guideLayer
}
excel class MoleMole.Config.BattlePassStoryExcelConfig {
	vuint id
	vuint[] storyUnlockLevel
	vuint[] storyId
	vuint[] storyTitle
}
excel class MoleMole.Config.BlossomOpenExcelConfig {
	vuint cityId
	vuint openLevel
}
nozig excel class MoleMole.Config.BlossomRewardExcelConfig {
	vuint drop_id
	vuint preview_reward
}
excel class MoleMole.Config.BlossomRefreshExcelConfig {
	vuint id
	vuint nameTextMapHash
	string icon
	vuint descTextMapHash
	vuint cityId
	MoleMole.Config.BlossomRefreshType refreshType
	vuint refreshCount
	string refreshTime
	MoleMole.Config.OpenStateType openState
	vuint openLevel
	vuint closeLevel
	MoleMole.Config.BlossomRefreshCond[] refreshCondVec
	vuint reviseLevel
	MoleMole.Config.ItemLimitType itemLimitType
	vuint blossom_chest_id
	vuint camp_update_need_count
	vuint roundMaxCount
	MoleMole.Config.BlossomRewardExcelConfig[] dropVec
	MoleMole.Config.BlossomShowType clientShowType
	bool hideBG
	MoleMole.Config.BlossomRewardType rewardType
}
nozig excel class MoleMole.Config.BlossomRefreshCond {
	MoleMole.Config.BlossomRefreshCondType type
	vuint[] param
}
excel class MoleMole.Config.BlossomGroupsExcelConfig {
	vuint id
	vuint cityId
	vuint sectionId
	vuint[] refreshTypeVec
	vuint[] newGroupVec
	vuint[] decorateGroupVec
	vuint[] nextCampIdVec
	bool is_safe
	bool is_initial_refresh
	vuint finish_progress
	vuint limit_level
	vuint fight_radius
	vuint remind_radius
	vuint blossom_tipsTextMapHash
	vuint delay_unload_sec
}
excel class MoleMole.Config.BlossomSectionOrderExcelConfig {
	vuint id
	vuint cityId
	vuint sectionId
	vuint order
}
excel class MoleMole.Config.BlossomChestExcelConfig {
	vuint id
	vuint chest_gadget_id
	vuint world_resin
	vuint resin
	MoleMole.Config.BlossomRefreshType refreshType
	MoleMole.Config.BlossomChestShowType clientShowType
}
excel class MoleMole.Config.BlossomReviseExcelConfig {
	vuint id
	vuint[] grade
}
excel class MoleMole.Config.BlossomTalkExcelConfig {
	vuint id
	vuint refreshId
	vuint groupId
	vuint[] talkId
}
excel class MoleMole.Config.BoredEventExcelConfig {
	MoleMole.Config.BoardEventType event_type
	vuint param
	bool is_enable
	vint add_bored
	vint max_bored
}
excel class MoleMole.Config.BoredActionPriorityExcelConfig {
	MoleMole.Config.BoredActionType action_type
	vuint weight
}
excel class MoleMole.Config.BoredCreateMonsterExcelConfig {
	vuint player_level
	MoleMole.Config.BoredMonsterConfig[] monster_config_vec
}
nozig excel class MoleMole.Config.BoredMonsterConfig {
	vuint weight
	vuint id
}
excel class MoleMole.Config.BuffExcelConfig : MoleMole.Config.BaseServerBuffConfig {
	vuint groupId
	string name
	string desc
	float time
	MoleMole.Config.BuffStackType stackType
	bool isPersistent
	bool isDelWhenLeaveScene
}
excel class MoleMole.Config.BaseServerBuffConfig {
	vuint serverBuffId
	MoleMole.Config.ServerBuffType serverBuffType
	string abilityName
	string modifierName
}
excel class MoleMole.Config.BuffIconExcelConfig {
	vint buffID
	string icon
	vint mutexType
}
excel class MoleMole.Config.ChatExcelConfig {
	vuint id
	vuint channel
	float priority
	vuint tabShownNameTextMapHash
	string chatChannelIcon
	vuint TagOtherTextMapHash
	vuint TagSelfTextMapHash
	vuint EnterTextMapHash
	vuint LeaveTextMapHash
}
excel class MoleMole.Config.QuestCodexExcelConfig {
	vuint Id
	vuint parentQuestId
	vuint chapterId
	vuint SortOrder
	bool isDisuse
}
excel class MoleMole.Config.WeaponCodexExcelConfig {
	vuint Id
	vuint weaponId
	vuint SortOrder
	bool isDisuse
	bool showOnlyUnlocked
}
excel class MoleMole.Config.ReliquaryCodexExcelConfig {
	vuint Id
	vuint suitId
	vuint level
	vuint cupId
	vuint leatherId
	vuint capId
	vuint flowerId
	vuint sandId
	vuint SortOrder
	bool isDisuse
	bool showOnlyUnlocked
}
excel class MoleMole.Config.AnimalCodexExcelConfig {
	vuint Id
	MoleMole.Config.AnimalCodexType type
	vuint describeId
	bool isSeenActive
	vuint SortOrder
	bool isDisuse
	bool showOnlyUnlocked
	MoleMole.Config.AnimalCodexSubType subType
	MoleMole.Config.AnimalCodexCountType countType
	vuint descTextMapHash
	string modelPath
	vuint pushTipsCodexId
}
excel class MoleMole.Config.MaterialCodexExcelConfig {
	vuint Id
	MoleMole.Config.MaterialCodexType type
	vuint materialId
	vuint SortOrder
	vuint nameTextMapHash
	vuint descTextMapHash
	string icon
	bool isDisuse
	bool showOnlyUnlocked
	vuint HIBCDKFKPMF
	vuint FPJGJKPGJEL
	vuint OJNMBFBENOH
	vuint HDGHPPIOKEL
	vuint PIOBBDKLEBN
	vuint DIEHPECAFLH
}
excel class MoleMole.Config.BooksCodexExcelConfig {
	vuint Id
	vuint materialId
	vuint SortOrder
	bool isDisuse
}
excel class MoleMole.Config.PushTipsCodexExcelConfig {
	vuint Id
	vuint PushTipId
	vuint SortOrder
	bool isDisuse
}
excel class MoleMole.Config.ViewCodexExcelConfig {
	vuint Id
	vuint gadgetId
	vuint sceneId
	vuint groupId
	vuint configId
	vuint nameTextMapHash
	vuint descTextMapHash
	string image
	vuint cityId
	vuint worldAreaId
	vuint SortOrder
	bool isDisuse
	bool showOnlyUnlocked
}
excel class MoleMole.Config.QuestSummarizationTextExcelConfig {
	vuint Id
	vuint DescTextMapHash
}
excel class MoleMole.Config.TauntLevelTemplateExcelConfig {
	MoleMole.Config.TauntLevel type
	vuint tauntLevelVal
}
excel class MoleMole.Config.LockTemplateExcelConfig {
	string type
	float range
	float combatPri
	float normalPri
}
excel class MoleMole.Config.HitLevelTemplateExcelConfig {
	string type
	string hitLevel
	float hitImpulseX
	float hitImpulseY
}
excel class MoleMole.Config.EntityMultiPlayerExcelConfig {
	vuint id
	MoleMole.Config.EntityPropPerMpConfig[] propPerVec
	vuint[] endureNumVec
	float[] elementShieldPerVec
}
nozig excel class MoleMole.Config.EntityPropPerMpConfig {
	MoleMole.Config.FightPropType propType
	float[] propValueVec
}
excel class MoleMole.Config.ChargeBarStyleExcelConfig {
	vuint id
	string iconName
	MoleMole.Config.ChargeFillEffect fillEffectType
}
excel class MoleMole.Config.PerceptionTemplateExcelConfig {
	vuint id
	float viewRangeFactor
	float feelRangeFactor
	float hearFootstepRangeFactor
	float hearOtherRangeFactor
}
excel class MoleMole.Config.AttackAttenuationExcelConfig {
	string group
	float resetCycle
	float[] durabilitySequence
	float[] enbreakSequence
	float[] damageSequence
}
excel class MoleMole.Config.CombatEndCleanExcelConfig {
	vuint id
	MoleMole.Config.CombatEndType combatEndType
	MoleMole.Config.ModifierTag[] modifierTags
	string[] teamAbilities
}
excel class MoleMole.Config.CombineExcelConfig {
	vuint combineId
	vuint playerLevel
	bool isDefaultShow
	vuint combineType
	vuint subCombineType
	vuint resultItemId
	vuint resultItemCount
	vuint scoinCost
	MoleMole.Config.RandomItemConfig[] randomItems
	MoleMole.Config.IdCountConfig[] materialItems
	vuint effectDescTextMapHash
	MoleMole.Config.RecipeType recipeType
}
nozig excel class MoleMole.Config.RandomItemConfig {
	vuint itemId
	vuint count
	vuint weight
}
excel class MoleMole.Config.ReliquaryDecomposeExcelConfig {
	vuint id
	vuint needReliquaryCount
	vuint needReliquaryRankLevel
	vuint rewardPreviewId
	vuint maxReliquaryNum
	vuint effectDescTextMapHash
}
excel class MoleMole.Config.EntityExcelConfig {
	vuint id
	vuint nameTextMapHash
	vuint prefabPathHash
	vuint prefabPathRemoteHash
	vuint controllerPathHash
	vuint controllerPathRemoteHash
	vuint campID
	string LODPatternName
}
excel class MoleMole.Config.CreatureExcelConfig : MoleMole.Config.EntityExcelConfig {
	float hp_base
	float attack_base
	float defense_base
	float critical
	float antiCritical
	float criticalHurt
	float fireSubHurt
	float grassSubHurt
	float waterSubHurt
	float elecSubHurt
	float windSubHurt
	float iceSubHurt
	float rockSubHurt
	float fireAddHurt
	float grassAddHurt
	float waterAddHurt
	float elecAddHurt
	float windAddHurt
	float iceAddHurt
	float rockAddHurt
	MoleMole.Config.FightPropGrowConfig[] propGrowCurves
	float elementMastery
	float physicalSubHurt
	float physicalAddHurt
	vuint prefabPathRagdollHash
	vuint LAOCAEONEFO
}
nozig excel class MoleMole.Config.FightPropGrowConfig {
	MoleMole.Config.FightPropType type
	MoleMole.Config.GrowCurveType grow_curve
}
excel class MoleMole.Config.CookBonusExcelConfig {
	vuint avatarId
	vuint recipeId
	MoleMole.Config.CookBonusType bonusType
	vuint[] paramVec
	vuint[] complexParamVec
}
excel class MoleMole.Config.MainCoopExcelConfig {
	vuint id
	__HACK_ _HACK__1
	string mainCoopCfg
	vuint mainQuestSeries
}
excel class MoleMole.Config.CoopInteractionExcelConfig {
	vuint id
	__HACK_ _HACK__1
	vuint npcId
	vuint mainQuestId
	vuint priority
	bool isAuto
}
excel class MoleMole.Config.CoopChapterExcelConfig {
	vuint id
	vuint avatarId
	vuint chapterNameTextMapHash
	vuint coopPageTitleTextMapHash
	vuint chapterSortId
	vuint avatarSortId
	string chapterIcon
	MoleMole.Config.CoopCondConfig[] unlockCond
	vuint[] unlockCondTips
	vuint openMaterialId
	vuint openMaterialNum
	string beginTimeStr
	vuint confidenceValue
	string pointGraphPath
	float graphXRatio
	float graphYRatio
}
nozig excel class MoleMole.Config.CoopCondConfig {
	MoleMole.Config.CoopTaskCondType condType
	vuint[] args
}
excel class MoleMole.Config.CoopRewardExcelConfig {
	vuint id
	MoleMole.Config.CoopCondConfig[] rewardCond
	vuint chapterId
	vuint rewardId
	vuint sortId
	vuint condTipTextMapHash
	vuint condTipDesTextMapHash
}
excel class MoleMole.Config.CoopCGExcelConfig {
	vuint id
	vuint chapterId
	vuint unlockPointId
	MoleMole.Config.CoopCGType cgType
	MoleMole.Config.CoopCondConfig[] unlockCond
	vuint showImageHash
	vuint showImageSmallHash
	vuint cgNameTextMapHash
	vuint cgDesTextMapHash
	vuint sortId
}
excel class MoleMole.Config.CoopPointExcelConfig {
	vuint id
	vuint chapterId
	MoleMole.Config.CoopPointType type
	vuint acceptQuest
	vuint[] postPointList
	vuint pointNameTextMapHash
	vuint pointDecTextMapHash
	vuint pointPosId
	vuint photoMaleHash
	vuint photoFemaleHash
}
excel class MoleMole.Config.CoopActivityExcelConfig {
	vuint activityId
	vuint avatarId
	string prefabPath
	vuint activityNameTextMapHash
	vuint activityDesTextMapHash
}
excel class MoleMole.Config.CutsceneExcelConfig {
	vuint id
	string path
}
excel class MoleMole.Config.DailyTaskRewardExcelConfig {
	vuint ID
	MoleMole.Config.DailyTaskDropConfig[] dropVec
}
nozig excel class MoleMole.Config.DailyTaskDropConfig {
	vuint drop_id
	vuint preview_reward_id
}
excel class MoleMole.Config.DailyTaskLevelExcelConfig {
	vuint ID
	vuint minPlayerLevel
	vuint maxPlayerLevel
	vuint groupReviseLevel
	vuint scoreDropId
	vuint scorePreviewRewardId
}
excel class MoleMole.Config.CityTaskOpenExcelConfig {
	vuint cityId
	vuint questId
	vuint[] backupVec
}
excel class MoleMole.Config.DisplayItemExcelConfig : MoleMole.Config.ItemConfig {
	vuint typeDescTextMapHash
	vuint rankLevel
	MoleMole.Config.DisplayItemType displayType
	vuint param
}
excel class MoleMole.Config.DraftExcelConfig {
	vuint id
	MoleMole.Config.DraftTransferConfig[] transferConfig
	vuint sceneId
	MoleMole.Config.DraftExecType exec
	MoleMole.Config.DraftExecSubType execSubType
	vuint param
	bool enableMp
	bool isNeedAllAgree
	vuint confirmCountDown
	vuint minPlayerCount
	bool isNeedTwiceConfirm
	vuint twiceConfirmCountDown
	bool isExecWhenCountDownOver
}
nozig excel class MoleMole.Config.DraftTransferConfig {
	vuint group_id
	vuint config_id
}
excel class MoleMole.Config.DraftTextDataExcelConfig {
	vuint draftId
	string draftBtnName
	string draftBtnTips
	vuint requirementDescTextMapHash
	vuint draftLimitReasonDescTextMapHash
	vuint limitWarningDescTextMapHash
	vuint inviteDescTextMapHash
	vuint inviteGuestDescTextMapHash
	vuint inviteHostDescTextMapHash
	vuint inviteWarningDescTextMapHash
	vuint draftTitleTextMapHash
}
excel class MoleMole.Config.DungeonElementChallengeExcelConfig {
	vuint dungeonId
	vuint[] trialAvatarId
	vuint tutorialId
}
excel class MoleMole.Config.DungeonEntryExcelConfig {
	vuint id
	vuint sceneId
	vuint dungeonEntryId
	MoleMole.Config.DungunEntryType type
	bool isShowInAdvHandbook
	vuint descTextMapHash
	vuint[] cooldownTipsDungeonId
	bool isDefaultOpen
	bool isDailyRefresh
	MoleMole.Config.LogicType cond_comb
	MoleMole.Config.DungeonEntrySatisfiedCond[] satisfied_cond
	string picPath
	vuint systemOpenUiId
	vuint rewardDataId
	vuint[][] descriptionCycleRewardList
}
nozig excel class MoleMole.Config.DungeonEntrySatisfiedCond {
	MoleMole.Config.DungeonEntrySatisfiedConditionType type
	vuint param1
	vuint param2
}
excel class MoleMole.Config.DungeonPassExcelConfig {
	vuint id
	MoleMole.Config.LogicType logicType
	MoleMole.Config.DungeonCondConfig[] conds
}
nozig excel class MoleMole.Config.DungeonCondConfig {
	MoleMole.Config.DungeonCondType condType
	vint[] param
}
excel class MoleMole.Config.DynamicInteractionExcelConfig {
	vuint id
	vuint selfContentTextMapHash
	vuint selfContent1TextMapHash
	string selfInteeIconName
	vuint otherContentTextMapHash
	string otherInteeIconName
	bool otherCanIntee
}
excel class MoleMole.Config.ElementCoeffExcelConfig {
	vuint level
	float crashCo
	float elementLevelCo
	float playerElementLevelCo
	float playerShieldLevelCo
}
excel class MoleMole.Config.ReactionEnergyExcelConfig {
	MoleMole.Config.ElementReactionType type
	float minDurability
	float maxDurability
	float costRatio
	vuint configID
	float poolSize
	float poolRevivePeriod
	float poolReviveEnergy
	bool isPersistent
	float costPeriod
	vuint dropProb
}
excel class MoleMole.Config.EmojiDataExcelConfig {
	vuint id
	vuint setID
	vuint order
	vuint contentTextMapHash
	string icon
}
excel class MoleMole.Config.EmojiSetDataExcelConfig {
	vuint id
	vuint order
	string icon
}
excel class MoleMole.Config.EmotionTemplateExcelConfig {
	vuint ID
	__HACK_ _HACK__1
	__HACK_ _HACK__2
	__HACK_ _HACK__3
	vint freeStyleId
	string bubbleName
	string emotionPath
	float protectTime
}
excel class MoleMole.Config.EndureTemplateExcelConfig {
	MoleMole.Config.EndureType type
	float gaugeLength
	float waneSpeed
	float recoverTime
	float endurance
}
excel class MoleMole.Config.EnvAnimalGatherExcelConfig {
	vuint animalId
	vuint areaId
	MoleMole.Config.EntityType entityType
	MoleMole.Config.IdCountConfig[] gatherItemList
	vuint escapeRadius
	vuint escapeTime
	vuint aliveTime
	string excludeWeathers
}
excel class MoleMole.Config.EnvAnimalWeightExcelConfig {
	MoleMole.Config.EnvironmentType envType
	MoleMole.Config.EnvironmentWeightType[] weightVec
}
nozig excel class MoleMole.Config.EnvironmentWeightType {
	vuint animalId
	MoleMole.Config.EntityType entityType
	vuint weight
	map<vuint,vuint> aliveHourMap
}
excel class MoleMole.Config.ExhibitionCardExcelConfig {
	vuint id
	vuint titleTextMapHash
	vuint descTextMapHash
	vuint styleTextMapHash
	vuint priority
	MoleMole.Config.ExhibitionCardOrderType orderType
}
excel class MoleMole.Config.ExhibitionScoreExcelConfig {
	vuint id
	vuint seriesID
	MoleMole.Config.ExhibitionScoreType scoreType
	vuint score
	vuint descTextMapHash
	bool showOut
}
excel class MoleMole.Config.ExhibitionListExcelConfig {
	vuint id
	bool defaultShow
	vuint displayId
	vuint seriesID
	vuint displayTitleTextMapHash
	vuint displayFormatTextMapHash
	MoleMole.Config.ExhibitionListDisplayType displayType
}
excel class MoleMole.Config.ExpeditionDataExcelConfig {
	vuint ID
	vuint nameTextMapHash
	vuint cityId
	MoleMole.Config.ExpeditionOpenCondition[] openConditionVec
	MoleMole.Config.ExpeditionReward[] timeRewardVec
	vuint descriptionTextMapHash
	string picture
	float posX
	float posY
}
nozig excel class MoleMole.Config.ExpeditionOpenCondition {
	MoleMole.Config.ExpeditionOpenCondType type
	vuint para
	vuint para2
}
nozig excel class MoleMole.Config.ExpeditionReward {
	vuint htime
	vuint reward_drop_id
	vuint rewardPreview
}
excel class MoleMole.Config.ExploreExcelConfig {
	vuint materialID
	vuint exp
}
excel class MoleMole.Config.ExploreAreaTotalExpExcelConfig {
	vuint areaID
	vuint totalExp
	float reputationRatio
}
excel class MoleMole.Config.DungeonMapAreaExcelConfig {
	vuint dungeonID
	vuint areaID
}
excel class MoleMole.Config.FeatureTagExcelConfig {
	vuint tagID
	MoleMole.Config.FeatureTagEnum featureTagEnum
}
excel class MoleMole.Config.FetterInfoExcelConfig : MoleMole.Config.FetterConfig {
	bool isHiden
	vuint infoBirthMonth
	vuint infoBirthDay
	vuint avatarNativeTextMapHash
	vuint avatarVisionBeforTextMapHash
	vuint avatarConstellationBeforTextMapHash
	vuint avatarTitleTextMapHash
	vuint avatarDetailTextMapHash
	MoleMole.Config.AssocType avatarAssocType
	vuint cvChineseTextMapHash
	vuint cvJapaneseTextMapHash
	vuint cvEnglishTextMapHash
	vuint cvKoreanTextMapHash
	vuint avatarVisionAfterTextMapHash
	vuint avatarConstellationAfterTextMapHash
}
excel class MoleMole.Config.FetterStoryExcelConfig : MoleMole.Config.FetterConfig {
	bool isHiden
	vuint storyTitleTextMapHash
	vuint storyContextTextMapHash
	vuint storyTitle2TextMapHash
	vuint storyContext2TextMapHash
	vuint[] tips
	vuint storyTitleLockedTextMapHash
}
excel class MoleMole.Config.FetterCharacterCardExcelConfig {
	vuint avatarId
	vuint fetterLevel
	vuint rewardId
}
excel class MoleMole.Config.FireworksExcelConfig {
	vuint materialID
	MoleMole.Config.FireworksReformParamConfig[] reformParamList
	MoleMole.Config.FireworksType fireworksType
	string liftOffEffectName
	string explodeEffectName
	vuint detailedDescTextMapHash
}
nozig excel class MoleMole.Config.FireworksReformParamConfig {
	MoleMole.Config.FireworksReformParamType type
	vint standardValue
	bool isCanReform
	vint[] valueRange
}
excel class MoleMole.Config.FireworksLaunchExcelConfig {
	MoleMole.Config.FireworksLaunchParamType launchParamType
	vint defaultValue
	vint[] adjustRange
	vint adjustStep
	vuint launchParamNameTextMapHash
}
excel class MoleMole.Config.FireworksFactorExcelConfig {
	MoleMole.Config.FireworksReformParamType reformParamType
	vuint paramNameTextMapHash
	string paramIcon
	vuint adjustLeftDescTextMapHash
	vuint adjustRightDescTextMapHash
	vuint descriptionFormatTextMapHash
	float adjustFactor
}
excel class MoleMole.Config.FishStockExcelConfig {
	vuint id
	MoleMole.Config.FishStockType type
	map<vuint,vuint> fishWeight
}
excel class MoleMole.Config.FishPoolExcelConfig {
	vuint id
	vuint[] stockList
	map<vuint,vuint> stockGuarantee
	MoleMole.Config.FishStockLimit[] stockLimitList
	vuint maxNum
	vuint poolNameTextMapHash
	vuint poolDescTextMapHash
	string abilityGroup
	string teamAbilityGroup
	vuint[] dropIdList
	vuint dailyLimitNum
	vuint[] excludeFish
	vuint cityId
}
nozig excel class MoleMole.Config.FishStockLimit {
	MoleMole.Config.FishStockType stockType
	vuint minNum
	vuint maxNum
}
excel class MoleMole.Config.FishExcelConfig {
	vuint id
	vuint monsterId
	vuint itemId
	vuint hp
	vuint[] skillId
	vuint proficientId
	vuint bonusWidth
	float[] bonusDuration
	vuint[] bonusOffset
	float[] bonusSpeed
	float[] feelerTimes
	float attractRange
	float fleeRange
	vuint rewardId
	vuint[] dropIdList
	vuint fishCateId
	vuint biteTimeout
	vuint initPose
	vuint compoundId
}
excel class MoleMole.Config.FishSkillExcelConfig {
	vuint id
	MoleMole.Config.FishSkillCategory skillCategory
	MoleMole.Config.FishSkillType skillType
	float[] param
	vuint strength
	float forceFactor
	float[] bonusWidth
	float[] bonusDuration
	vuint[] bonusOffset
	float[] bonusSpeed
	float duration
	vuint priority
}
excel class MoleMole.Config.FishBaitExcelConfig {
	vuint id
	MoleMole.Config.FishBaitFeature[] featureList
	byte sort
	vuint[] poolIdList
}
nozig excel class MoleMole.Config.FishBaitFeature {
	vuint featureTag
	float weight
	float bonusRange
}
excel class MoleMole.Config.FishRodExcelConfig {
	vuint id
	float baseAttack
	float attackAcc
	float maxAttack
	vuint cityId
	float attackMag
}
excel class MoleMole.Config.ForgeExcelConfig {
	vuint id
	vuint playerLevel
	bool isDefaultShow
	vuint[] effectiveWorldLevels
	vuint forgeType
	vuint showItemId
	vuint showConsumeItemId
	vuint resultItemId
	vuint resultItemCount
	vuint mainRandomDropId
	vuint mainForgeRandomId
	vuint forgeTime
	vuint queueNum
	vuint scoinCost
	MoleMole.Config.RandomItemConfig[] randomItems
	MoleMole.Config.IdCountConfig[] materialItems
	vuint priority
	vuint forgePoint
	vuint forgePointNoticeTextMapHash
}
excel class MoleMole.Config.ForgeRandomExcelConfig {
	vuint forgeRandomId
	MoleMole.Config.RandomItemConfig[] mainRandomItems
}
excel class MoleMole.Config.ForgeUpdateExcelConfig {
	vuint playerLevel
	vuint forgeQueueNum
}
excel class MoleMole.Config.NightCrowArgumentExcelConfig {
	vuint argumentId
	vuint[] gadgetStateList
	string posOffset
	string rotation
	string positionList
	string limitPositionList
	string limitCenterPosition
	string PDLMPDKBFBO
	string CDHMLBDBIPI
	string fov
}
excel class MoleMole.Config.GadgetExcelConfig : MoleMole.Config.EntityExcelConfig {
	MoleMole.Config.EntityType type
	__HACK_ _HACK__1
	string jsonName
	bool hasMove
	bool hasAudio
	bool isEquip
	bool isInteractive
	MoleMole.Config.VisionLevelType visionLevel
	string[] tags
	vuint clientScriptHash
	__HACK_ _HACK__11
	string itemJsonName
	vuint itemPrefabPathHash
	vuint radarHintID
	string inteeIconName
	vuint landSoundID
	vuint mpPropID
	vuint interactNameTextMapHash
	vuint chainId
	__HACK_ _HACK__21
	bool hasDynamicBarrier
}
excel class MoleMole.Config.GadgetPropExcelConfig {
	vuint id
	float hp
	MoleMole.Config.GrowCurveType hpCurve
	float attack
	MoleMole.Config.GrowCurveType attackCurve
	float defense
	MoleMole.Config.GrowCurveType defenseCurve
}
excel class MoleMole.Config.RadarHintExcelConfig {
	vuint id
	MoleMole.Config.RadarHintType radarHintType
	string name
	float radius
	float offsetRadius
	float areaRadius
	bool OGOENMCMEII
	string effectName
	string iconName
	string audioName
	bool IKMEHEBFJBA
}
excel class MoleMole.Config.LandSoundExcelConfig {
	vuint id
	string name
	string audioName
}
excel class MoleMole.Config.GadgetInteractExcelConfig {
	vuint interactId
	MoleMole.Config.InteractActionType actionType
	vuint param1
	vuint param2
	MoleMole.Config.GadgetInteractActionConfig[] actionList
	bool isGuestInteract
	__HACK_ _HACK__6
	MoleMole.Config.IdCountConfig[] costItems
	vuint uiTitleTextMapHash
	vuint uiDescTextMapHash
	MoleMole.Config.GadgetInteractCond[] condList
	MoleMole.Config.LogicType condComb
	bool isMpModeInteract
}
nozig excel class MoleMole.Config.GadgetInteractActionConfig {
	MoleMole.Config.InteractActionType actionType
	vuint[] param
}
nozig excel class MoleMole.Config.GadgetInteractCond {
	MoleMole.Config.InteractCondType condType
	string[] param
}
excel class MoleMole.Config.GadgetGuestExcelConfig {
	vuint id
	MoleMole.Config.GuestButtonShowType showType
}
excel class MoleMole.Config.GadgetTitleExcelConfig {
	vuint gadgetId
	vuint titleTextMapHash
}
excel class MoleMole.Config.GadgetChainExcelConfig {
	vuint chainId
	vuint initLevel
	vuint maxLevel
	vuint[] buffList
	bool isAllowLuaRevise
}
excel class MoleMole.Config.GatherExcelConfig {
	vuint id
	vuint area_id
	vuint pointType
	vuint gadgetId
	vuint itemId
	vuint[] extraItemIdVec
	MoleMole.Config.PointLocation pointLocation
	vuint cd
	vuint priority
	vuint refreshId
	MoleMole.Config.BlockLimit[] blockLimits
	bool init_disable_interact
	bool isForbidGuest
	MoleMole.Config.GatherSaveType saveType
	bool isForbidMpMode
	bool isMultiState
	bool canScanByNahida
}
nozig excel class MoleMole.Config.BlockLimit {
	vuint blockId
	vuint count
}
excel class MoleMole.Config.GatherBundleExcelConfig {
	vuint id
	string bundleName
	vuint baseGadgetId
	MoleMole.Config.PointInfo[] points
}
nozig excel class MoleMole.Config.PointInfo {
	vuint pointID
	vuint pointType
	float offsetX
	float offsetY
	float offsetZ
	float rotX
	float rotY
	float rotZ
}
excel class MoleMole.Config.OptionExcelConfig {
	vuint id
	vuint contentTextMapHash
	string inteeIconName
	__HACK_ _HACK__4
	bool gusetInteeButtonShow
	bool cancelOnlineMatch
	float disableChangeAvatarTime
}
excel class MoleMole.Config.GivingExcelConfig {
	vuint Id
	vuint talkId
	vuint mistakeTalkId
	MoleMole.Config.BagTab tab
	bool isRepeatable
	MoleMole.Config.GivingMethod givingMethod
	MoleMole.Config.IdCountConfig[] exactItems
	vuint exactFinishTalkId
	vuint[] givingGroupIds
	vuint givingGroupCount
	bool highlight
	string icon
	bool isRemoveItem
	bool isReset
	bool isMpEnable
	MoleMole.Config.GivingType givingType
	bool isTakeBack
}
excel class MoleMole.Config.GivingGroupExcelConfig {
	vuint Id
	vuint[] ItemIds
	vuint finishTalkId
	vuint mistakeTalkId
	vuint finishDialogId
}
excel class MoleMole.Config.GroupTagExcelConfig {
	vuint id
	__HACK_ _HACK__1
	string tagName
}
excel class MoleMole.Config.AvatarCurveExcelConfig {
	vuint level
	MoleMole.Config.GrowCurveInfo[] curveInfos
}
nozig excel class MoleMole.Config.GrowCurveInfo {
	MoleMole.Config.GrowCurveType type
	MoleMole.Config.ArithType arith
	float value
}
excel class MoleMole.Config.MonsterCurveExcelConfig {
	vuint level
	MoleMole.Config.GrowCurveInfo[] curveInfos
}
excel class MoleMole.Config.GadgetCurveExcelConfig {
	vuint level
	MoleMole.Config.GrowCurveInfo[] curveInfos
}
excel class MoleMole.Config.WeaponCurveExcelConfig {
	vuint level
	MoleMole.Config.GrowCurveInfo[] curveInfos
}
excel class MoleMole.Config.GuideTriggerExcelConfig {
	string guideName
	MoleMole.Config.GuideTriggerType type
	vuint param1
	MoleMole.Config.OpenStateType openState
}
excel class MoleMole.Config.GuideRatingExcelConfig {
	vuint channelID
	vuint subChannelId
	bool isChinaServer
	MoleMole.Config.GuidePlatformType platform
	string url
}
excel class MoleMole.Config.H5ActivityExcelConfig {
	vuint h5ActivityId
	vuint nameTextMapHash
	vuint detailTextMapHash
	vuint rewardPreview
	MoleMole.Config.LogicType condComb
	MoleMole.Config.H5ActivityCondConfig[] condList
}
nozig excel class MoleMole.Config.H5ActivityCondConfig {
	MoleMole.Config.H5ActivityCondType type
	string paramStr
}
excel class MoleMole.Config.H5ActivityWatcherExcelConfig : MoleMole.Config.WatcherConfig {
	vuint h5ActivityId
	MoleMole.Config.LogicType condComb
	MoleMole.Config.H5ActivityCondConfig[] condList
	bool isDailyRefresh
}
excel class MoleMole.Config.HandbookQuestGuideExcelConfig {
	vuint guideID
	vuint typeID
	vuint labelTextMapHash
	vuint mainQuestID
	vuint chapterID
	MoleMole.Config.QuestType questType
	vuint order
	string icon
	bool isHidenWQ
	vuint hidenSubQuestID
	vuint markPointID
	vuint specialGuideID
	bool showLabelTip
	MoleMole.Config.HandbookQuestGuideShowCond[] showConds
}
nozig excel class MoleMole.Config.HandbookQuestGuideShowCond {
	MoleMole.Config.HandbookQuestGuideShowCondType type
	vuint[] param
}
excel class MoleMole.Config.HandbookQuestGuideHintPicExcelConfig {
	vuint picID
	string imagePath
}
excel class MoleMole.Config.HomeWorldFurnitureTypeExcelConfig {
	vuint typeID
	vuint typeCategoryID
	vuint typeNameTextMapHash
	vuint typeName2TextMapHash
	string tabIcon
	MoleMole.Config.FurnitureDeployType sceneType
	vuint cameraID
	vuint bagPageOnly
	bool isShowInBag
	vuint limit
}
excel class MoleMole.Config.HomeWorldSpecialFurnitureExcelConfig {
	vuint ID
	vuint furnitureID
	vuint sceneID
	vuint[] gadgetID
}
excel class MoleMole.Config.HomeworldAnimalExcelConfig {
	vuint furnitureID
	vuint monsterID
	vuint isRebirth
	vuint rebirthCD
}
excel class MoleMole.Config.HomeworldModuleExcelConfig {
	vuint Id
	bool isFree
	vuint unlockTipIfUnFreeTextMapHash
	vuint worldSceneId
	vuint defaultRoomSceneId
	vuint[] optionalRoomSceneIdVec
	vuint moduleNameTextMapHash
	vuint moduleDescTextMapHash
	string[] region
	string[] regionPointPos
	string smallImageAddr
	string bigImageAddr
}
excel class MoleMole.Config.HomeworldLevelExcelConfig {
	vuint level
	vuint exp
	vuint comfortPointLimit
	vuint homeCoinStoreLimit
	vuint homeFetterExpStoreLimit
	vuint rewardId
	vuint furnitureMakeSlotCount
	vuint outdoorUnlockBlockCount
	vuint freeUnlockModuleCount
	vuint deployNpcCount
	vuint djinnGadgetId
	vuint limitShopGoodsCount
	vuint limitShopGoodsExtraCount
	string[] levelFuncs
}
excel class MoleMole.Config.FurnitureMakeExcelConfig {
	vuint configID
	vuint furnitureItemID
	vuint count
	vuint exp
	MoleMole.Config.IdCountConfig[] materialItems
	vuint makeTime
	vuint maxAccelerateTime
	vuint quickFetchMaterialNum
}
excel class MoleMole.Config.HomeWorldShopSubTagExcelConfig {
	vuint subID
	bool showNewMark
	vuint subTagTextMapHash
}
excel class MoleMole.Config.HomeWorldLimitShopExcelConfig {
	vuint goodsId
	vuint itemID
	vuint poolID
	MoleMole.Config.HomeWorldLimitShopCond[] cond
	vuint buyLimit
	MoleMole.Config.IdCountConfig[] costItems
	vuint weight
}
nozig excel class MoleMole.Config.HomeWorldLimitShopCond {
	MoleMole.Config.HomeWorldLimitShopCondType condition
	vuint[] conditionParam
}
excel class MoleMole.Config.HomeWorldLeastShopExcelConfig {
	vuint level
	vuint poolID
	vuint count
}
excel class MoleMole.Config.HomeWorldComfortLevelExcelConfig {
	vuint levelID
	vuint comfort
	vuint homeCoinProduceRate
	vuint companionshipExpProduceRate
	vuint levelNameTextMapHash
	vuint levelIconHash
}
excel class MoleMole.Config.HomeWorldEventExcelConfig {
	vuint eventID
	MoleMole.Config.HomeAvatarEventType eventType
	vuint avatarID
	vuint talkID
	vuint rewardID
	vuint furnitureSuitID
	vuint lasttime
	vuint order
	MoleMole.Config.HomeAvatarEventCondType conditionType1
	vuint conditionParam1
	MoleMole.Config.HomeAvatarEventCondType conditionType2
	vuint conditionParam2
}
excel class MoleMole.Config.HomeWorldFarmFieldExcelConfig {
	vuint fieldItemID
	MoleMole.Config.HomeWorldFieldType fieldType
	vuint fieldGadgetID
	vuint fieldSlotNum
	vuint[] fieldSlotGadgetID
}
excel class MoleMole.Config.HomeWorldExtraFurnitureExcelConfig {
	vuint furnitureID
	string[] extraData
}
excel class MoleMole.Config.HomeWorldNPCExcelConfig {
	vuint furnitureID
	vuint avatarID
	vuint npcID
	vuint[] talkIDs
	bool isNPC
	string headIcon
	string frontIcon
	string sideIcon
	MoleMole.Config.QualityType quality
	vuint showNameTextMapHash
	vuint descTextMapHash
}
excel class MoleMole.Config.HomeWorldCustomFurnitureSlotExcelConfig : MoleMole.Config.CustomSlotConfig {
	vuint slotNameTextMapHash
	vuint noPartsTipsTextMapHash
	vuint getPartsTipsTextMapHash
	vuint[] rootGadgetIdList
	string[] slotIdentifierPathList
	vuint[] dependentSlotIdList
	string pageTitle
	string effectSlotSelect
	string effectPartsSetup
}
excel class MoleMole.Config.HomeWorldServerGadgetExcelConfig {
	vuint furnitureId
	vuint serverGadgetId
}
excel class MoleMole.Config.CusmtomGadgetSlotExcelConfig : MoleMole.Config.CustomSlotConfig {
}
excel class MoleMole.Config.CustomSlotConfig {
	vuint slotId
	vuint[] optionalPartsIdList
	bool isNecessary
	vuint[] defaultPartsIdList
	vuint[] passPartsIdList
	vuint initPartsid
}
excel class MoleMole.Config.CusmtomGadgetConfigIdExcelConfig {
	vuint configId
	vuint itemId
	vuint gadgetId
	vuint optionNameTextMapHash
	vuint optionTitleTextMapHash
}
excel class MoleMole.Config.CustomGadgetRootExcelConfig {
	vuint rootGadgetID
	MoleMole.Config.CustomGadgetRootType contextType
	string pageTitle
	string recommendConfig
	vuint[] tabList
	vuint[] NJADHPMNLDD
}
excel class MoleMole.Config.CustomGadgetTabExcelConfig {
	vuint tabId
	vuint tabNameTextMapHash
	string[] slotIdentifierPathList
	vuint dependentTabId
	string effectSlotSelect
	string effectPartsSetup
	vuint noPartsTipsTextMapHash
	vuint getPartsTipsTextMapHash
}
excel class MoleMole.Config.HuntingRefreshExcelConfig {
	vuint id
	vuint cityId
	MoleMole.Config.HuntingOfferDifficultyType difficulty
	vuint regionId
	vuint finishRewardId
}
excel class MoleMole.Config.HuntingRegionExcelConfig {
	vuint id
	float[] centerPosList
	vuint centerRadius
	vuint[] safeClueGroup
	vuint[] clueGroup
	vuint[] safeDestinationGroup
	vuint[] destinationGroup
	vuint regionInfoTextMapHash
	vuint[] certainFinalMonsterId
}
excel class MoleMole.Config.HuntingGroupInfoExcelConfig {
	vuint groupId
	vuint regionId
	MoleMole.Config.HuntingCluePointType pointType
	vuint[] refIndex
	MoleMole.Config.HuntingMonsterCreatePosType posType
}
excel class MoleMole.Config.HuntingClueMonsterExcelConfig {
	vuint configId
	vuint monsterId
	vuint reviseLevelId
	MoleMole.Config.HuntingMonsterGroupType groupType
	vuint monsterGroupId
	vuint level
	bool isClueMonster
}
excel class MoleMole.Config.HuntingClueGatherExcelConfig {
	vuint configId
	vuint gatherId
	vuint gatherGroupId
	bool isClueGather
}
excel class MoleMole.Config.HuntingClueTextExcelConfig {
	vuint clueTextId
	vuint[] reminderIdList
}
excel class MoleMole.Config.LevelSuppressExcelConfig {
	vint level
	float levelSuppressDamageCo
	float levelSuppressEndure
	float levelSuppressDisMinHorizontal
	float levelSuppressDisMaxHorizontal
	float levelSuppressDisMinVertical
	float levelSuppressDisMaxVertical
	bool isAttackerPlayer
	bool isDefenserPlayer
}
excel class MoleMole.Config.LevelTagExcelConfig {
	vuint ID
	string levelTagName
	vuint sceneId
	vuint[] addSceneTagIdList
	vuint[] removeSceneTagIdList
	bool levelTagCanFixTime
	float levelTagFixedEnviroTime
	vuint[] loadDynamicGroupList
}
excel class MoleMole.Config.LevelTagGroupsExcelConfig {
	vuint ID
	MoleMole.Config.LevelTagGroup[] levelTagGroupList
	vuint[] initialLevelTagIdList
	vuint changeCd
}
nozig excel class MoleMole.Config.LevelTagGroup {
	vuint[] levelTagIdList
}
excel class MoleMole.Config.LevelTagResetExcelConfig {
	vuint ID
	vuint dungeonId
	vuint[] seriesIdList
}
excel class MoleMole.Config.LoadingTipsExcelConfig {
	vuint id
	vuint tipsTitleTextMapHash
	vuint tipsDescTextMapHash
	string stageID
	string startTime
	string endTime
	vuint minLevel
	vuint maxLevel
	string limitOpenState
	string preMainQuestIds
	vuint[] preQuestIdList
	vuint[] disableQuestIdList
	vuint[] enableDungeonId
	vuint weight
}
excel class MoleMole.Config.LoadingSituationExcelConfig {
	vuint stageID
	MoleMole.Config.LoadingTipsSituationType loadingSituationType
	vuint[] sceneID
	vuint[] area1_ID
	MoleMole.Config.LoadingAreaType areaTerrainType
	string picPath
}
excel class MoleMole.Config.LocalizationExcelConfig {
	vuint id
	MoleMole.Config.LocalizationAssetType assetType
	string defaultPath
	string scPath
	string tcPath
	string enPath
	string krPath
	string jpPath
	string esPath
	string frPath
	string idPath
	string ptPath
	string ruPath
	string thPath
	string viPath
	string dePath
	string trPath
	string itPath
}
excel class MoleMole.Config.MailExcelConfig {
	vuint id
	vuint expireDays
	vuint titleTextMapHash
	vuint contentTextMapHash
	vuint senderTextMapHash
	bool isStar
	vuint rewardId
}
excel class MoleMole.Config.BirthdayMailExcelConfig {
	vuint id
	vuint mailId
	vuint rewardId
	string effectiveDate
	vuint effectiveTimestamp
}
excel class MoleMole.Config.MatchLimitExcelConfig {
	vuint id
	MoleMole.Config.MatchCond[] cond
}
nozig excel class MoleMole.Config.MatchCond {
	MoleMole.Config.MatchLimitType type
	vint param
}
excel class MoleMole.Config.MatchExcelConfig {
	vuint id
	MoleMole.Config.MatchSubType matchSubType
	vuint minPlayerNum
	vuint maxPlayerNum
	vuint confirmTime
	bool isContinueMatch
}
excel class MoleMole.Config.MatchingTextDataExcelConfig {
	vuint matchId
	vuint matchIconHash
	string matchBtnName
	string matchBtnTips
	vuint requirementDescTextMapHash
	vuint matchLimitReasonDescTextMapHash
	vuint limitWarningDescTextMapHash
	vuint inviteGuestDescTextMapHash
	vuint inviteHostDescTextMapHash
	string matchStartDesc
	vuint matchTitleTextMapHash
	vuint matchSuccessDescTextMapHash
}
excel class MoleMole.Config.MatchPunishExcelConfig {
	vuint times
	vuint punishTime
}
excel class MoleMole.Config.MatchNewRuleExcelConfig {
	MoleMole.Config.DungeonSubType dungeonSubType
	bool isEnable
	vuint minLevel
	vuint playerLevelBoundary
	vuint timeBoundary
}
excel class MoleMole.Config.MatchNewRuleSpecifiedExcelConfig {
	vuint dungeonId
	bool isEnable
	vuint playerLevelBoundary
	vuint timeBoundary
}
excel class MoleMole.Config.DocumentExcelConfig {
	vuint id
	vuint titleTextMapHash
	vuint contentLocalizedId
	string previewPath
	MoleMole.Config.DocumentType documentType
	string videoPath
	vuint subtitleId
	vuint[] KIGOMBDJLPP
	vuint[] JBJEDLAMEBK
}
excel class MoleMole.Config.MaterialSourceDataExcelConfig {
	vuint id
	vuint[] dungeonList
	MoleMole.Config.SourceJumpConfig[] jumpList
	vuint[] dungeonGroup
	string[] jumpTargets
	vuint[] jumpParams
	vuint[] jumpDescs
	vuint[] textList
}
nozig excel class MoleMole.Config.SourceJumpConfig {
	MoleMole.Config.SourceJumpType jumpType
	vuint jumpParam
}
excel class MoleMole.Config.BookSuitExcelConfig {
	vuint id
	vuint suitNameTextMapHash
}
excel class MoleMole.Config.MiracleRingExcelConfig {
	vuint itemId
	vuint miracleValue
	MoleMole.Config.MiracleTag[] miracleTag
}
excel class MoleMole.Config.MiracleRingDropExcelConfig {
	MoleMole.Config.MiracleTag miracleTag
	vuint[] dropId
}
excel class MoleMole.Config.MonsterExcelConfig : MoleMole.Config.CreatureExcelConfig {
	__HACK_ _HACK__0
	string monsterName
	MoleMole.Config.MonsterType type
	__HACK_ _HACK__3
	MoleMole.Config.MonsterSecurityLevel securityLevel
	vuint scriptDataPathHash
	string serverScript
	vuint combatConfigHash
	vuint[] affix
	string ai
	bool isAIHashCheck
	vuint[] equips
	bool canSwim
	MoleMole.Config.MonsterDrop[] hpDrops
	vuint killDropId
	bool isSceneReward
	MoleMole.Config.VisionLevelType visionLevel
	bool isInvisibleReset
	string excludeWeathers
	vuint featureTagGroupID
	vuint mpPropID
	string skin
	vuint describeId
	bool safetyCheck
	vint combatBGMLevel
	vint entityBudgetLevel
	vuint radarHintID
}
nozig excel class MoleMole.Config.MonsterDrop {
	vuint dropId
	float hpPercent
}
excel class MoleMole.Config.MonsterAffixExcelConfig {
	vuint id
	string affix
	string comment
	string[] abilityName
	bool isCommon
	bool preAdd
	string isLegal
	string iconPath
	vuint radarHintID
	string generalSkillIcon
}
excel class MoleMole.Config.MonsterRelationshipExcelConfig {
	vuint id
	string tagStr
	MoleMole.Config.MonsterRarityType monsterRarity
	string JMCBDGINBOM
	bool KNCEHPLHPIE
}
excel class MoleMole.Config.MonsterDescribeExcelConfig {
	vuint id
	vuint nameTextMapHash
	vuint titleID
	vuint specialNameLabID
	string icon
}
excel class MoleMole.Config.AnimalDescribeExcelConfig {
	vuint id
	vuint nameTextMapHash
	string icon
}
excel class MoleMole.Config.MonsterTitleExcelConfig {
	vuint titleID
	vuint titleNameTextMapHash
	bool isInverted
}
excel class MoleMole.Config.MonsterSpecialNameExcelConfig {
	vuint specialNameID
	vuint specialNameLabID
	vuint specialNameTextMapHash
	bool isInRandomList
}
excel class MoleMole.Config.CaptureExcelConfig {
	vuint monsterID
	MoleMole.Config.CaptureTagConfig[] captureTagConfig
}
nozig excel class MoleMole.Config.CaptureTagConfig {
	vuint captureType
	vuint dropID
	vuint itemID
}
excel class MoleMole.Config.CaptureTagsExcelConfig {
	vuint captureTagID
	MoleMole.Config.CaptureCodexShowType codexShowType
	MoleMole.Config.ItemLimitType itemLimitType
}
excel class MoleMole.Config.MpPlayMatchExcelConfig {
	vuint id
	MoleMole.Config.MpPlayType playType
	vuint playNameTextMapHash
	vuint playDescTextMapHash
	bool isAutoMatch
	vuint minPlayers
	vuint maxPlayers
	bool isAllowInAnyTime
	bool isMatchNecessary
	MoleMole.Config.MpPlaySettleType settleType
	vuint seriesId
	vuint[] buffList
	vuint pushTipsId
	string bgImage
	bool noProgress
}
excel class MoleMole.Config.MpPlayGroupExcelConfig {
	vuint EntryId
	vuint playId
	vuint[] serverLuaCallGroupList
	vuint resinCost
	vuint materialCostId
	vuint materialCostNum
	bool isDirectToBag
	vuint[] upAvatarList
	MoleMole.Config.MpPlayShowType clientShowType
	MoleMole.Config.MpCrucibleRewardConfig[] rewardVec
	vuint[] activateGroupList
	vuint[] groupList
	vuint bornGroupId
	vuint bornConfigId
	vuint safeGroupId
	vuint safeConfigId
	vuint rebornGroupId
	vuint rebornConfigId
	vuint rewardGroupId
	vuint rewardConfigId
	vuint generalRewardConfigId
	vuint prepareTime
	vuint singlePrepareTime
	float[] centerPosList
	vuint centerRadius
	float[] targetPosList
	vuint reviseId
	vuint[] rateList
	string limitRegion
	vuint[] abilityGroupList
	bool isDisabled
}
nozig excel class MoleMole.Config.MpCrucibleRewardConfig {
	vuint dropID
	vuint rewardId
	vuint rewardPreview
}
excel class MoleMole.Config.MpPlayBuffExcelConfig {
	vuint id
	vuint nameTextMapHash
	vuint descTextMapHash
	string icon
}
excel class MoleMole.Config.MpPlayTextDataExcelConfig {
	vuint mpPlayId
	vuint questTextMapHash
	vuint rewardTextMapHash
	vuint inviteTextMapHash
	vuint invitedescTextMapHash
	vuint invitedeschostTextMapHash
	vuint startTextMapHash
	vuint starttipTextMapHash
	vuint victoryTextMapHash
	vuint failTextMapHash
	vuint riviveTextMapHash
	vuint timespendTextMapHash
	vuint upAvatarTextTextMapHash
}
excel class MoleMole.Config.MpPlayLevelTextDataExcelConfig {
	vuint id
	vuint nameTextMapHash
	vuint descTextMapHash
}
excel class MoleMole.Config.MpPlayScoreExcelConfig {
	MoleMole.Config.MpPlayType playType
	vuint[] param
	bool isCalcScore
}
excel class MoleMole.Config.MpPlayAbilityGroupExcelConfig {
	vuint index
	vuint avatarId
}
excel class MoleMole.Config.MultistageExcelConfig {
	string stageType
	bool isMainGroupCanUnload
}
excel class MoleMole.Config.NewActivityExcelConfig {
	vuint activityId
	MoleMole.Config.NewActivityType activityType
	vuint nameTextMapHash
	string activitySceneTag
	bool isLoadTerrain
	vuint[] condGroupId
	vuint[] watcherId
	bool isBanClientUi
	vuint[] activityCoinIdList
	vuint[] dungeonIdList
}
excel class MoleMole.Config.NewActivityCondExcelConfig {
	vuint condId
	MoleMole.Config.LogicType condComb
	MoleMole.Config.NewActivityCond[] cond
}
nozig excel class MoleMole.Config.NewActivityCond {
	MoleMole.Config.NewActivityCondType type
	vint[] param
}
excel class MoleMole.Config.NewActivitySaleExcelConfig {
	vuint id
	MoleMole.Config.NewActivitySaleType saleType
	string[] saleParam
	vuint bufftipsTextMapHash
}
excel class MoleMole.Config.NewActivityScoreLimitExcelConfig {
	vuint id
	vuint activityID
	vuint limitValue
}
excel class MoleMole.Config.NewActivityScoreRewardExcelConfig {
	vuint id
	vuint activityId
	vuint rewardID
	vuint score
	vuint activityScoreTipsTextMapHash
	vuint activityScoreExtraTipsTextMapHash
}
excel class MoleMole.Config.NewActivityTimeGroupExcelConfig {
	vuint id
	vuint[] groupIdList
	vuint[] duration
}
excel class MoleMole.Config.NewActivityScoreShowExcelConfig {
	vuint id
	vuint descTextMapHash
	vuint score
}
excel class MoleMole.Config.NewActivityOverlapExcelConfig {
	MoleMole.Config.NewActivityType activityType
}
excel class MoleMole.Config.NpcExcelConfig : MoleMole.Config.EntityExcelConfig {
	string jsonName
	vuint jsonPathHash
	string alias
	string scriptDataPath
	string luaDataPath
	vuint luaDataIndex
	bool hasCombat
	bool hasMove
	bool hasAudio
	bool isDaily
	string dyePart
	MoleMole.Config.BillboardType billboardType
	string billboardIcon
	bool invisiable
	bool disableShowName
	string templateEmotionPath
	vuint animatorConfigPathHash
	MoleMole.Config.NPCBodyType bodyType
	MoleMole.Config.NPCSpecialType specialType
	vuint CIDIBNHBLDP
	vuint firstMetId
	vuint[] ALMNHHFHDDI
	vuint uniqueBodyId
	bool isActivityDailyNpc
	bool useDynBone
	bool skipInitClosetToGround
	bool isRelease
	vuint LAOCAEONEFO
	MoleMole.Config.ElementType elementType
}
excel class MoleMole.Config.NpcFirstMetExcelConfig {
	vuint id
	vuint[] subQuestIdList
	vuint avatarID
	vuint avatarDescriptionTextMapHash
}
excel class MoleMole.Config.OfferingLevelUpExcelConfig {
	vuint offeringId
	vuint level
	bool isMaxLevel
	MoleMole.Config.IdCountConfig[] consumeItemConfigVec
	vuint rewardId
	MoleMole.Config.OfferingActionContent[] actionVec
	vuint cutSceneId
	bool isAutoTakeReward
}
nozig excel class MoleMole.Config.OfferingActionContent {
	MoleMole.Config.OfferingActionType actionType
	string param
}
excel class MoleMole.Config.OraionokamiDataExcelConfig {
	vuint configId
	vuint gadgetChainId
	vuint gadgetChainLevel
	vuint serverBuffId
	vuint[] descIdList
	vuint descTitleTextMapHash
	vuint descContentTextMapHash
	vuint descSkillTextMapHash
	vuint groupId
	vuint typeLevel
	string iconPath
}
excel class MoleMole.Config.OraionokamiDescExcelConfig {
	vuint descId
	vuint descContentTextMapHash
}
excel class MoleMole.Config.MichiaeOfferingDataExcelConfig {
	vuint configId
	vuint level
	vuint levelNewEffectDescTextMapHash
	string[] levelNewEffectDescArgs
	vuint levelAccEffectDescTextMapHash
	string[] levelAccEffectDescArgs
}
excel class MoleMole.Config.OfferingVersionExcelConfig {
	vuint id
	vuint offeringId
	vuint levelLimit
}
excel class MoleMole.Config.OfferingLumenStoneExcelConfig {
	vuint configId
	vuint level
	vuint descSkillTextMapHash
	vuint descDetailTextMapHash
	string iconPath
}
excel class MoleMole.Config.OpActivityExcelConfig {
	vuint opActivityId
	MoleMole.Config.OpActivityBonusType bonusType
	vuint bonusValue
	vuint[] bonusList
	vuint icon
	string tabText
	string[] textMapIdList
}
excel class MoleMole.Config.PersonalLineExcelConfig {
	vuint id
	vuint titleTextMapHash
	vuint chapterId
	vuint startQuestId
	vuint avatarId
	vuint[] preQuestId
	string startTime
	vuint descTextMapHash
	vuint sortOrder
}
excel class MoleMole.Config.PersonalLineActivityExcelConfig {
	vuint id
	vuint chapterId
	vuint descTextMapHash
	string perfabPath
	MoleMole.Config.PersonalLineActivityFeature feature
}
excel class MoleMole.Config.PhotographPoseExcelConfig {
	vuint character_id
	vuint[] pose_id
}
excel class MoleMole.Config.PhotographPosenameExcelConfig : MoleMole.Config.FetterConfig {
	string poseFile
	vuint animatorstate_id
	string poseIcon
	vuint poseNameTextMapHash
	vuint unlockDescTextMapHash
}
excel class MoleMole.Config.PhotographExpressionExcelConfig : MoleMole.Config.FetterConfig {
	string emotionName
	string phonemeName
	string icon
	vuint emotionDescriptionTextMapHash
	vuint unlockDescTextMapHash
}
excel class MoleMole.Config.PlayerLevelLockExcelConfig {
	vuint worldLevel
	vuint unlockMainQuestId
	vuint unlockPlayerLevel
	vuint playerLevelUpperLimit
	vuint unlockDescTextMapHash
}
excel class MoleMole.Config.QTEExcelConfig {
	vuint id
	vuint startStepId
	MoleMole.Config.QTEType qteType
	MoleMole.Config.QTEExec[] startExec
	MoleMole.Config.QTEExec[] successExec
	MoleMole.Config.QTEExec[] failExec
}
nozig excel class MoleMole.Config.QTEExec {
	MoleMole.Config.QTEActionType type
	vint[] param
}
excel class MoleMole.Config.QTEStepExcelConfig {
	vuint id
	string configPath
	vuint nextStep
}
excel class MoleMole.Config.QuestAcceptionMarkExcelConfig {
	vuint configId
	vuint subQuestId
	vuint npcId
	bool isDailyNpc
	vuint sceneId
	float[] fallbackPosition
	bool blockMP
	vuint descTextMapHash
	vuint acceptableTimeTipsTextMapHash
}
excel class MoleMole.Config.ChapterExcelConfig {
	vuint id
	vuint beginQuestId
	vuint endQuestId
	vuint needPlayerLevel
	vuint activityId
	string needBeginTimeStr
	vuint chapterNumTextMapHash
	vuint chapterTitleTextMapHash
	string chapterIcon
	vuint chapterImageHash
	vuint chapterImageTitleTextMapHash
	vuint inActivityNeedPlayerLevel
	string chapterSerialNumberIcon
}
excel class MoleMole.Config.QuestExcelConfig {
	vuint subId
	vuint mainId
	vint order
	vuint subIdSet
	bool isMpBlock
	vuint descTextMapHash
	vuint stepDescTextMapHash
	vuint guideTipsTextMapHash
	MoleMole.Config.QuestShowType showType
	MoleMole.Config.BanGroupType banType
	__HACK_ _HACK__10
	__HACK_ _HACK__11
	__HACK_ _HACK__12
	__HACK_ _HACK__13
	__HACK_ _HACK__14
	__HACK_ _HACK__15
	MoleMole.Config.QuestGuide guide
	MoleMole.Config.ShowQuestGuideType showGuide
	MoleMole.Config.QuestGuideHintEx guideHint
	__HACK_ _HACK__19
	__HACK_ _HACK__20
	MoleMole.Config.QuestShowType failParentShow
}
excel class MoleMole.Config.QuestCond {
	MoleMole.Config.QuestCondType type
	vint[] param
}
excel class MoleMole.Config.QuestContent {
	MoleMole.Config.QuestContentType type
	vint[] param
	string param_str
	vuint count
}
nozig excel class MoleMole.Config.QuestExec {
	MoleMole.Config.QuestExecType type
	string[] param
}
excel class MoleMole.Config.QuestGuideHintEx {
	MoleMole.Config.QuestGuideHintType type
	string param1
}
excel class MoleMole.Config.RqTalkExcelConfig {
	vuint id
	MoleMole.Config.TalkBeginWay beginWay
	MoleMole.Config.PlayMode activeMode
	MoleMole.Config.LogicType beginCondComb
	MoleMole.Config.TalkCond[] beginCond
	vuint priority
	vuint[] nextTalks
	vuint[] nextRandomTalks
	vint showRandomTalkCount
	vuint initDialog
	vuint[] npcId
	string performCfg
	MoleMole.Config.TalkHeroType heroTalk
	vuint questId
	bool dontBlockDaily
}
excel class MoleMole.Config.QuestResCollectionExcelConfig {
	vuint id
	__HACK_ _HACK__1
	bool isForbidDelete
}
excel class MoleMole.Config.TalkSelectTimeOutExcelConfig {
	vuint id
	float timeLimit
	vuint nextTalkID
}
excel class MoleMole.Config.DialogSelectTimeOutExcelConfig {
	vuint id
	float timeLimit
	vuint nextDialogID
}
excel class MoleMole.Config.RandomQuestEntranceExcelConfig {
	vuint id
	vuint weight
	vuint templateId
	MoleMole.Config.LogicType filterLogicType
	MoleMole.Config.RandomQuestFilterConfig[] filterList
}
nozig excel class MoleMole.Config.RandomQuestFilterConfig {
	MoleMole.Config.RandomQuestFilterType filterType
	string filterFactor
	vuint[] filterParamList
}
excel class MoleMole.Config.RandomQuestTemplateExcelConfig {
	vuint mainId
	MoleMole.Config.RandomQuestElem[] elemList
}
nozig excel class MoleMole.Config.RandomQuestElem {
	string[] name
	vuint poolId
}
excel class MoleMole.Config.RandomQuestElemPoolExcelConfig {
	vuint id
	vuint poolId
	vuint weight
	MoleMole.Config.QuestElemSample[] sampleList
}
nozig excel class MoleMole.Config.QuestElemSample {
	string type
	string content
}
excel class MoleMole.Config.RandomMainQuestExcelConfig {
	vuint id
	MoleMole.Config.QuestType type
	vuint titleTextMapHash
	vuint descTextMapHash
	string luaPath
	vuint recommendLevel
	bool repeatable
	MoleMole.Config.PlayMode activeMode
	vuint[] suggestTrackMainQuestList
	bool suggestTrackOutOfOrder
	MoleMole.Config.QuestShowType showType
	vuint chapterId
	string rewardIdList
}
excel class MoleMole.Config.RandomQuestExcelConfig {
	vuint subId
	vuint mainId
	vint order
	vuint subIdSet
	vuint titleTextMapHash
	vuint descTextMapHash
	MoleMole.Config.QuestShowType showType
	MoleMole.Config.LogicType acceptCondComb
	MoleMole.Config.RandomQuestCond[] acceptCond
	MoleMole.Config.LogicType finishCondComb
	MoleMole.Config.RandomQuestContent[] finishCond
	MoleMole.Config.LogicType failCondComb
	MoleMole.Config.RandomQuestContent[] failCond
	MoleMole.Config.QuestGuide guide
	MoleMole.Config.ShowQuestGuideType showGuide
	MoleMole.Config.QuestGuideHintEx guideHint
	bool finishParent
	bool failParent
	MoleMole.Config.QuestShowType failParentShow
	bool isRewind
	MoleMole.Config.IdCountConfig[] awardItems
	MoleMole.Config.QuestExec[] beginExec
	MoleMole.Config.QuestExec[] finishExec
	MoleMole.Config.QuestExec[] failExec
	vuint exclusiveNpcPriority
	MoleMole.Config.BanGroupType banType
}
nozig excel class MoleMole.Config.RandomQuestCond {
	MoleMole.Config.QuestCondType type
	string[] param
}
nozig excel class MoleMole.Config.RandomQuestContent {
	MoleMole.Config.QuestContentType type
	string[] param
	string param_str
	string count
}
excel class MoleMole.Config.QuestDialogDecoratorExcelConfig {
	vuint id
	string decoratorContent
}
excel class MoleMole.Config.RandTaskExcelConfig {
	vuint ID
	vuint titleTextMapHash
	MoleMole.Config.RandTaskContentType contentType
	vuint reward
	bool needUI
	vuint targetTextMapHash
	vuint enterDistance
	vuint exitDistance
}
excel class MoleMole.Config.RefreshPolicyExcelConfig {
	vuint id
	MoleMole.Config.RefreshType type
	string time
}
excel class MoleMole.Config.RefreshIndexExcelConfig {
	vuint priority
	MoleMole.Config.RefreshIndexType type
	MoleMole.Config.MonsterRarityType rarity
	string name
	__HACK_ _HACK__4
	vuint refreshId
}
excel class MoleMole.Config.ReliquaryExcelConfig : MoleMole.Config.ItemConfig {
	MoleMole.Config.EquipType equipType
	string showPic
	vuint rankLevel
	vuint mainPropDepotId
	vuint appendPropDepotId
	vuint appendPropNum
	vuint setId
	vuint[] addPropLevels
	vuint baseConvExp
	vuint maxLevel
	vuint storyId
	MoleMole.Config.MaterialDestroyType destroyRule
	vuint[] destroyReturnMaterial
	vuint[] destroyReturnMaterialCount
	vuint initialLockState
}
excel class MoleMole.Config.ReliquaryMainPropExcelConfig {
	vuint id
	vuint prop_depot_id
	MoleMole.Config.FightPropType propType
	MoleMole.Config.ReliquaryMainAffixName affixName
}
excel class MoleMole.Config.ReliquaryAffixExcelConfig {
	vuint id
	vuint depot_id
	vuint group_id
	MoleMole.Config.FightPropType propType
	float propValue
}
excel class MoleMole.Config.ReliquaryLevelExcelConfig {
	vuint rank
	vuint level
	vuint exp
	MoleMole.Config.PropValConfig[] addProps
}
excel class MoleMole.Config.ReliquarySetExcelConfig {
	vuint setId
	string setIcon
	vuint[] setNeedNum
	vuint EquipAffixId
	vuint DisableFilter
	vuint[] containsList
	vuint bagSortValue
	vuint[] dungeonGroup
	vuint[] textList
}
excel class MoleMole.Config.ReliquaryPowerupExcelConfig {
	vuint powerupMultiple
}
excel class MoleMole.Config.ReminderIndexExcelConfig {
	vuint id
	vuint[] reminderID
	MoleMole.Config.ReminderShowType showType
}
excel class MoleMole.Config.TemplateReminderExcelConfig {
	vuint id
	MoleMole.Config.TemplateReminderStyleType style
	string icon
	vuint titleTextMapHash
	vuint contentTextMapHash
	MoleMole.Config.NewActivityType activityType
	float showTime
	string param
	bool NMCDMEBDPCN
}
excel class MoleMole.Config.UidOpNotifyExcelConfig {
	vuint id
	vuint contentTextMapHash
}
excel class MoleMole.Config.ServerMessageExcelConfig {
	vuint id
	vuint contentTextMapHash
	MoleMole.Config.ServerMessageShowType showType
}
excel class MoleMole.Config.ReputationQuestExcelConfig {
	vuint ParentQuestId
	vuint cityId
	vuint rewardId
	string iconName
	vuint titleTextMapHash
	vuint order
}
excel class MoleMole.Config.ReputationRequestExcelConfig {
	vuint RequestId
	vuint QuestId
	vuint GroupId
	vuint weight
	vuint npcId
	vuint rewardId
	vuint nameTextMapHash
	vuint descTextMapHash
	string iconName
}
excel class MoleMole.Config.ReputationExploreExcelConfig {
	vuint exploreId
	vuint cityId
	vuint exploreProgress
	vuint rewardId
	vuint conditionTextTextMapHash
}
excel class MoleMole.Config.ReputationCityExcelConfig {
	vuint cityId
	vuint[] exploreAreaVec
	vuint virtualItemId
	MoleMole.Config.OpenStateType openState
	string bgIconPath
	string bgEffectPath
	vuint explainTitleTextMapHash
	vuint descTextMapHash
	vuint rewardItemId
	vuint rewardItemDescTextMapHash
	string rewardItemIcon
	string rewardBgIcon
	string cityIcon
}
excel class MoleMole.Config.ReputationFunctionExcelConfig {
	vuint functionId
	vuint nameTextMapHash
	vuint descTextMapHash
	vuint shopDescTextMapHash
}
excel class MoleMole.Config.ReunionScheduleExcelConfig {
	vuint id
	vuint activateLevel
	vuint firstGiftRewardId
	vuint dailySignInId
	vuint reunionMissionId
	vuint reunionPrivilegeId
}
excel class MoleMole.Config.ReunionSignInExcelConfig {
	vuint id
	vuint dayIndex
	vuint[] rewardId
}
excel class MoleMole.Config.ReunionMissionExcelConfig {
	vuint id
	vuint watcherGroupId
	vuint targetScore
	vuint finishRewardId
	vuint[] targetScoreList
	vuint[] finishRewardIdList
	vuint[] showRewardIdList
	vuint JMAFEPNCHMN
}
excel class MoleMole.Config.ReunionWatcherExcelConfig : MoleMole.Config.WatcherConfig {
	vuint watcherGroupId
	vuint descTextMapHash
	string activateLevelRange
	vuint rewardId
	vuint score
	vuint rewardUnlockDay
}
excel class MoleMole.Config.ReunionPrivilegeExcelConfig {
	vuint id
	vuint dailyNum
	vuint totalNum
	MoleMole.Config.ReunionPrivilegeConfig[] privilegeType
}
nozig excel class MoleMole.Config.ReunionPrivilegeConfig {
	MoleMole.Config.ReunionPrivilegeType type
	string sub_type
}
excel class MoleMole.Config.ReunionCommercialExcelConfig {
	vuint id
	string domesticLink
	string overseaLink
}
excel class MoleMole.Config.GeneralRewardExcelConfig {
	vuint id
	bool useCondenseResin
	MoleMole.Config.RewardSourceSystemType rewardSourceSystem
	vuint rewardSourceSystemPara
	vuint titleTextMapHash
	vuint staminaEnoughTextMapHash
	vuint staminaLessTextMapHash
	vuint condenseResinStaminaEnoughTextMapHash
	vuint condenseResinStaminaLessTextMapHash
	vuint usingActivityCoinTextMapHash
	vuint usingActivityCoinButtonTextMapHash
	vuint confirmTextMapHash
	vuint resinMonthlyTextMapHash
	vuint insufficientTextMapHash
	vuint insufficientUseitemTextMapHash
	vuint condenseResinTextMapHash
}
excel class MoleMole.Config.RoutineTypeExcelConfig {
	MoleMole.Config.GeneralRoutineType routineType
	vuint refreshNum
	vuint rewardLimitNum
	vuint refreshId
	vuint delayUnloadTime
	vuint nameTextMapHash
	vuint descTextMapHash
	string icon
}
excel class MoleMole.Config.SceneExcelConfig {
	vuint id
	MoleMole.Config.SceneType type
	MoleMole.Config.SceneSubType subtype
	bool ignoreNavMesh
	bool useToTheMoon
	MoleMole.Config.NavmeshModeType navmeshMode
	string scriptData
	string overrideDefaultProfile
	string levelEntityConfig
	vuint entityAppearSorted
	vuint[] specifiedAvatarList
	vuint maxSpecifiedAvatarNum
	float sceneFixTime
	string comment
	vuint safePoint
	MoleMole.Config.SceneMpType mpType
	bool isAllowMapMarkPoint
	bool isDeleteMapMarkPoint
	vuint[] dungeonEntryPoint
	__HACK_ _HACK__19
	__HACK_ _HACK__20
	__HACK_ _HACK__21
	vuint imageSceneId
}
excel class MoleMole.Config.TriggerExcelConfig {
	vuint id
	vuint sceneId
	vuint groupId
	string triggerName
}
excel class MoleMole.Config.RoomExcelConfig {
	vuint id
	__HACK_ _HACK__1
	string prefabPath
	string navMeshPath
}
excel class MoleMole.Config.WorldExcelConfig {
	vuint id
	MoleMole.Config.WorldType type
	vuint mainSceneId
	vuint[] subSceneIdVec
}
excel class MoleMole.Config.WorldLevelExcelConfig {
	vuint level
	vuint monsterLevel
}
excel class MoleMole.Config.ShareCDExcelConfig {
	vuint id
	MoleMole.Config.CoolDownInfo[] coolDownList
	bool isUseRealTime
	bool isUseExternalSystem
}
nozig excel class MoleMole.Config.CoolDownInfo {
	float coolDownTime
	vuint token
}
excel class MoleMole.Config.ShopExcelConfig {
	vuint shopId
	MoleMole.Config.ShopType shopType
	MoleMole.Config.ShopRefreshType refreshType
	vuint refreshParam
	MoleMole.Config.OpenStateType openStateType
	vuint cityId
	vuint cityDiscountLevel
	vuint scoinDiscountRate
	vuint vipFuncID
}
excel class MoleMole.Config.ShopGoodsExcelConfig {
	vuint goodsId
	vuint subTagNameTextMapHash
	vuint subTabId
	vuint shopType
	vuint itemId
	vuint rotateId
	vuint showId
	vuint itemCount
	vuint costScoin
	vuint costHcoin
	vuint costMcoin
	float discountRate
	vuint originalPrice
	MoleMole.Config.IdCountConfig[] costItems
	vuint buyLimit
	MoleMole.Config.ShopRefreshType refreshType
	vuint refreshParam
	vuint displayDaysBeforeSell
	string beginTime
	string endTime
	bool isBuyOnce
	MoleMole.Config.ShopPrecondition precondition
	vuint preconditionParam
	string[] preconditionParamList
	bool preconditionHidden
	vuint minShowLevel
	vuint minPlayerLevel
	vuint maxPlayerLevel
	vuint sortLevel
	vuint secondarySheetId
	vuint chooseOneGroupId
	vuint[] platformTypeList
}
excel class MoleMole.Config.ShopRotateExcelConfig {
	vuint id
	vuint rotateId
	vuint itemId
	vuint rotateOrder
}
excel class MoleMole.Config.ShopMaterialOrderExcelConfig {
	vuint Id
	vuint order
	MoleMole.Config.ShopType shopType
}
excel class MoleMole.Config.ShopSpecialKeysDataExcelConfig {
	vuint goodsId
	vuint singleLimit
}
excel class MoleMole.Config.ShopmallEntranceExcelConfig {
	vuint ID
	vuint nameTextMapHash
	vuint[] subTabList
	MoleMole.Config.ShopType shopType
	string icon
	MoleMole.Config.ShopmallEntranceType showType
	vuint order
}
excel class MoleMole.Config.ShopmallSubTabExcelConfig {
	vuint ID
	vuint subTagNameTextMapHash
}
excel class MoleMole.Config.SignInCondExcelConfig {
	vuint configId
	MoleMole.Config.LogicType condComb
	MoleMole.Config.SignInCondConfig[] condList
	vuint totalDayCount
}
nozig excel class MoleMole.Config.SignInCondConfig {
	MoleMole.Config.SignInCondType type
	vint[] paramList
}
excel class MoleMole.Config.SignInPeriodExcelConfig {
	vuint configId
	string perfabPath
}
excel class MoleMole.Config.BonusActivityExcelConfig : MoleMole.Config.WatcherConfig {
	vuint bonusActivityId
	MoleMole.Config.LogicType condComb
	MoleMole.Config.SignInCondConfig[] condList
	vuint watcherId
	MoleMole.Config.IdCountConfig[] rewardItemList
}
excel class MoleMole.Config.BonusActivityClientExcelConfig {
	vuint id
	MoleMole.Config.BonusActivityType bonusActivityType
	vuint avatarConfigId
	vuint[] voiceIndexList
	vuint questId
	vuint openPlayerLevel
	string perfabPath
	vuint unlockTipsTextMapHash
}
excel class MoleMole.Config.ElementStateExcelConfig {
	MoleMole.Config.ElementType elementType
	string elementIcon
	vuint rank
}
excel class MoleMole.Config.StateExcelConfig {
	string stateName
	MoleMole.Config.StateType stateType
	vuint rank
}
excel class MoleMole.Config.StrengthenBasePointExcelConfig {
	vuint dungeonId
	MoleMole.Config.StrengthenDungeonType dungeonType
}
excel class MoleMole.Config.TeamResonanceExcelConfig : MoleMole.Config.BaseTalentConfig {
	vuint teamResonanceId
	vuint teamResonanceGroupId
	vuint level
	vuint fireAvatarCount
	vuint waterAvatarCount
	vuint grassAvatarCount
	vuint electricAvatarCount
	vuint iceAvatarCount
	vuint windAvatarCount
	vuint rockAvatarCount
	MoleMole.Config.TeamResonanceCondType cond
	vuint minTotalPromoteLevel
	vuint nameTextMapHash
	vuint descTextMapHash
}
excel class MoleMole.Config.TowerScheduleExcelConfig {
	vuint scheduleId
	vuint[] entranceFloorId
	MoleMole.Config.TowerSchedule[] schedules
	string closeTime
	vuint rewardGroup
	MoleMole.Config.TowerStarReward[] scheduleRewards
	vuint commemorativeReward
	vuint monthlyLevelConfigId
	vuint descTextMapHash
	vuint buffnameTextMapHash
	string icon
}
nozig excel class MoleMole.Config.TowerSchedule {
	vuint[] floorList
	string openTime
}
nozig excel class MoleMole.Config.TowerStarReward {
	vuint minStarCount
	vuint rewardId
}
excel class MoleMole.Config.TowerFloorExcelConfig {
	vuint floorId
	vuint floorIndex
	vuint levelGroupId
	vuint overrideMonsterLevel
	vuint teamNum
	vuint rewardIdFiveStars
	vuint rewardIdTenStars
	vuint rewardIdFifteenStars
	vuint rewardIdThreeStars
	vuint rewardIdSixStars
	vuint rewardIdNineStars
	vuint unlockStarCount
	vuint floorLevelConfigId
	string bgImage
}
excel class MoleMole.Config.TowerLevelExcelConfig {
	vuint levelId
	vuint levelGroupId
	vuint levelIndex
	vuint dungeonId
	MoleMole.Config.TowerCondition[] conds
	string[] towerBuffConfigStrList
	vuint dailyRewardId
	vuint firstPassRewardId
	vuint monsterLevel
	vuint[] firstMonsterList
	vuint[] secondMonsterList
}
nozig excel class MoleMole.Config.TowerCondition {
	MoleMole.Config.TowerCondType towerCondType
	vuint[] argumentListUpper
	vuint[] argumentList
}
excel class MoleMole.Config.TowerBuffExcelConfig {
	vuint towerBuffId
	MoleMole.Config.TowerBuffLastingType lastingType
	vuint descTextMapHash
	string buffIcon
	vuint buffId
}
excel class MoleMole.Config.TowerSkipFloorExcelConfig {
	vuint prev_level_index
	vuint cur_level_index
}
excel class MoleMole.Config.TowerRewardExcelConfig {
	vuint rewardGroup
	vuint floor
	vuint rewardId3Stars
	vuint rewardId6Stars
	vuint rewardId9Stars
	vuint[] rewardIdRoom
}
excel class MoleMole.Config.MechanicBuildingExcelConfig {
	vuint id
	vuint gadget_id
	vuint specialEffectLevel1
	vuint specialEffectLevel2
	vuint specialEffectID1
	vuint specialEffectID2
	vuint specialEffectDesc1TextMapHash
	vuint specialEffectDesc2TextMapHash
	vuint maxLevel
	MoleMole.Config.SGVConfig[] openConds
	vuint buildLimit
	bool isEnableRotate
	vuint[] defaultDungeonList
	vuint elementType
}
nozig excel class MoleMole.Config.SGVConfig {
	string key
	float value
}
excel class MoleMole.Config.MechanicusExcelConfig {
	vuint mechanicusID
	vuint[] sequenceList
	vuint ticketItemID
	vuint ticketCostCount
	vuint matchPlayerLimit
	vuint[] openGearList
	vuint[] openMapList
	vuint teachDifficultLevel
	vuint punishTime
}
excel class MoleMole.Config.MechanicusSequenceExcelConfig {
	vuint sequenceID
	vuint mechanicusID
	vuint openLevel
	vuint[] openGearList
	vuint gearLevelLimite
	vuint gearMoneyLimite
	vuint[] openMapList
	vuint activityID
	vuint condID
	vuint rewardPreviewID
}
excel class MoleMole.Config.MechanicusMapExcelConfig {
	vuint mechanicusMapID
	vuint mapNameTextMapHash
	vuint descTextMapHash
	vuint unlockTipsTextMapHash
	string mapIconPath
	vuint buildGearLimit
	vuint dungeonID
}
excel class MoleMole.Config.MechanicusGearLevelUpExcelConfig {
	vuint ID
	vuint gearID
	vuint gearLevel
	vuint gearLevelUpMoney
	vuint gearNameTextMapHash
	vuint gearShortNameTextMapHash
	vuint descTextMapHash
	string gearIconPath
	vuint attack
	vuint attackSpeed
	vuint attackRange
	vuint build_cost
	vuint demolition_refund
	MoleMole.Config.SGVConfig[] globalValueParam
	vuint[] effectList
}
excel class MoleMole.Config.MechanicusWatcherExcelConfig : MoleMole.Config.WatcherConfig {
	vuint reward_tokens
	vuint descTextMapHash
}
excel class MoleMole.Config.MechanicusDifficultyExcelConfig {
	vuint level
	vuint descTextMapHash
	vuint[] dungeonList
	vuint coinRate
	vuint buildGearLimit
}
excel class MoleMole.Config.MechanicusCardExcelConfig {
	vuint ID
	vuint costPoints
	MoleMole.Config.MechanicusCardType cardType
	vuint effectID
	vuint lastRound
	vuint descTextMapHash
	string[] descParamList
	vuint gear_id
}
excel class MoleMole.Config.MechanicusCardEffectExcelConfig {
	vuint ID
	MoleMole.Config.MechanicusCardTargetType targetType
	vuint[] targetParamList
	MoleMole.Config.MechanicusCardEffectType effectType
	string effectStrParam
	vint effectParam1
	vint effectParam2
	vint effectParam3
}
excel class MoleMole.Config.MechanicusCardCurseExcelConfig {
	vuint ID
	vuint effectID
	vuint lastRound
	vuint descTextMapHash
	string[] descParamList
}
excel class MoleMole.Config.MechanicusMapPointExcelConfig {
	vuint ID
	float coordX
	float coordY
}
excel class MoleMole.Config.TreeDropExcelConfig {
	MoleMole.Config.TreeType treeType
	vuint dropId
}
excel class MoleMole.Config.TreeTypeExcelConfig {
	vuint ID
	string treePattern
	MoleMole.Config.TreeType treeType
}
excel class MoleMole.Config.TrialAvatarActivityDataExcelConfig : MoleMole.Config.WatcherConfig {
	vuint trialAvatarIndexId
	vuint trialAvatarId
	vuint dungeonId
	string battleAvatarsList
	vuint firstPassReward
	vuint titleTextMapHash
	vuint briefInfoTextMapHash
}
excel class MoleMole.Config.TrialAvatarExcelConfig {
	vuint trialAvatarId
	vuint[] trialAvatarParamList
	vuint trialSkillDepotId
	bool isDynamicLevel
	vuint specified_costume_id
	bool hideIcon
}
excel class MoleMole.Config.TutorialDetailExcelConfig {
	vuint id
	MoleMole.Config.TutorialDetailType type
	string[] imageNameList
	vuint descriptTextMapHash
}
excel class MoleMole.Config.UIInteractExcelConfig {
	vuint Id
	MoleMole.Config.UIInteractType type
}
excel class MoleMole.Config.VehicleMarkExcelConfig {
	vuint id
	string markIconTypeName
}
excel class MoleMole.Config.VehicleSkillExcelConfig {
	vuint ID
	vuint skillNameTextMapHash
	vuint skillDescTextMapHash
	string abilityName
	string skillIcon
	float skillCD
	vint maxChargeCount
	vint triggerID
	string lockShape
	float[] lockWeightParams
	string globalValueKey
	vint energyOnceCost
	vint energyMaxCost
}
excel class MoleMole.Config.VehicleSkillDepotExcelConfig {
	vuint ID
	vuint[] skillIDList
}
excel class MoleMole.Config.WeaponExcelConfig : MoleMole.Config.ItemConfig {
	MoleMole.Config.WeaponType weaponType
	vuint rankLevel
	MoleMole.Config.WeaponMaterialType materialType
	MoleMole.Config.ElementType elemType
	bool isGold
	vuint weaponBaseExp
	vuint[] skillAffix
	vuint awakenMaterial
	MoleMole.Config.WeaponProperty[] weaponProp
	string awakenTexture
	string awakenLightMapTexture
	string awakenIcon
	bool unRotate
	vuint weaponPromoteId
	vuint storyId
	vuint[] awakenCosts
	vuint gachaCardNameHash
	vuint enhanceRule
	MoleMole.Config.MaterialDestroyType destroyRule
	vuint[] destroyReturnMaterial
	vuint[] destroyReturnMaterialCount
	vuint initialLockState
}
nozig excel class MoleMole.Config.WeaponProperty {
	MoleMole.Config.FightPropType propType
	float initValue
	MoleMole.Config.GrowCurveType type
}
excel class MoleMole.Config.WeaponLevelExcelConfig {
	vuint level
	vuint[] requiredExps
}
excel class MoleMole.Config.WeaponPromoteExcelConfig {
	vuint weaponPromoteId
	vuint promoteLevel
	MoleMole.Config.IdCountConfig[] costItems
	vuint coinCost
	MoleMole.Config.PropValConfig[] addProps
	vuint unlockMaxLevel
	vuint requiredPlayerLevel
}
excel class MoleMole.Config.WeatherExcelConfig {
	vuint areaID
	vuint weatherAreaId
	string maxHeightStr
	__HACK_ _HACK__3
	vuint gadgetID
	bool isDefaultValid
	vuint priority
	string profileName
	MoleMole.Config.ClimateType defaultClimate
	bool isUseDefault
	vuint sceneID
}
excel class MoleMole.Config.WeatherTemplateExcelConfig {
	string templateName
	MoleMole.Config.ClimateType weatherType
	float sunnyProb
	float cloudyProb
	float rainProb
	float thunderstormProb
	float snowProb
	float mistProb
	float desertProb
}
excel class MoleMole.Config.RoomWeatherExcelConfig {
	vuint id
	vuint roomID
	vuint areaID
	string profileName
}
excel class MoleMole.Config.WidgetCameraScanExcelConfig {
	vuint id
	vuint cameraID
	vuint configID
	vuint[] scannableState
	bool isHint
	MoleMole.Config.WidgetCameraActionType action
}
excel class MoleMole.Config.WidgetExcelConfig {
	vuint materialID
	bool showRedpoint
	vuint[] customizeDesc
	vuint pushTipsId
}
excel class MoleMole.Config.WidgetGeneralExcelConfig {
	vuint materialID
	bool canUseInOtherWorld
	bool canUseInRoom
	vuint[] forbiddenSceneIdList
	bool canUseWhenCurrentAvatarDead
	bool canUseInLimitRegion
	bool canUseWhenFight
	bool canUseInUnNormalMoveState
	bool JGMMOFCOPFD
	bool canUseInAvatarFocus
	bool canUseInDungeon
	bool NHOOOGFFBLN
	bool canUseInTower
	bool canUseInHomeworld
	MoleMole.Config.VEHICLE_LIMIT_TYPE vehicleLimit
	vuint[] forbiddenDungeonTypeList
	vuint[] forbiddenDungeonPlayTypeList
	vuint[] DDDDPFDBBGC
}
excel class MoleMole.Config.WidgetActiveExcelConfig {
	vuint materialID
	bool isGuestCanActivate
	vuint[] activeGallery
	string activeRegion
	vuint[] activeScene
	vuint[] activeCity
}
excel class MoleMole.Config.ActivityDeliveryWatcherDataConfig : MoleMole.Config.WatcherConfig {
}
excel class MoleMole.Config.ActivityHideAndSeekBasicConfig {
	vuint id
	vuint activityID
	vuint titleTextMapHash
	vuint descTextMapHash
	vuint pushTipsID
	vuint rewardPreviewID
	vuint oneTimeRewardPreviewID
	vuint unlockQuestID
	vuint matchID
	vuint draftID
	vuint[] scoreUnlockList
	vuint[] watcherList
	vuint[] skillList
	vuint[] mapList
	vuint[] chanllengeList
	vuint scoreItemID
}
excel class MoleMole.Config.ActivitySalesmanRewardMatchConfig {
	vuint rewardID
	MoleMole.Config.RewardResourceType ReoureceType
	vuint boxNameTextMapHash
}
excel class MoleMole.Config.ActivitySteepleChaseConfig {
	vuint configId
	vuint dungeonId
	vuint levelTitleTextMapHash
	vuint levelDescTextMapHash
	vuint pushTipsId
	vuint scheduleId
}
excel class MoleMole.Config.ActivitySumoOverallConfig {
	vuint id
	vuint activityId
	vuint scheduleId
	vuint prerequisiteQuestId
	vuint leadQuestId
	vuint rewardPreviewId
	vuint dungeonEntryId
	vuint globalWatcherId
	vuint pushTipsId
	vuint teamNum
	vuint maxTeamMemberNum
	vuint teamSelectableSkillNum
	vuint switchTeamCD
}
excel class MoleMole.Config.BartenderFormulaTypeConfig {
	vuint id
	vuint nameTextMapHash
	string icon
}
excel class MoleMole.Config.BartenderMaterialUnlockConfig {
	vuint id
	vuint unlockDay
	vuint weight
	vuint recipePageOrder
}
excel class MoleMole.Config.BoredMonsterPoolConfig {
	vuint id
	vuint monster_id
	vuint level
	string dropTag
	vuint[] affixVec
	bool isElite
}
excel class MoleMole.Config.ChestLevelSetConfig {
	vuint zoneMinLevel
	vuint chestLevel
}
excel class MoleMole.Config.CityConfig {
	vuint cityId
	vuint sceneId
	vuint[] areaIdVec
	vuint cityNameTextMapHash
	vint mapPosX
	vint mapPosY
	float zoomForExploration
	vuint adventurePointId
	string ExpeditionMap
	string ExpeditionWaterMark
	MoleMole.Config.OpenStateType openState
	vuint cityGoddnessNameTextMapHash
	vuint cityGoddnessDescTextMapHash
}
excel class MoleMole.Config.CityLevelupConfig {
	vuint scene_id
	vuint city_id
	vuint level
	MoleMole.Config.WorldAreaLevelupConsumeItem consume_item
	vuint rewardID
	MoleMole.Config.WorldAreaLevelupAction[] action_vec
}
excel class MoleMole.Config.WorldAreaLevelupConsumeItem {
	vuint item_id
	vuint item_num
}
nozig excel class MoleMole.Config.WorldAreaLevelupAction {
	MoleMole.Config.WorldAreaLevelupActionType type
	vuint[] param1_vec
	vuint[] param2_vec
}
excel class MoleMole.Config.ClientSceneTagConfig {
	vuint id
	string sceneTagName
	vuint sceneId
	string sceneTagExpression
}
excel class MoleMole.Config.CustomGadgetSlotLevelTagConfig {
	vuint ID
	MoleMole.Config.CustomGadgetRootType customGadgetType
	MoleMole.Config.CustomGadgetSlotGroup[] slotMap
	vuint levelTagID
	vuint GadgetId
}
nozig excel class MoleMole.Config.CustomGadgetSlotGroup {
	string slotIdentifier
	vuint[] slotList
}
excel class MoleMole.Config.CustomLevelComponentConfig {
	vuint componentID
	vuint typeID
	vuint componentNameTextMapHash
	vuint tagDescTextMapHash
	vuint componentIconHash
	string brickName
	vuint deployGadgetID
	vuint serverGadgetID
	vuint configLevel
	MoleMole.Config.BrickRotateType rotateType
	vuint componentCost
	vuint maxDeployCount
	vuint handBookID
	bool isVisable
	MoleMole.Config.BrickType brickType
	bool canCopy
	vuint componentDescTextMapHash
	vuint componentSizeTextMapHash
	vuint componentDeployTextMapHash
}
excel class MoleMole.Config.CustomLevelComponentLimitConfig {
	vuint limitId
	vuint componentID
	vuint maxCount
}
excel class MoleMole.Config.CustomLevelComponentTypeConfig {
	vuint typeID
	vuint typeNameTextMapHash
}
excel class MoleMole.Config.CustomLevelDungeonConfig {
	vuint dungeonID
	vuint order
	string jsonPath
	string mapPrefabPath
	vuint mapScenePicHash
	vuint dataPicHash
	vuint roomNum
	vuint roomNameFormatTextMapHash
	string corridors
	vuint[] countBrickList
}
excel class MoleMole.Config.CustomLevelGroupConfig {
	vuint groupId
	vuint[] dungeonList
	vuint[] activityDungeonList
	vuint maxEditCount
	vuint storeMaxCount
	vuint coinChallengeId
	vuint coinExhibitionId
	vuint finishExhibitionId
	vuint costAlert
}
excel class MoleMole.Config.CustomLevelTagConfig {
	vuint configId
	vuint tagTitleTextMapHash
	vuint sortId
	bool isDefault
}
excel class MoleMole.Config.CustomLevelTagSortConfig {
	vuint configId
	string color
	string endColor
}
excel class MoleMole.Config.CustomLevelUIConfig {
	vuint configId
	vuint openDay
	vuint[] watcherIdList
	vuint[] levelInfo
}
excel class MoleMole.Config.DailyDungeonConfig {
	vuint id
	vuint[] monday
	vuint[] tuesday
	vuint[] wednesday
	vuint[] thursday
	vuint[] friday
	vuint[] saturday
	vuint[] sunday
}
excel class MoleMole.Config.DungeonChallengeConfig {
	vuint id
	vuint targetTextTemplateTextMapHash
	vuint subTargetTextTemplateTextMapHash
	vuint progressTextTemplateTextMapHash
	vuint subProgressTextTemplateTextMapHash
	string iconPath
	MoleMole.Config.ChallengeType challengeType
	bool isForwardTiming
	MoleMole.Config.ChallengeRecordType recordType
	bool noSuccessHint
	bool noFailHint
	bool noPauseHint
	MoleMole.Config.InterruptButtonType interruptButtonType
	bool isTransBackWhenInterrupt
	bool isSuccessWhenNotSettled
	bool isBlockTopTimer
	MoleMole.Config.SubChallengeFadeOutType subChallengeFadeOutRule
	float subChallengeFadeOutDelayTime
	MoleMole.Config.SubChallengeBannerType subChallengeBannerRule
	vuint activitySkillID
	string[] teamAbilityGroupList
	MoleMole.Config.SubChallengeAnimType subChallengeStartAnim
	MoleMole.Config.SubChallengeAnimType subChallengeSuccessAnim
	MoleMole.Config.SubChallengeAnimType subChallengeFailAnim
	MoleMole.Config.SubChallengeSortType subChallengeSortType
}
excel class MoleMole.Config.DungeonLevelEntityConfig {
	vuint clientId
	vuint id
	bool show
	string levelConfigName
	vuint descTextMapHash
	vuint switchTitleTextMapHash
}
excel class MoleMole.Config.DungeonRosterConfig {
	vuint id
	string openTimeStr
	vuint cycleTime
	MoleMole.Config.DungeonRosterCycleType cycleType
	MoleMole.Config.DungeonList[] rosterPool
}
nozig excel class MoleMole.Config.DungeonList {
	vuint[] dungeonList
}
excel class MoleMole.Config.DungeonSerialConfig {
	vuint id
	vuint MaxTakeNum
	vuint takeCost
}
excel class MoleMole.Config.EmbeddedTextMapConfig {
	string textMapId
	vuint textMapContentTextMapHash
}
excel class MoleMole.Config.GlobalWatcherConfig : MoleMole.Config.WatcherConfig {
	MoleMole.Config.WatcherPredicateConfig[] predicateConfigs
}
nozig excel class MoleMole.Config.WatcherPredicateConfig {
	MoleMole.Config.WatcherPredicateType predicateType
	vuint[] paramList
}
excel class MoleMole.Config.InvestigationConfig {
	vuint id
	vuint cityId
	vuint[] nextInvestigationIdList
	MoleMole.Config.OpenStateType unlockOpenStateType
	vuint unlockLevel
	vuint rewardId
	vuint titleTextMapHash
	MoleMole.Config.InvestigationType investigationType
}
excel class MoleMole.Config.InvestigationDungeonConfig {
	vuint entranceId
	vuint cityId
	vuint[] dungeonIdList
}
excel class MoleMole.Config.InvestigationMonsterConfig {
	vuint id
	vuint cityId
	vuint[] monsterIdList
	vuint[] groupIdList
	vuint unlockParentQuestId
	vuint preUnlockParentQuestId
	vuint[] unlockChapterIdList
	vuint[] unlockWqParentQuestIdList
	vuint wqAcceptHintTextMapHash
	vuint activeUnlockQuestActivityId
	vuint rewardPreviewId
	MoleMole.Config.InvestigationMonsterMapMarkCreateType mapMarkCreateType
	MoleMole.Config.InvestigationMonsterMapMarkCreateCondition mapMarkCreateCondition
	MoleMole.Config.MonsterCategory monsterCategory
	vuint nameTextMapHash
	string icon
	vuint descTextMapHash
	vuint lockDescTextMapHash
	vuint[] occupiedQuestIdList
}
excel class MoleMole.Config.InvestigationMonsterMapMarkCreateCondition {
	MoleMole.Config.InvestigationMonsterMapMarkCreateConditionType conditionType
	vuint conditionParam
}
excel class MoleMole.Config.InvestigationTargetConfig : MoleMole.Config.WatcherConfig {
	vuint questId
	vuint investigationId
	vuint rewardId
	string icon
	string image
	vuint infoDesTextMapHash
	MoleMole.Config.QuestGuide guide
}
excel class MoleMole.Config.LampProgressControlConfig {
	vuint hour
	vuint minProgress
	vuint maxProgress
}
excel class MoleMole.Config.LampRegionDataConfig {
	string region
	vuint factor
}
excel class MoleMole.Config.LanV2ProjectionSwitchButtonConfig {
	vuint id
	string textId
	string iconPath
}
excel class MoleMole.Config.LevelTagMapAreaConfig {
	vuint LevelTagID
	vuint MapAreaID
	vint index
}
excel class MoleMole.Config.ManualTextMapConfig {
	string textMapId
	vuint textMapContentTextMapHash
	MoleMole.Config.TextParamType[] paramTypes
}
excel class MoleMole.Config.MapAreaConfig {
	vuint id
	vuint sceneID
	string name
	vuint[] areaID_1
	vuint scenePointID
	MoleMole.Config.MapAreaState mapAreaState
}
excel class MoleMole.Config.MapTagDataConfig {
	vuint id
	MoleMole.Config.MapTagType type
	vuint nameTextMapHash
	vuint nameWithRubyTextTextMapHash
	vuint sortID
	string icon
	bool unlockByDefault
	bool hideBeforeUnlock
	vuint cityID
	vuint transPointID
	vuint[] sceneIdList
	float defaultLocateX
	float defaultLocateZ
}
excel class MoleMole.Config.MpPlayStatisticConfig {
	vuint id
	vuint MpPlayId
	MoleMole.Config.MpPlayerSettleType settleType
	string[] settleParam
	MoleMole.Config.MpPlayerSettleSyncType clientSyncType
	string clientSyncParam
	vuint mpchallengetitleTextMapHash
	vuint mpchallengeTextMapHash
	vuint mpchallengestyleTextMapHash
	string image
	vuint priority
}
excel class MoleMole.Config.MpPlayWatcherConfig : MoleMole.Config.WatcherConfig {
	vuint MpPlayId
	vuint priority
	bool isStore
	vuint challengeDescTextMapHash
	vuint challengeTitleTextMapHash
}
excel class MoleMole.Config.MusicGameBasicConfig {
	vuint id
	vuint musicID
	vuint musicLevel
	string jsonPath
	vuint longPressInterval
	float longPressDownSpeed
	vuint longPressPreTime
	float successPrePoint
	float successLatePoint
	vuint scaleTime
	vuint lateDropTime
	float scaleRange
	vuint[] scoreLevelList
	vuint scoreOneKey
	vuint scoreGreat
	vuint scoreLongPress
	float bpm
	map<vuint,float> bpmDict
	vuint[] ugcBeatDivisionOptions
	vuint ugcDefaultBeatDivision
	string simpleHintJsonPath
	string complexHintJsonPath
	vuint noteCount
	MoleMole.Config.ComboConfig[] comboConfig
	vuint unlockTipsTextMapHash
	MoleMole.Config.SoloConfig[] soloConfig
}
nozig excel class MoleMole.Config.ComboConfig {
	vuint comboUpLimit
	float rate
}
nozig excel class MoleMole.Config.SoloConfig {
	vuint soloStart
	vuint soloEnd
	bool isSelf
}
excel class MoleMole.Config.MusicGameDrumConfig {
	vuint id
	float[] delaySettingRange
	float[] dropSpeedSettingRange
	float[] keySoundSettingRange
	float[] perfectRange
	float[] greatRange
	vuint longPressEndCompensation
	vuint failTime
	vuint longPressHitInterval
	vuint ugcPerMusicNum
	vuint ugcMaxHistoryNum
	vuint ugcMaxSavedScoreNum
	vuint ugcMaxNoteNum
	float[] ugcRegionalNoteLimit
	float ugcLongPressNoteWeight
	float[] ugcRankScoreRatioList
	vuint ugcPublishLimit
	float ugcPrefixPlayTime
	float ugcSuffixPlayTime
	vuint ugcUndoBufferSize
	float[] ugcEditViewportRange
	float[] ugcTimeLineViewportRange
	float[] calibMusicInfo
	float[] calibViewportRange
	vuint ugcAutoAttachBeatCount
	vuint[] ugcTutorialPushTipIds
	vuint[] comboEffectShowCount
	vuint[] ugcEditorPushTipIds
	float[] ugcCursorMoveParams
	float[] ugcMusicPlaySpeedList
	vuint[] ugcTutorialBlackList
}
excel class MoleMole.Config.MusicGamePositionConfig {
	vuint interNPCID
	float[] npcPosition
	float npcRotation
	vuint npcID
	vuint markID
	vuint freeStyleID
	string banConfig
}
excel class MoleMole.Config.MusicGamePreviewConfig {
	vuint activityID
	vuint[] musicIDList
	vuint startQuestID
	vuint tutorialID
	vuint npcMarkID
}
excel class MoleMole.Config.MusicInfoConfig {
	vuint musicID
	vuint musicTime
	vuint[] levelId
	vuint musicNameTextMapHash
	vuint musicDescTextMapHash
	vuint markNameTextMapHash
	vuint markDescTextMapHash
	vuint condID
	vuint[] watcherList
	vuint avatarID
	vuint pointID
	vuint instrumentID
	vuint avatarInstrumentID
}
excel class MoleMole.Config.MusicInstrumentConfig {
	vuint instrumentID
	vuint widgetID
	vint performID
	string freeModePerfabPath
}
excel class MoleMole.Config.NewActivityEntryConfig {
	vuint id
	MoleMole.Config.NewActivityType activityType
	vint sortPriority
	string tabIcon
	string bannerPath
	string bannerEffect
	vuint tabNameTextMapHash
	vuint duration
}
excel class MoleMole.Config.NewActivityPreviewConfig {
	vuint activityID
	vuint descTextMapHash
	vuint intro_titleTextMapHash
	vuint intro_contentTextMapHash
	vuint rewardPreviewID
	vuint preQuestID
	vuint[] middleQuestIDList
	vuint[] middleQuestFinishIDList
	vuint openQuestID
	vuint pushTipsID
	vuint[] openMainQuestIDList
	vuint[] preMainQuestIDList
	vuint[] NFMCDBNFMIL
	MoleMole.Config.PreviewActivityCond[] preActivityCondition
	bool isBlocked
}
nozig excel class MoleMole.Config.PreviewActivityCond {
	vuint condtionId
	string desc
}
excel class MoleMole.Config.NewActivityPushTipsConfig {
	vuint pushTipsId
	vuint titleTextMapHash
	vuint subtitleTextMapHash
	string showIcon
	string tabIcon
	vuint tutorialId
	bool showImmediately
	vuint activityId
}
excel class MoleMole.Config.NewActivityWatcherConfig : MoleMole.Config.WatcherConfig {
	vuint rewardID
	vuint rewardPreview
	vuint activitychallengetipsTextMapHash
	vuint extraActivitychallengetipsTextMapHash
	bool isAutoGrant
}
excel class MoleMole.Config.OfferingOpenStateConfig {
	vuint offeringId
	MoleMole.Config.OpenStateType openState
	MoleMole.Config.ItemLimitType itemLimit
	bool isContinuousLevelUp
	MoleMole.Config.OfferingMaxLevelLimitType maxLevelLimitType
	vuint activityId
	bool isAllowHostInMpMode
}
excel class MoleMole.Config.PlaceNameConfig {
	vuint ID
	MoleMole.Config.TODO_NNGKLCJAEEA type
	MoleMole.Config.MapTagType mapTagType
	string placeNameID
	vuint BHNMDDDLJOJ
	MoleMole.Config.PlaceNameConditionType conditionType
	string conditionParam1
	string conditionParam2
	MoleMole.Config.PlaceNameActionType actionType
	vuint BFBHABAJMHC
}
excel class MoleMole.Config.PriceTierConfig {
	string tierName
	vuint vipPoint
}
excel class MoleMole.Config.ProductAppleGiftCardDetailConfig : MoleMole.Config.ProductDetailConfig {
	MoleMole.Config.PackageContentConfig[] contentVec
	vuint mailConfigId
}
excel class MoleMole.Config.ProductDetailConfig {
	vuint configId
	string priceTier
	MoleMole.Config.ShopType shopType
}
nozig excel class MoleMole.Config.PackageContentConfig {
	vuint materialId
	vuint materialNum
}
excel class MoleMole.Config.ProductCardDetailConfig : MoleMole.Config.ProductDetailConfig {
	MoleMole.Config.CardProductType cardProductType
	vuint itemNameTextMapHash
	string icon
	vuint totalLimitDays
	vuint days
	vuint hcoinPerDay
	vuint mcoinBase
	map<vuint,vuint> baseItemMap
	map<vuint,vuint> perDayItemMap
	vuint replaceMcoinNum
	vuint firstRewardTextTextMapHash
	vuint dailyRewardTextTextMapHash
	vuint totalRewardTextTextMapHash
	vuint totalDaysTextTextMapHash
	vuint remainDaysTextTextMapHash
	vuint remainDaysText2TextMapHash
	vuint explainTitleTextMapHash
	vuint explainDescTextMapHash
	vuint sortLevel
}
excel class MoleMole.Config.ProductGoogleGiftCardDetailConfig : MoleMole.Config.ProductDetailConfig {
	MoleMole.Config.PackageContentConfig[] contentVec
	vuint mailConfigId
}
excel class MoleMole.Config.ProductIdConfig {
	string productId
	vuint configId
	bool isInternal
	string entitlementId
	string catalogItemId
	string[] platformTypeStrList
}
excel class MoleMole.Config.ProductMcoinDetailConfig : MoleMole.Config.ProductDetailConfig {
	vuint itemNameTextMapHash
	vuint primNameTextMapHash
	string icon
	vuint mcoinNum
	vuint mcoinNonFirst
	vuint mcoinFirst
	vuint seqence
}
excel class MoleMole.Config.ProductPlayDetailConfig : MoleMole.Config.ProductDetailConfig {
	MoleMole.Config.ProductPlayType play_type
	vuint itemNameTextMapHash
}
excel class MoleMole.Config.ProductPS4PackageDetailConfig : MoleMole.Config.ProductDetailConfig {
	MoleMole.Config.PackageContentConfig[] contentVec
	vuint mailConfigId
}
excel class MoleMole.Config.ProductPsnCompensationDetailConfig : MoleMole.Config.ProductDetailConfig {
	MoleMole.Config.PackageContentConfig[] contentVec
	vuint mailConfigId
	vuint limitCount
}
excel class MoleMole.Config.PSActivitiesActivityConfig : MoleMole.Config.PSActivitiesBaseConfig {
	vuint activityNameTextMapHash
	vuint activityDescTextMapHash
	MoleMole.Config.PSActivitiesCategoryType category
	bool availableByDefault
	bool isRequiredForCompletion
	bool hidden
	bool isOnlineMultiplay
	string largeIcon
	string smallIcon
}
excel class MoleMole.Config.PSActivitiesBaseConfig {
	vuint ID
	string objectID
	string exportVersion
}
excel class MoleMole.Config.PSActivitiesSubTaskConfig : MoleMole.Config.PSActivitiesBaseConfig {
	vuint taskId
	bool hidden
}
excel class MoleMole.Config.PSActivitiesTaskConfig : MoleMole.Config.PSActivitiesBaseConfig {
	vuint activityID
	vuint taskNameTextMapHash
	bool isRequiredForCompletion
	bool hidden
}
excel class MoleMole.Config.QuestGlobalVarConfig {
	vuint id
	vint defaultValue
}
excel class MoleMole.Config.QuestPlaceConfig {
	vuint placeId
}
excel class MoleMole.Config.QuestSpecialShowConfig {
	vuint id
	MoleMole.Config.QuestSpecialShowType condType
	vuint param1
	vuint param2
	vuint showTipsTextMapHash
}
excel class MoleMole.Config.RandTaskLevelConfig {
	vuint ID
	vuint minZoneLevel
	vuint maxZoneLevel
	vuint reviseLevel
}
excel class MoleMole.Config.RandTaskRewardConfig {
	vuint ID
	MoleMole.Config.RandTaskDropConfig[] dropVec
}
nozig excel class MoleMole.Config.RandTaskDropConfig {
	vuint dropId
}
excel class MoleMole.Config.RogueGadgetRotConfig {
	vuint id
	MoleMole.Config.RogueGadgetDirType dir
	vuint rotation
}
excel class MoleMole.Config.SceneTagConfig {
	vuint id
	string sceneTagName
	vuint sceneId
	bool isDefaultValid
	bool isSkipLoading
	bool isIndependent
	MoleMole.Config.SceneTagCond[] cond
}
nozig excel class MoleMole.Config.SceneTagCond {
	MoleMole.Config.SceneTagCondType condType
	vint param1
	vint param2
}
excel class MoleMole.Config.ShopmallGoodsSaleConfig {
	vuint Id
	vuint goodsId
	vuint discountScoin
	vuint discountHcoin
	vuint discountMcoin
	float discountRate
	string discountBeginTime
	string discountEndTime
	vuint discountBeginTimestamp
	vuint discountEndTimestamp
}
excel class MoleMole.Config.ShopmallRecommendConfig {
	vuint Id
	vuint subTabId
	MoleMole.Config.ShopRecommendTabType tabType
	MoleMole.Config.ShopType shopType
	vuint[] goodsIdVec
	vuint[] configIdVec
	MoleMole.Config.LogicType condComb
	MoleMole.Config.ShopmallRecommendCond[] condVec
	vuint order
	MoleMole.Config.ShopRecommendTagType tagType
	string oneCardIconName
	string[] colShowIconName
	vuint jumpEntranceId
	bool showSaleRemainTime
}
nozig excel class MoleMole.Config.ShopmallRecommendCond {
	MoleMole.Config.ShopmallRecommendCondType type
	string param1Str
	string param2Str
	vuint param1
	vuint param2
}
excel class MoleMole.Config.SystemOpenUIConfig {
	vuint id
	vuint nameTextMapHash
	string icon_path
	vuint descTextMapHash
	vuint tutorial_id
}
excel class MoleMole.Config.TransPointRewardConfig {
	vuint scene_id
	vuint point_id
	vuint reward_id
	vuint[] group_id_vec
	vuint[] unlock_area_id_vec
}
excel class MoleMole.Config.TrialAvatarFetterDataConfig {
	vuint avatarId
	vuint fetterId
	MoleMole.Config.TrialFetterConditionConfig finishCond
}
excel class MoleMole.Config.TrialFetterConditionConfig {
	MoleMole.Config.TrialFetterConditionType condType
	vuint[] paramList
}
excel class MoleMole.Config.WorldAreaConfig {
	vuint ID
	vuint SceneID
	MoleMole.Config.WorldAreaType AreaType
	vuint AreaID_1
	vuint AreaID_2
	bool AreaDefaultLock
	vuint AreaNameTextMapHash
	vuint tower_point_id
	MoleMole.Config.ElementType elementType
	MoleMole.Config.AreaTerrainType terrainType
	bool showTips
	float minimapScale
}
excel class MoleMole.Config.WorldAreaExploreEventConfig {
	vuint EventID
	vuint SceneID
	vuint AreaID
	MoleMole.Config.ExploreEventType EventType
	string[] Param
	vuint ExploreWeight
	vuint rewardID
}
excel class MoleMole.Config.WorldAreaLevelupConfig {
	vuint scene_id
	vuint area_id
	vuint level
	MoleMole.Config.WorldAreaLevelupConsumeItem consume_item
	vuint rewardID
	MoleMole.Config.WorldAreaLevelupAction[] action_vec
}
excel class MoleMole.Config.PushTipsConfig {
	vuint pushTipsId
	vuint rewardId
	vuint titleTextMapHash
	vuint subtitleTextMapHash
	MoleMole.Config.PushTipsType pushTipsType
	string showIcon
	string tabIcon
	vuint tutorialId
	MoleMole.Config.PushTipsCodexType codexType
	vuint groupId
	bool showImmediately
	bool MJOGDHNFEOD
	bool JCFFMOOFLLN
	bool LKAPMBNPPIE
}
excel class MoleMole.Config.OpenStateConfig {
	vuint id
	bool defaultState
	bool allowClientOpen
	MoleMole.Config.OpenStateCond[] cond
	vuint system_open_ui_id
}
nozig excel class MoleMole.Config.OpenStateCond {
	MoleMole.Config.OpenStateCondType cond_type
	vuint param
	vuint param2
}
excel class MoleMole.Config.PhotographCheckAnimatorData {
	vuint id
	vuint entityConfigID
	string[] animatorList
	string[] animatorTagList
}
excel class MoleMole.Config.PhotographTask {
	vuint task_id
	MoleMole.Config.PhotographTaskType taskType
	vuint sceneID
	float centerX
	float centerY
	float centerZ
	float radius
	string[] targetGadgetID
	float startTime
	float endTime
	vuint questid
	vuint finishTipsTextMapHash
	vuint startTipsTextMapHash
}
excel class MoleMole.Config.FetterConfig {
	vuint fetterId
	vuint avatarId
	MoleMole.Config.FetterConditionConfig[] openConds
	MoleMole.Config.FetterConditionConfig[] finishConds
	MoleMole.Config.FetterConditionConfig[] concealConds
}
nozig excel class MoleMole.Config.FetterConditionConfig {
	MoleMole.Config.FetterCondType condType
	vuint[] paramList
}
excel class MoleMole.Config.ItemConfig {
	vuint id
	vuint nameTextMapHash
	vuint descTextMapHash
	string icon
	MoleMole.Config.ItemType itemType
	vuint weight
	vuint rank
	vuint gadgetId
	bool dropable
	vuint useLevel
	vuint globalItemLimit
}
excel class MoleMole.Config.ActivityCharAmusementLevelExcelConfig {
	vuint levelId
	vuint weight
	MoleMole.Config.ActivityCharAmusementLevelType levelType
	vuint galleryId
	vuint singleTarget
	vuint mpTarget
	vuint[] trialAvatarList
	string PKHCMDHLKOF
	vuint levelNameTextMapHash
	vuint levelDescTextMapHash
	vuint levelRuleTextMapHash
}
excel class MoleMole.Config.ActivityCharAmusementOverallExcelConfig {
	vuint scheduleId
	vuint dungeonId
	vuint[] levelList
	vuint randomLevelCount
}
excel class MoleMole.Config.ActivityCharAmusementStageExcelConfig {
	vuint stageId
	MoleMole.Config.ActivityCharAmusementStageType stageType
	vuint[] levelList
	vuint dayIndex
	vuint stageNameTextMapHash
}
excel class MoleMole.Config.ActivityMuqadasPotionExcelConfig {
	vuint activityId
	vuint levelTimeLimit
	vuint energyLimit
	vuint skillNumLimit
	vuint initSkillNum
	vuint onceCaptureLimit
	vuint MDBKAGHPDOA
	float BNPIAEPKPMC
	float NOHNLOALKDH
	vuint MDDAIAIJILP
	float DGNELBIHMHI
	string LLJFILEECIO
	string OIHJMIHJMGE
	string JFPFDCJBGHC
	string JAGHBKEAPPN
	string HAPPKGIILNP
	string CJIIJFOJJGG
	string MJAJGCELONP
	string FNPOKFAKJLK
	float JDOODKAJILM
	float KJBHAFFEHDB
	float DMFABEAGGAE
	vuint OOIIBIOBFJG
}
excel class MoleMole.Config.ActivityMuqadasPotionLevelExcelConfig {
	vuint levelId
	vuint openDayIndex
	vuint dungeonId
	vuint galleryId
	vuint[] trialAvatarIdList
	vuint dungeonNameTextMapHash
	vuint dungeonDescTextMapHash
	vuint skillDescTextMapHash
	string HEOLDCMJEPI
	string DDFPNMIOEOK
	vuint[] watcherList
	vuint MECCNDHCBCE
}
excel class MoleMole.Config.ActivityMuqadasPotionMonsterExcelConfig {
	vuint describeId
	float BNLFIBECGOM
	vuint[] LFPNEGKANGC
	MoleMole.Config.TODO_HFJNLBCADEC[] EJEPNEAHBNH
}
nozig excel class MoleMole.Config.TODO_HFJNLBCADEC {
	float[] position
}
excel class MoleMole.Config.ActivityRockBoardExploreQuestExcelConfig {
	vuint questStageId
	vuint questId
	vuint openDay
	string iconName
	vuint DHDIGGLDBPC
	vuint HAODJKMEEPM
}
excel class MoleMole.Config.ActivityRockBoardExploreStageExcelConfig {
	vuint id
	vuint groupBundleId
	vuint openDay
	string DMOLGAEPHOO
	vuint levelTitleTextMapHash
	vuint levelDescTextMapHash
	vuint CJMMMJPEFLG
	vuint watcherID
}
excel class MoleMole.Config.ActivityVintageCampChallengeExcelConfig {
	vuint id
	vuint openOrder
	vuint openDay
	vuint openStageId
	vuint groupBundleId
	vuint rewardId
	string[] FALBBGLHAKG
	vuint[] watcherIds
	string monsterInfo
	vuint[] eliteMonsterInfo
	vuint OLLMMJEPJHP
	vuint JMKNMACLBGK
}
excel class MoleMole.Config.ActivityVintageDataExcelConfig {
	vuint id
	vuint activityId
	vuint rewardPreviewId
	vuint firstPreChapterId
	vuint secondPreChapterId
	vuint[] weaponWatcherIds
	vuint firstPreMainQuestId
	vuint secondPreMainQuestId
	vuint maxHeat
	bool isQuestIsolated
}
excel class MoleMole.Config.ActivityVintageDecoExcelConfig {
	vuint id
	vuint[] editGroupIdList
	vuint[] watcherIds
	vuint[] furnitureIds
	string banConfig
	vuint DANHFLFJAAB
	vuint JHINKBGKDGF
	vuint openQuestID
}
excel class MoleMole.Config.ActivityVintageHuntingExcelConfig {
	vuint id
	vuint openOrder
	vuint openDay
	vuint questTriggerId
	vuint guideQuestId
	vuint galleryId
	vuint groupId
	vuint pointId
	vuint[] trialAvatarIdList
	vuint[] groupBundleIdList
	vuint[] watcherIds
	vuint tutorialId
	vuint guideQuestTitleTextMapHash
	vuint guideQuestDescTextMapHash
	vuint[] boarScoreList
	vuint LPPCLPCKDOH
	vuint MOFEBGHDEAP
}
excel class MoleMole.Config.ActivityVintageHuntingMonsterExcelConfig {
	vuint id
	vuint EOHJHADBKJP
	vuint[] monsterIdList
}
excel class MoleMole.Config.ActivityVintageMarketPrepareExcelConfig {
	vuint configID
	vuint AJKJDEFMGEO
	MoleMole.Config.MarketTradeType AMMCILCMDHF
	string GCJNMFOAJOC
	vuint descTextMapHash
	vuint OJNCNBHEJDA
	vuint markID
	vuint FMDACDFMPNJ
	vuint LMBNOJOALAD
	vuint markTipTitleTextMapHash
	vuint PGONJOOGBDM
}
excel class MoleMole.Config.ActivityVintageMarketStageExcelConfig {
	vuint stageID
	vuint openCond
	vuint openDay
	vuint openQuestID
	vuint JCJCFIALMJE
	vuint APKFDHHACDN
	vuint[] watcherList
	vuint INGCBMIGLPK
	vuint tutorialID
	vuint IABPHDCCKOC
}
excel class MoleMole.Config.ActivityVintagePlayTypeExcelConfig {
	vuint id
	vuint openDay
	vuint openCond
	vuint guideQuestId
	vuint tutorialId
	vuint questTitleTextMapHash
	vuint questDescTextMapHash
}
excel class MoleMole.Config.ActivityVintagePresentExcelConfig {
	vuint presentId
	vuint openOrder
	vuint openDay
	vuint[] groupIdList
	float[] ICHMLPMFCMD
	float IKMOIBEPFIP
	vuint rewardId
	vuint presentType
	string DAKNONJJJFN
	vuint FBPBBDDMEKM
	vuint HNFBEFMIGFJ
}
excel class MoleMole.Config.ActivityVintageQuestDataExcelConfig {
	vuint id
	vuint questId
	vuint preQuestId
	vuint openIndex
	vuint chapterTitleTextMapHash
	vuint questTitleTextMapHash
	vuint questDescTextMapHash
}
excel class MoleMole.Config.AranaraCollectionExcelConfig {
	vuint id
	MoleMole.Config.AranaraCollectionType aranaraCollectionType
}
excel class MoleMole.Config.AudioMonsterConfig {
	vuint describeId
	float score
	float ONPOBNABPGK
	float JJAGJBMPFFJ
	float PHLLINJDNED
	float JFNGHAJHCEC
	float KFBLAAFPAOI
}
excel class MoleMole.Config.AudioPlayerlvConfig {
	vuint KMAMMKECLKF
	float HIDLKIEFKCH
	vuint JAFICGCFMHB
	float HHPBOKNJAFD
	vuint CMKEGIJLMOP
	float PPEGCJDKALN
	vuint MFGACONNKFA
	float FMOCLLNFDHP
	float KLOHEBNCKNG
	vuint GDNNGDPHJFL
	float FJJDAJPAEFO
}
excel class MoleMole.Config.AudioSceneConfig {
	vuint id
	vuint sceneId
	vuint DLLAMHKGEBB
	vuint BBPDEHAAJFM
	float OJCFPIKCJJG
	vint GNAIAFIDMGD
	float MCGEEGLEAKI
	float CDJIFPIHAEN
	float NENNDKIACEP
	float HICFILAONMC
	float MMNAHALKJNL
	float IEKLJGDOIGF
	float NCDHHDECJIK
	float HOHMBNPBNFP
	float ADJEIKGJPDD
	float MOMBKEGNAPP
	float FFLHKFGKNDB
	float BEGGPNGHNIA
	float MBPCMFMPKAF
	float KFAIABIPKNH
	float NJEBFPFKCMC
	float KBMAPNEBHGD
	float FKMEMDAGECJ
	float OBJMJMMHMMM
	float IFDEDHMAKPG
	float JKEJKNHGMIO
	float MFPNJMEOHNB
	float KDBNNDLPEHE
	float PGJJMKINBPE
	float GCDGJGLDBIF
}
excel class MoleMole.Config.AvatarExtraPropExcelConfig {
	vuint id
	MoleMole.Config.ExtraPropConfig[] extra_props
	vuint maxCount
}
nozig excel class MoleMole.Config.ExtraPropConfig {
	MoleMole.Config.FightPropType propType
	vuint propValue
}
excel class MoleMole.Config.CatalogExcelConfig {
	vuint id
	MoleMole.Config.CatalogType type
	vuint[][] tabList
	MoleMole.Config.TODO_DHGJNFBCIGG[] MPDDBNCDLDK
	vuint[] syncWatcherList
	__HACK_ _HACK__1
}
nozig excel class MoleMole.Config.TODO_DHGJNFBCIGG {
	vuint HMJIHBBHGME
	vuint CMLKHCGNGGP
}
excel class MoleMole.Config.CompoundBoostExcelConfig {
	vuint id
	vuint boostTime
}
excel class MoleMole.Config.CSSceneTagConfig {
	vuint id
	string sceneTagName
}
excel class MoleMole.Config.DeathRegionLevelExcelConfig {
	vuint deathZoneLevel
	float baseErosion
	float erosionRate
}
excel class MoleMole.Config.DeshretCatalogData {
	vuint id
	vuint NBIPJOMEOHF
	vuint CAAOGEHELCE
}
excel class MoleMole.Config.DeshretObeliskArgumentExcelConfig {
	vuint argumentId
	vuint[] groupIdList
	vuint[] gadgetIdList
	string effectName
	float[] GFEADGNMHBJ
	float GFLLLPDGMNO
	float ECDIPOOFJHG
	float[] KNFDEFINEBJ
	float[] MHBODLMBKCG
	float FFGEMEKJCCL
	float LBDAMELBOAM
	float JHJLPCECJLF
}
excel class MoleMole.Config.DeshretPoiCatalogData {
	vuint id
	vuint FAFCFNNFLNG
	vuint titleTextMapHash
	string icon
	vuint descTextMapHash
	vuint GEAPKIDJLAI
	vuint HGNDDCPHALE
	vuint markDescTextMapHash
}
excel class MoleMole.Config.DeshretPushTipsCatalogData {
	vuint id
	vuint OMFELBCICOA
	vuint titleTextMapHash
	string icon
	vuint LJFOELPBDBB
	vuint CEIKHOENKIH
}
excel class MoleMole.Config.EffigyChallengeV2DifficultyExcelConfig {
	vuint id
	vuint reviseLevel
	vuint CCLAKHMIGFF
}
excel class MoleMole.Config.EffigyChallengeV2ExcelConfig {
	vuint id
	vuint dayIndex
	vuint BCHEBONBCBI
	vuint[] IKOHDCALHIJ
	vuint[] GEAKJNBBHOE
	vuint[] GPKJIHCFCJO
	string IGACOKGPCMC
	string NNPBIBILNAE
	vuint MJDKEAKLMOB
	vuint[] BHINECPHGOP
	vuint[] EGMEFDEDMFG
	vuint[] OJHLPAJDLIB
	vuint levelTitleTextMapHash
	vuint levelDescTextMapHash
	vuint HIBEOEMCHGG
	vuint MLJEIGKJGEL
}
excel class MoleMole.Config.EffigyChallengeV2OverallExcelConfig {
	vuint id
	vuint schedule_id
	vuint MHFDLJELMIA
	string NHFAMCDLDAN
}
excel class MoleMole.Config.EffigyChallengeV2SkillExcelConfig {
	vuint id
	string abilityName
	vuint EHKLPEDDHJI
	vuint skillNameTextMapHash
	vuint skillDescTextMapHash
	float[] descParam
}
excel class MoleMole.Config.EffigyChallengeV2TagExcelConfig {
	vuint id
	vuint tagDescTextMapHash
	float[][] CNNDCBKGPHF
}
excel class MoleMole.Config.FishProficientExcelConfig {
	vuint id
	MoleMole.Config.TODO_EBPMEIHOEJL[] gear
}
nozig excel class MoleMole.Config.TODO_EBPMEIHOEJL {
	vuint num
	float MACNGKPPHNA
	float PCALAEECGGH
}
excel class MoleMole.Config.FungusBaseExcelConfig {
	vuint activityId
	vuint LHLNGEMCLHN
	vuint FMBAFKAJPAD
	vuint LCAFCIFHIKN
	vuint JKKHCDCILCB
	vuint IPPAHOIJOIK
	vuint DLCGGPKMOFC
	string skillName
	string[] KNIPFBJOJHO
	string LFMOCKDCNAH
	vuint OCFAOIBODEP
	vuint DJCMCCCDILB
	vuint[] HJNLNMDPAPK
	vuint[] PEOCIFHLNBI
	vint CIMOHCCDKLH
	vuint OOLLNFEJAMB
	vuint DCBFHIEGHCA
	vuint AJJFJFLHDDC
	vuint BAMJGCKLFFL
	vuint MBKPAKDOLED
	vuint AAFDGPFLFCM
	vuint IIEAJLNIGEE
	vuint CCCNJLEHGCE
	vuint BNEAIDIDJFH
	vuint FDALMPDLBFP
	vuint GGMMCDDPEDH
	vuint JADFBCPGGKA
	vuint NALFGONNKHC
}
excel class MoleMole.Config.FungusCampExcelConfig {
	vuint campId
	vuint campNameTextMapHash
	vuint unlockDay
	vuint groupLinkId
	vuint questId
	vuint taskId
	vuint[] watcherIds
	vuint OHAEFABEDNH
}
excel class MoleMole.Config.FungusCultivateExcelConfig {
	vuint CPHHCIKBGKA
	vuint KBDMPEJGGPK
	vuint taskId
	vuint NKJDFJMIDPP
	vuint unlockDay
	vuint[] LHNMNOFPMAK
	vuint[] IEANKCICBCL
	vuint[] EFAJJALFBAL
	vuint FFFEPHBOGFI
	vuint EDBBOJIKGFN
	vuint DGDLJONBEDO
	vuint[][] BDIFFEKHGJP
	vuint[] watcherIds
	vuint tutorialId
}
excel class MoleMole.Config.FungusExcelConfig {
	vuint id
	vuint campId
	vuint FNDOIEAKANF
	vuint DABBKOALHOJ
	vuint GHCGFGJGGLK
	vuint[] IOKCFFJNKGB
	vuint configId
	float skillCD
	string HHCDNLNIKNK
	string CPCAMPEFJEC
	string LGOFJIHHBBB
	string NGEPPJFNAMM
	string EFEGLNCGALJ
	vuint JODCICBHLME
	vuint[] skillName
	vuint[] skillDesc
	vuint infoDescTextMapHash
	vuint KCIKGBMIJEI
	vuint NDAMKAJMEJH
}
excel class MoleMole.Config.FungusNameExcelConfig {
	vuint nameId
	vuint nameTextMapHash
	vuint GAGADBMFDEJ
}
excel class MoleMole.Config.FungusPlotDungeonEnemyExcelConfig {
	vuint OFDEJNPEHCF
	vuint DBCGHGLCLMB
	vuint PCCCNJLEHAE
	string PLHBJAKCAHI
	string KNBGEECADAG
	string NKNOFBCGPAK
}
excel class MoleMole.Config.FungusPlotDungeonExcelConfig {
	vuint KFJPEEBEEMI
	vuint dungeonId
	vuint[] PEOJPKNMDCH
	vuint[] ECGDPCHMMJK
	vuint[] CJCHNOGFFDP
	vuint unlockDay
	vuint MDHENPJJCHN
	string GMBFKGMHNJE
	vuint[] NHLAMGEACHO
	vuint BJMALBHHJNP
	vuint OOIEJKMHGJE
	vuint EOKECOJOGHD
	vuint IKEJPGCGHFG
	vuint KIEDIPHFKEM
	vuint FONIAHAFCAM
}
excel class MoleMole.Config.FungusTrainingDungeonEnemyAffixExcelConfig {
	vuint affixId
	vuint NDJLFFONBDM
}
excel class MoleMole.Config.FungusTrainingDungeonExcelConfig {
	vuint dungeonId
	vuint DHDMMBHPJFC
	MoleMole.Config.FungusTrainingDungeonType trainingType
	vuint unlockDay
	vuint EDHDIIGNPGB
	vuint galleryId
	vuint[] PEOJPKNMDCH
	vuint[] CJCHNOGFFDP
	vuint JEEOAHEBBKJ
	vuint AOKCEADFNAL
	vuint INMPHOCCLMB
	vuint[] CGKCADMCCAO
	vuint JANCIDJKFOG
	float baseScore
	float OLICKNPNIFP
	float MJHHINIADHA
	float DieParam
	float IBJLLAKAICJ
	vuint[] watcherIds
	vuint BADHACKNEDA
	vuint AAALFDNAKFB
	vuint NBPCCJLPIOO
	vuint MHNCGBJCGDI
	vuint[] ADBDDHHHPDD
	vuint KJOJEBMCIEC
}
excel class MoleMole.Config.GachaRestrictConfig {
	vuint gachaType
	vuint HJDGGNLJAIE
	vuint FBIFJAPEAPA
	vuint CEABHNGLIDB
	vuint JGLOLMMAPOE
}
excel class MoleMole.Config.GravenInnocenceBossDataExcelConfig {
	vuint id
	vuint bossTitleTextMapHash
	vuint[] watcherList
	vuint FLAFJAHGILG
}
excel class MoleMole.Config.GravenInnocenceCampLevelExcelConfig {
	vuint id
	vuint groupLinkID
	vuint challengeIndex
	vuint LIEEKOMCCKA
}
excel class MoleMole.Config.GravenInnocenceCampStageExcelConfig {
	vuint id
	vuint openDay
	vuint[] levelIdList
	vuint titleTextMapHash
}
excel class MoleMole.Config.GravenInnocenceCarveOverallExcelConfig {
	vuint id
	vuint[] groupIdList
	vuint[] itemIdList
	vuint[] HMDGJMEBMOB
	vuint instructionId
}
excel class MoleMole.Config.GravenInnocenceCarveStageExcelConfig {
	vuint id
	vuint MHCJCLALBHN
	vuint watcherId
	vuint openDay
}
excel class MoleMole.Config.GravenInnocenceExcelConfig {
	vuint activityId
	vuint CDMMCGEIKNN
	vuint JLFFCLOFIEO
	vuint DEABJJFAOEF
	vuint EOAAFAPIHNA
	vuint ONHBPICELAK
	vuint CJIBPMHHBDE
	vuint LKLJGKFGMCB
	vuint ADJGDEPBJIF
	vuint PBKLDMLLAHG
	vuint NOGOHAAOGAF
	vuint[] INJJHMKJBOE
	vuint BMMFOIHAPNB
	vuint JPCFCHFHIFJ
	bool MPDCOKAOLAC
}
excel class MoleMole.Config.GravenInnocenceObjectDataExcelConfig {
	vuint id
	vuint groupBundleID
	vuint AEIFADGGEIL
	vuint watcher
	string picture
	vuint descTextMapHash
	vuint HFPGBMABIFD
}
excel class MoleMole.Config.GravenInnocencePhotoStageExcelConfig {
	vuint id
	vuint openDay
	string icon
	vuint IOFMNADPIII
	vuint descTextMapHash
	vuint NIAGGHBELPD
	vuint infoDescTextMapHash
	vuint[] BDEGDJDLKOL
	vuint APFJOFKJIEA
	vuint[] watcherList
	vuint tips
	vuint ECLHPJIGHDJ
	vuint[] preQuestId
}
excel class MoleMole.Config.GravenInnocenceRaceLevelExcelConfig {
	vuint id
	vuint openDay
	vuint galleryId
	vuint groupLinkID
	vuint[] FGHIOKNDJNO
	vuint[] scoreList
	vuint levelNameTextMapHash
	vuint levelDescTextMapHash
	vuint ANEADHJBEIG
	float timeFactor
	float goldFactor
}
excel class MoleMole.Config.HomeWorldBlueprintSlotExcelConfig {
	vuint slotId
}
excel class MoleMole.Config.HomeWorldWoodExcelConfig {
	vuint GCJNLHMHPLN
	vuint OFEGCHHAJIL
	vuint[][] materialList
}
excel class MoleMole.Config.InferenceConclusionExcelConfig {
	vuint LGJAIDHGHCM
	vuint[] EJBOAIGINLA
	vuint KAOFOEPBMAG
	vuint LGLNCOEGDKI
}
excel class MoleMole.Config.InferenceFreestyleExcelConfig {
	vuint EMIBNHOHKCD
	vint NIHEIHMKLMM
	vint HJHHNALAGAK
	vint CHKMLKMJKKN
	vint NDCFDEBFFIA
}
excel class MoleMole.Config.InferencePageExcelConfig {
	vuint pageId
	vuint parentQuestId
	vuint[] JHEBIHJBHHJ
	vuint MGMAPCMHLOL
}
excel class MoleMole.Config.InferenceWordExcelConfig {
	vuint wordId
	vuint pageId
	bool defaultUnlock
	bool isCanInterpret
	MoleMole.Config.InferenceAction[] interpretAction
	bool isCanAssociate
	vuint associateWordId
	MoleMole.Config.InferenceAction[] associateAction
	vuint IDNMEDHKCLM
	vuint PLOFLIMBHNE
	vuint ADNABCBGOPL
	vuint EMIBNHOHKCD
	bool EMPCFJBNCFD
}
nozig excel class MoleMole.Config.InferenceAction {
	MoleMole.Config.InferenceActionType type
	string param
}
excel class MoleMole.Config.InstableSprayBuffExcelConfig {
	vuint id
	string abilityGroupName
	string JLECLFKAJEC
	vuint iconNameHash
	vuint elementType
	vuint buffNameTextMapHash
	vuint JLCANNADDFF
	string[] AIJNEOMLNHJ
}
excel class MoleMole.Config.InstableSprayDifficultyExcelConfig {
	vuint difficultyLevel
	vuint KIHJPPAGDOA
	float scoreRatio
	vuint CELONOKAMKF
}
excel class MoleMole.Config.InstableSprayLevelExcelConfig {
	vuint levelId
	vuint galleryId
	vuint[] buffIdList
	vuint[] OGFEHPJECEB
	vuint[] MMMFIPIOGMB
	string monsterPreview
}
excel class MoleMole.Config.InstableSprayOverallExcelConfig {
	vuint activityId
	vuint scheduldId
	vuint[] LLLDGIPKAKD
	vuint KFPGIGEJGAD
	vuint MEHHDKDECPJ
	vuint EKPEJHNJNHL
}
excel class MoleMole.Config.InstableSprayStageExcelConfig {
	vuint stageId
	vuint openDay
	vuint stageTitleTextMapHash
	vuint stageDescTextMapHash
	vuint dungeonId
	vuint[] levelIdList
	vuint[] watcherList
}
excel class MoleMole.Config.MonsterRelOverloadExcelConfig {
	vuint id
	MoleMole.Config.MonsterPolyDropListenType listenType
	string listenParamStr
	MoleMole.Config.PolyMonsterDropConfig[] polyMonsterDropConfigList
}
nozig excel class MoleMole.Config.PolyMonsterDropConfig {
	vuint[] paramList
	string dropTagStr
	MoleMole.Config.MonsterRarityType monsterRarity
	MoleMole.Config.ItemLimitType itemLimit
}
excel class MoleMole.Config.MusicRiddleConfig {
	vuint musicId
	vuint descTextMapHash
	vuint FMPGPGJEPFA
	vuint[] playList
	vuint pushTipsId
	bool isHide
	vuint FMJJNBNOHOP
	vuint JKDJIBLKHFG
}
excel class MoleMole.Config.MusicRiddlePlayConfig {
	vuint playId
	vuint materialId
	string audioEventName
	float FFKMOIAOKJO
	vint[] ILDOJCFMANL
	vuint NILJABINJBC
}
excel class MoleMole.Config.PartnerCurveExcelConfig : MoleMole.Config.MonsterCurveExcelConfig {
}
excel class MoleMole.Config.PassCatalogData {
	vuint id
	vuint MCAFBCBDILN
	vuint AOLKCFJEFNM
	string targetPoint
	MoleMole.Config.RegionType regionType
	string DBADBGFMNBL
	MoleMole.Config.TODO_BPMOGLBPJFF[] HCDNKAGIMPH
	bool JGCDCMCNOJH
	vuint BDJOBJKOFCM
}
nozig excel class MoleMole.Config.TODO_BPMOGLBPJFF {
	vuint id
	vuint weight
	vuint BDJOBJKOFCM
	string BAAAMPCHBJC
}
excel class MoleMole.Config.QuestCatalogExcelConfig {
	vuint id
	vuint[] BPACKPJCBNA
	vuint[] questId
	vuint[] questMarkID
	vuint[] NIKNOJDCAPP
	vuint titleTextMapHash
	string pic
}
excel class MoleMole.Config.QuestCatalogGuideExcelConfig {
	vuint id
	vuint questId
	vuint questMarkID
	vuint descTextMapHash
}
excel class MoleMole.Config.ReunionGuideExcelConfig {
	vuint id
	vuint ELEHIGABCON
	vuint bannerDescTextMapHash
	vuint ICKLEJBLGCJ
	MoleMole.Config.ReunionJumpType AOMLPENEJMG
	MoleMole.Config.ReunionGuideOpType MALJIAFKJBD
	MoleMole.Config.TODO_NDEOBDDICPB[] showCond
}
nozig excel class MoleMole.Config.TODO_NDEOBDDICPB {
	MoleMole.Config.ReunionGuideOpenType type
	vuint[] param
}
excel class MoleMole.Config.SpriteTagExcelConfig {
	vuint id
	string HAOBFFNNMBH
	float NGIJKOENJBI
	float ADIDJOCHKOI
	float BMCKHHBOOBI
	float JIOMLMMEIAM
	vuint PAHIFOCMOEN
	vuint IMFBAJMAAON
}
excel class MoleMole.Config.SubQuestCatalogExcelConfig {
	vuint id
	MoleMole.Config.LogicType CFLGAKLBHAG
	MoleMole.Config.TODO_ALBEJCAPEFK[] showCond
	MoleMole.Config.LogicType FMKDKECLJMA
	MoleMole.Config.TODO_ALBEJCAPEFK[] EEHMKAGLAJO
	vuint descTextMapHash
}
nozig excel class MoleMole.Config.TODO_ALBEJCAPEFK {
	MoleMole.Config.TODO_GHMFGNKKAHB type
	vuint param
}
excel class MoleMole.Config.SubSpriteTagExcelConfig {
	vuint id
	string HOPHDFIJBKN
	float NLAIPHNPNOD
	float NHCBBNJNMDL
	float NEHNIMGMHGK
}
excel class MoleMole.Config.TravelCatalogExcelConfig {
	vuint id
	vuint LEOMDIMGMCN
	vuint questId
	vuint groupId
	vuint titleTextMapHash
	vuint descTextMapHash
	string icon
}
excel class MoleMole.Config.TreasureSeelieExcelConfig {
	vuint scheduleId
	vuint EKAEONJLPLB
	vuint FMJEAMKOBHL
	vuint JCOLCLHBPFH
}
excel class MoleMole.Config.TreasureSeelieRegionExcelConfig {
	vuint id
	vuint scheduleId
	vuint openDay
	vuint galleryId
	vuint NKPLNIDANDO
	vuint[] JEFKMPBBPNC
	vuint BPKKKEAKLHH
}
excel class MoleMole.Config.TutorialCatalogExcelConfig {
	vuint id
	vuint pushTipsId
	vuint titleTextMapHash
}
excel class MoleMole.Config.VintageMarketAttrFactorExcelConfig {
	vuint id
	vuint ANBKAPGCLFK
	float factor
}
excel class MoleMole.Config.VintageMarketAttrRandomTemplateExcelConfig {
	vuint id
	vuint BEFFKEIEOGC
	vuint[] DKJKBLNOCMH
}
excel class MoleMole.Config.VintageMarketAttrUpgradeExcelConfig {
	vuint id
	MoleMole.Config.TODO_MFABHACNLBB[] BGMNHHNHNGM
}
nozig excel class MoleMole.Config.TODO_MFABHACNLBB {
	vuint[] cost
}
excel class MoleMole.Config.VintageMarketBargainExcelConfig {
	vuint bargainId
	vuint questId
	vuint LJAHGHKEIHG
	vuint DIBDEKACMJM
}
excel class MoleMole.Config.VintageMarketConstValueExcelConfig {
	vuint id
	vuint HGAPLMBDBBF
	vuint MIGPDIGAMGJ
	vuint KAHDFFKOCIL
	vuint DBEICICKLPI
	vuint CBJLONFFLLH
	vuint IMBJFLIJKOA
	float JPDNLHIJBHE
	vuint pushTipsId
	vuint PNLEAOADKHF
	vuint HECFDKBFDPP
	vuint[] ICEBGOGHDKJ
	vuint PGNEELCNANF
	vuint LFGLPGLBMDH
	vuint GKEAKNKBFBI
}
excel class MoleMole.Config.VintageMarketDealExcelConfig {
	vuint itemId
	MoleMole.Config.TODO_LFKKNLNLOKB[] BLCCEFDCEMA
}
nozig excel class MoleMole.Config.TODO_LFKKNLNLOKB {
	vuint id
	vuint price
	vuint num
}
excel class MoleMole.Config.VintageMarketEnvEventExcelConfig {
	vuint id
	vuint duration
	MoleMole.Config.VintageMarketEffectExcelConfig[] effectList
	vuint FCNMLOEFCOD
}
nozig excel class MoleMole.Config.VintageMarketEffectExcelConfig {
	MoleMole.Config.VintageMarketEffectType type
	string param
}
excel class MoleMole.Config.VintageMarketEventExcelConfig {
	vuint id
	MoleMole.Config.VintageMarketEventTriggerType triggerType
	string triggerParam
	MoleMole.Config.VintageMarketEventType eventType
	vuint eventId
}
excel class MoleMole.Config.VintageMarketHelpSkillExcelConfig {
	vuint id
	vuint effectDescTextMapHash
	MoleMole.Config.VintageMarketEffectExcelConfig effect
}
excel class MoleMole.Config.VintageMarketNpcEventExcelConfig {
	vuint id
	vuint talkId
	vuint npcId
	vuint duration
	vuint[] JPOIKIPCLDD
	MoleMole.Config.TODO_JDJFGHJEIHB[] NGDJAHNGFDK
	vuint PCLGHJFEPFG
}
nozig excel class MoleMole.Config.TODO_JDJFGHJEIHB {
	vuint talkId
	vuint rewardId
}
excel class MoleMole.Config.VintageMarketRoundExcelConfig {
	vuint id
	MoleMole.Config.TODO_MLOMFODDCFL[] HHKOGKCMBAL
}
nozig excel class MoleMole.Config.TODO_MLOMFODDCFL {
	float[] MJODDOKFLOK
	vuint BEPFGJPCBHH
	float FGEOCDAECDJ
	vuint KOJMBOEKOJJ
	float EIGIJEAGAAM
}
excel class MoleMole.Config.VintageMarketSkillExcelConfig {
	vuint id
	MoleMole.Config.VintageMarketEffectExcelConfig[] effectList
	vuint skillNameTextMapHash
	vuint skillDescTextMapHash
	vuint iconNameHash
	vuint tabType
	vuint sortOrder
}
excel class MoleMole.Config.VintageMarketStoreExcelConfig {
	vuint LPKEKKGAGMH
	vuint BHNPBBAFBEP
	vuint slotCount
	vuint[] BBANNFIGCIE
	MoleMole.Config.TODO_MDANHNBCAAH[] PFEBCKJFOIJ
	vuint EIJHHPPDGDA
	vuint[] CAKFFJCEGCC
	vuint npcId
	vuint PIJOICAGDPL
	vuint MAFJGLJEDMA
}
nozig excel class MoleMole.Config.TODO_MDANHNBCAAH {
	vuint defaultValue
	vuint maxValue
}
excel class MoleMole.Config.WindFieldShowChallengeExcelConfig {
	vint MCGILEOAADC
	vint timeLimit
	vint maxValue
	MoleMole.Config.ActivityWindFieldShowType showType
	vuint[] PKKPDMNIAPF
	vuint titleTextMapHash
	vuint IONMIFCIBPN
	vuint NCODCDLGCFC
}
excel class MoleMole.Config.WindFieldStageExcelConfig {
	vuint stageId
	vuint dayIndex
	vuint dungeonId
	vuint galleryId
	vuint[] watcherList
	vuint descTextMapHash
	vuint JPOPDCKBDLI
	vuint titleTextMapHash
}